{
  "typedefs": {
    "NodeFilter": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "XPathNSResolver": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "SVGMatrix": {
      "type": {
        "ref": "DOMMatrix",
        "generics": [],
        "isFuture": false
      }
    },
    "WebKitCSSMatrix": {
      "type": {
        "ref": "DOMMatrix",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGPoint": {
      "type": {
        "ref": "DOMPoint",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGRect": {
      "type": {
        "ref": "DOMRect",
        "generics": [],
        "isFuture": false
      }
    },
    "webkitURL": {
      "type": {
        "ref": "URL",
        "generics": [],
        "isFuture": false
      }
    },
    "ElementTagNameMap": {
      "type": {
        "intersect": [
          {
            "ref": "HTMLElementTagNameMap",
            "generics": [],
            "isFuture": false
          },
          {
            "ref": "Pick",
            "generics": [
              {
                "ref": "SVGElementTagNameMap",
                "generics": [],
                "isFuture": false
              },
              {
                "ref": "Exclude",
                "generics": [
                  {
                    "keyOf": {
                      "ref": "SVGElementTagNameMap",
                      "generics": [],
                      "isFuture": false
                    },
                    "isFuture": false
                  },
                  {
                    "keyOf": {
                      "ref": "HTMLElementTagNameMap",
                      "generics": [],
                      "isFuture": false
                    },
                    "isFuture": false
                  }
                ],
                "isFuture": false
              }
            ],
            "isFuture": false
          }
        ],
        "isFuture": false
      }
    },
    "AlgorithmIdentifier": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "BigInteger": {
      "type": {
        "ref": "Uint8Array",
        "generics": [],
        "isFuture": false
      }
    },
    "BinaryData": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "BlobPart": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "BodyInit": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "BufferSource": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "COSEAlgorithmIdentifier": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "CSSNumberish": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "CanvasImageSource": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ClipboardItemData": {
      "type": {
        "isFuture": false,
        "core": "any"
      }
    },
    "ClipboardItems": {
      "type": {
        "array": {
          "ref": "ClipboardItem",
          "generics": [],
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "ConstrainBoolean": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ConstrainDOMString": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ConstrainDouble": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ConstrainULong": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "DOMHighResTimeStamp": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "EpochTimeStamp": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "EventListenerOrEventListenerObject": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "Float32List": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "FormDataEntryValue": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "GLbitfield": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLboolean": {
      "type": {
        "core": "boolean",
        "isFuture": false
      }
    },
    "GLclampf": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLenum": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLfloat": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLint": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLint64": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLintptr": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLsizei": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLsizeiptr": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLuint": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "GLuint64": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "HTMLOrSVGImageElement": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "HTMLOrSVGScriptElement": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "HashAlgorithmIdentifier": {
      "type": {
        "ref": "AlgorithmIdentifier",
        "generics": [],
        "isFuture": false
      }
    },
    "HeadersInit": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "IDBValidKey": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ImageBitmapSource": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "InsertPosition": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "Int32List": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "LineAndPositionSetting": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaProvider": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MessageEventSource": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MutationRecordType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "NamedCurve": {
      "type": {
        "core": "string",
        "isFuture": false
      }
    },
    "OffscreenRenderingContext": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "OnBeforeUnloadEventHandler": {
      "type": {
        "ref": "OnBeforeUnloadEventHandlerNonNull",
        "generics": [],
        "isFuture": false
      }
    },
    "OnErrorEventHandler": {
      "type": {
        "ref": "OnErrorEventHandlerNonNull",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceEntryList": {
      "type": {
        "array": {
          "ref": "PerformanceEntry",
          "generics": [],
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "ReadableStreamController": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ReadableStreamReadResult": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ReadableStreamReader": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RenderingContext": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RequestInfo": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "TexImageSource": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "TimerHandler": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "Transferable": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "Uint32List": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "VibratePattern": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "WindowProxy": {
      "type": {
        "ref": "Window",
        "generics": [],
        "isFuture": false
      }
    },
    "XMLHttpRequestBodyInit": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AlignSetting": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AnimationPlayState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AnimationReplaceState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AppendMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AttestationConveyancePreference": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AudioContextLatencyCategory": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AudioContextState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AuthenticatorAttachment": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AuthenticatorTransport": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "AutoKeyword": {
      "type": {
        "core": "\"auto\"",
        "isFuture": false
      }
    },
    "AutomationRate": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "BinaryType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "BiquadFilterType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanPlayTypeResult": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasDirection": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasFillRule": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasFontKerning": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasFontStretch": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasFontVariantCaps": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasLineCap": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasLineJoin": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasTextAlign": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasTextBaseline": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CanvasTextRendering": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ChannelCountMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ChannelInterpretation": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ClientTypes": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ColorGamut": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ColorSpaceConversion": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CompositeOperation": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CompositeOperationOrAuto": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "CredentialMediationRequirement": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "DOMParserSupportedType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "DirectionSetting": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "DisplayCaptureSurfaceType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "DistanceModelType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "DocumentReadyState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "DocumentVisibilityState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "EndOfStreamError": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "EndingType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "FileSystemHandleKind": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "FillMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "FontFaceLoadStatus": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "FontFaceSetLoadStatus": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "FullscreenNavigationUI": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "GamepadHapticActuatorType": {
      "type": {
        "core": "\"vibration\"",
        "isFuture": false
      }
    },
    "GamepadMappingType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "GlobalCompositeOperation": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "HdrMetadataType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "IDBCursorDirection": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "IDBRequestReadyState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "IDBTransactionDurability": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "IDBTransactionMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ImageOrientation": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ImageSmoothingQuality": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "IterationCompositeOperation": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "KeyFormat": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "KeyType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "KeyUsage": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "LineAlignSetting": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "LockMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaDecodingType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaDeviceKind": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaEncodingType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaKeyMessageType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaKeySessionClosedReason": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaKeySessionType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaKeyStatus": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaKeysRequirement": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaSessionAction": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaSessionPlaybackState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "MediaStreamTrackState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "NavigationTimingType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "NotificationDirection": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "NotificationPermission": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "OffscreenRenderingContextId": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "OrientationLockType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "OrientationType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "OscillatorType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "OverSampleType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PanningModelType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PaymentComplete": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PermissionName": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PermissionState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PlaybackDirection": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PositionAlignSetting": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PredefinedColorSpace": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PremultiplyAlpha": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PresentationStyle": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "PublicKeyCredentialType": {
      "type": {
        "core": "\"public-key\"",
        "isFuture": false
      }
    },
    "PushEncryptionKeyName": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCBundlePolicy": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCDataChannelState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCDegradationPreference": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCDtlsTransportState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCEncodedVideoFrameType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCErrorDetailType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCIceCandidateType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCIceComponent": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCIceConnectionState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCIceGathererState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCIceGatheringState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCIceProtocol": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCIceTcpCandidateType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCIceTransportPolicy": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCIceTransportState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCPeerConnectionState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCPriorityType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCRtcpMuxPolicy": {
      "type": {
        "core": "\"require\"",
        "isFuture": false
      }
    },
    "RTCRtpTransceiverDirection": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCSctpTransportState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCSdpType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCSignalingState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCStatsIceCandidatePairState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RTCStatsType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ReadableStreamReaderMode": {
      "type": {
        "core": "\"byob\"",
        "isFuture": false
      }
    },
    "ReadableStreamType": {
      "type": {
        "core": "\"bytes\"",
        "isFuture": false
      }
    },
    "ReadyState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RecordingState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ReferrerPolicy": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RemotePlaybackState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RequestCache": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RequestCredentials": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RequestDestination": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RequestMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "RequestRedirect": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ResidentKeyRequirement": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ResizeObserverBoxOptions": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ResizeQuality": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ResponseType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ScrollBehavior": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ScrollLogicalPosition": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ScrollRestoration": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ScrollSetting": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "SecurityPolicyViolationEventDisposition": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "SelectionMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ServiceWorkerState": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ServiceWorkerUpdateViaCache": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ShadowRootMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "SlotAssignmentMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "SpeechSynthesisErrorCode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "TextTrackKind": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "TextTrackMode": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "TouchType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "TransferFunction": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "UserVerificationRequirement": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "VideoColorPrimaries": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "VideoFacingModeEnum": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "VideoMatrixCoefficients": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "VideoTransferCharacteristics": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "WebGLPowerPreference": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "WorkerType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "XMLHttpRequestResponseType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    }
  },
  "structs": {
    "AddEventListenerOptions": {
      "indexes": [],
      "props": {
        "once": {
          "_": 26,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "passive": {
          "_": 27,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "signal": {
          "_": 28,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AbortSignal",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AesCbcParams": {
      "indexes": [],
      "props": {
        "iv": {
          "_": 32,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AesCtrParams": {
      "indexes": [],
      "props": {
        "counter": {
          "_": 36,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 37,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AesDerivedKeyParams": {
      "indexes": [],
      "props": {
        "length": {
          "_": 41,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AesGcmParams": {
      "indexes": [],
      "props": {
        "additionalData": {
          "_": 45,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "iv": {
          "_": 46,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "tagLength": {
          "_": 47,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AesKeyAlgorithm": {
      "indexes": [],
      "props": {
        "length": {
          "_": 51,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AesKeyGenParams": {
      "indexes": [],
      "props": {
        "length": {
          "_": 55,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Algorithm": {
      "indexes": [],
      "props": {
        "name": {
          "_": 59,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AnalyserOptions": {
      "indexes": [],
      "props": {
        "fftSize": {
          "_": 63,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxDecibels": {
          "_": 64,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "minDecibels": {
          "_": 65,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "smoothingTimeConstant": {
          "_": 66,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AnimationEventInit": {
      "indexes": [],
      "props": {
        "animationName": {
          "_": 70,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "elapsedTime": {
          "_": 71,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pseudoElement": {
          "_": 72,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AnimationPlaybackEventInit": {
      "indexes": [],
      "props": {
        "currentTime": {
          "_": 76,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timelineTime": {
          "_": 77,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AssignedNodesOptions": {
      "indexes": [],
      "props": {
        "flatten": {
          "_": 81,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioBufferOptions": {
      "indexes": [],
      "props": {
        "length": {
          "_": 85,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfChannels": {
          "_": 86,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleRate": {
          "_": 87,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioBufferSourceOptions": {
      "indexes": [],
      "props": {
        "buffer": {
          "_": 91,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "detune": {
          "_": 92,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "loop": {
          "_": 93,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "loopEnd": {
          "_": 94,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "loopStart": {
          "_": 95,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackRate": {
          "_": 96,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioConfiguration": {
      "indexes": [],
      "props": {
        "bitrate": {
          "_": 100,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "channels": {
          "_": 101,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "contentType": {
          "_": 102,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "samplerate": {
          "_": 103,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "spatialRendering": {
          "_": 104,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioContextOptions": {
      "indexes": [],
      "props": {
        "latencyHint": {
          "_": 108,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleRate": {
          "_": 109,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioNodeOptions": {
      "indexes": [],
      "props": {
        "channelCount": {
          "_": 113,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "channelCountMode": {
          "_": 114,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ChannelCountMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "channelInterpretation": {
          "_": 115,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ChannelInterpretation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioProcessingEventInit": {
      "indexes": [],
      "props": {
        "inputBuffer": {
          "_": 119,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "outputBuffer": {
          "_": 120,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackTime": {
          "_": 121,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioTimestamp": {
      "indexes": [],
      "props": {
        "contextTime": {
          "_": 125,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "performanceTime": {
          "_": 126,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioWorkletNodeOptions": {
      "indexes": [],
      "props": {
        "numberOfInputs": {
          "_": 130,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfOutputs": {
          "_": 131,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "outputChannelCount": {
          "_": 132,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "number",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "parameterData": {
          "_": 133,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Record",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              },
              {
                "core": "number",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "processorOptions": {
          "_": 134,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AuthenticationExtensionsClientInputs": {
      "indexes": [],
      "props": {
        "appid": {
          "_": 138,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "credProps": {
          "_": 139,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "hmacCreateSecret": {
          "_": 140,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AuthenticationExtensionsClientOutputs": {
      "indexes": [],
      "props": {
        "appid": {
          "_": 144,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "credProps": {
          "_": 145,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CredentialPropertiesOutput",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "hmacCreateSecret": {
          "_": 146,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AuthenticatorSelectionCriteria": {
      "indexes": [],
      "props": {
        "authenticatorAttachment": {
          "_": 150,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AuthenticatorAttachment",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "requireResidentKey": {
          "_": 151,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "residentKey": {
          "_": 152,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ResidentKeyRequirement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "userVerification": {
          "_": 153,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UserVerificationRequirement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BiquadFilterOptions": {
      "indexes": [],
      "props": {
        "Q": {
          "_": 157,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "detune": {
          "_": 158,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "frequency": {
          "_": 159,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "gain": {
          "_": 160,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 161,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BiquadFilterType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BlobEventInit": {
      "indexes": [],
      "props": {
        "data": {
          "_": 165,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Blob",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timecode": {
          "_": 166,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BlobPropertyBag": {
      "indexes": [],
      "props": {
        "endings": {
          "_": 170,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "EndingType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 171,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CSSStyleSheetInit": {
      "indexes": [],
      "props": {
        "baseURL": {
          "_": 175,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "disabled": {
          "_": 176,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 177,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CacheQueryOptions": {
      "indexes": [],
      "props": {
        "ignoreMethod": {
          "_": 181,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ignoreSearch": {
          "_": 182,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ignoreVary": {
          "_": 183,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasRenderingContext2DSettings": {
      "indexes": [],
      "props": {
        "alpha": {
          "_": 187,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "colorSpace": {
          "_": 188,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PredefinedColorSpace",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "desynchronized": {
          "_": 189,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "willReadFrequently": {
          "_": 190,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ChannelMergerOptions": {
      "indexes": [],
      "props": {
        "numberOfInputs": {
          "_": 194,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ChannelSplitterOptions": {
      "indexes": [],
      "props": {
        "numberOfOutputs": {
          "_": 198,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ClientQueryOptions": {
      "indexes": [],
      "props": {
        "includeUncontrolled": {
          "_": 202,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 203,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ClientTypes",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ClipboardEventInit": {
      "indexes": [],
      "props": {
        "clipboardData": {
          "_": 207,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DataTransfer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ClipboardItemOptions": {
      "indexes": [],
      "props": {
        "presentationStyle": {
          "_": 211,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PresentationStyle",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CloseEventInit": {
      "indexes": [],
      "props": {
        "code": {
          "_": 215,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "reason": {
          "_": 216,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "wasClean": {
          "_": 217,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CompositionEventInit": {
      "indexes": [],
      "props": {
        "data": {
          "_": 221,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ComputedEffectTiming": {
      "indexes": [],
      "props": {
        "activeDuration": {
          "_": 225,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "currentIteration": {
          "_": 226,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "endTime": {
          "_": 227,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "localTime": {
          "_": 228,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "progress": {
          "_": 229,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "startTime": {
          "_": 230,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ComputedKeyframe": {
      "indexes": [
        {
          "_": 238,
          "key": {
            "core": "string",
            "isFuture": false
          },
          "value": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "props": {
        "composite": {
          "_": 234,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CompositeOperationOrAuto",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "computedOffset": {
          "_": 235,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "easing": {
          "_": 236,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "offset": {
          "_": 237,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ConstantSourceOptions": {
      "indexes": [],
      "props": {
        "offset": {
          "_": 242,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ConstrainBooleanParameters": {
      "indexes": [],
      "props": {
        "exact": {
          "_": 246,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ideal": {
          "_": 247,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ConstrainDOMStringParameters": {
      "indexes": [],
      "props": {
        "exact": {
          "_": 251,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "ideal": {
          "_": 252,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ConstrainDoubleRange": {
      "indexes": [],
      "props": {
        "exact": {
          "_": 256,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ideal": {
          "_": 257,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ConstrainULongRange": {
      "indexes": [],
      "props": {
        "exact": {
          "_": 261,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ideal": {
          "_": 262,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ConvolverOptions": {
      "indexes": [],
      "props": {
        "buffer": {
          "_": 266,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "disableNormalization": {
          "_": 267,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CredentialCreationOptions": {
      "indexes": [],
      "props": {
        "publicKey": {
          "_": 271,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PublicKeyCredentialCreationOptions",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "signal": {
          "_": 272,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AbortSignal",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CredentialPropertiesOutput": {
      "indexes": [],
      "props": {
        "rk": {
          "_": 276,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CredentialRequestOptions": {
      "indexes": [],
      "props": {
        "mediation": {
          "_": 280,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CredentialMediationRequirement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "publicKey": {
          "_": 281,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PublicKeyCredentialRequestOptions",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "signal": {
          "_": 282,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AbortSignal",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CryptoKeyPair": {
      "indexes": [],
      "props": {
        "privateKey": {
          "_": 286,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CryptoKey",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "publicKey": {
          "_": 287,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CryptoKey",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CustomEventInit": {
      "indexes": [],
      "props": {
        "detail": {
          "_": 291,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "DOMMatrix2DInit": {
      "indexes": [],
      "props": {
        "a": {
          "_": 295,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "b": {
          "_": 296,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "c": {
          "_": 297,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "d": {
          "_": 298,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "e": {
          "_": 299,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "f": {
          "_": 300,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m11": {
          "_": 301,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m12": {
          "_": 302,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m21": {
          "_": 303,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m22": {
          "_": 304,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m41": {
          "_": 305,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m42": {
          "_": 306,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMMatrixInit": {
      "indexes": [],
      "props": {
        "is2D": {
          "_": 310,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "m13": {
          "_": 311,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m14": {
          "_": 312,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m23": {
          "_": 313,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m24": {
          "_": 314,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m31": {
          "_": 315,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m32": {
          "_": 316,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m33": {
          "_": 317,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m34": {
          "_": 318,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m43": {
          "_": 319,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m44": {
          "_": 320,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMPointInit": {
      "indexes": [],
      "props": {
        "w": {
          "_": 324,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 325,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 326,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "z": {
          "_": 327,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMQuadInit": {
      "indexes": [],
      "props": {
        "p1": {
          "_": 331,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMPointInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "p2": {
          "_": 332,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMPointInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "p3": {
          "_": 333,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMPointInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "p4": {
          "_": 334,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMPointInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMRectInit": {
      "indexes": [],
      "props": {
        "height": {
          "_": 338,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 339,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 340,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 341,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DelayOptions": {
      "indexes": [],
      "props": {
        "delayTime": {
          "_": 345,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxDelayTime": {
          "_": 346,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DeviceMotionEventAccelerationInit": {
      "indexes": [],
      "props": {
        "x": {
          "_": 350,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 351,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "z": {
          "_": 352,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DeviceMotionEventInit": {
      "indexes": [],
      "props": {
        "acceleration": {
          "_": 356,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DeviceMotionEventAccelerationInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "accelerationIncludingGravity": {
          "_": 357,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DeviceMotionEventAccelerationInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "interval": {
          "_": 358,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "rotationRate": {
          "_": 359,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DeviceMotionEventRotationRateInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DeviceMotionEventRotationRateInit": {
      "indexes": [],
      "props": {
        "alpha": {
          "_": 363,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "beta": {
          "_": 364,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "gamma": {
          "_": 365,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DeviceOrientationEventInit": {
      "indexes": [],
      "props": {
        "absolute": {
          "_": 369,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "alpha": {
          "_": 370,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "beta": {
          "_": 371,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "gamma": {
          "_": 372,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DisplayMediaStreamOptions": {
      "indexes": [],
      "props": {
        "audio": {
          "_": 376,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "video": {
          "_": 377,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DocumentTimelineOptions": {
      "indexes": [],
      "props": {
        "originTime": {
          "_": 381,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DoubleRange": {
      "indexes": [],
      "props": {
        "max": {
          "_": 385,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "min": {
          "_": 386,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DragEventInit": {
      "indexes": [],
      "props": {
        "dataTransfer": {
          "_": 390,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DataTransfer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DynamicsCompressorOptions": {
      "indexes": [],
      "props": {
        "attack": {
          "_": 394,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "knee": {
          "_": 395,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ratio": {
          "_": 396,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "release": {
          "_": 397,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "threshold": {
          "_": 398,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EcKeyAlgorithm": {
      "indexes": [],
      "props": {
        "namedCurve": {
          "_": 402,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NamedCurve",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EcKeyGenParams": {
      "indexes": [],
      "props": {
        "namedCurve": {
          "_": 406,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NamedCurve",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EcKeyImportParams": {
      "indexes": [],
      "props": {
        "namedCurve": {
          "_": 410,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NamedCurve",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EcdhKeyDeriveParams": {
      "indexes": [],
      "props": {
        "public": {
          "_": 414,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CryptoKey",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EcdsaParams": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 418,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HashAlgorithmIdentifier",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EffectTiming": {
      "indexes": [],
      "props": {
        "delay": {
          "_": 422,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "direction": {
          "_": 423,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PlaybackDirection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "duration": {
          "_": 424,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "easing": {
          "_": 425,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "endDelay": {
          "_": 426,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 427,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FillMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "iterationStart": {
          "_": 428,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "iterations": {
          "_": 429,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackRate": {
          "_": 430,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ElementCreationOptions": {
      "indexes": [],
      "props": {
        "is": {
          "_": 434,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ElementDefinitionOptions": {
      "indexes": [],
      "props": {
        "extends": {
          "_": 438,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ErrorEventInit": {
      "indexes": [],
      "props": {
        "colno": {
          "_": 442,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "error": {
          "_": 443,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "filename": {
          "_": 444,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lineno": {
          "_": 445,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "message": {
          "_": 446,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EventInit": {
      "indexes": [],
      "props": {
        "bubbles": {
          "_": 450,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancelable": {
          "_": 451,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "composed": {
          "_": 452,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EventListenerOptions": {
      "indexes": [],
      "props": {
        "capture": {
          "_": 456,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EventModifierInit": {
      "indexes": [],
      "props": {
        "altKey": {
          "_": 460,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ctrlKey": {
          "_": 461,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "metaKey": {
          "_": 462,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierAltGraph": {
          "_": 463,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierCapsLock": {
          "_": 464,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierFn": {
          "_": 465,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierFnLock": {
          "_": 466,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierHyper": {
          "_": 467,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierNumLock": {
          "_": 468,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierScrollLock": {
          "_": 469,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierSuper": {
          "_": 470,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierSymbol": {
          "_": 471,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "modifierSymbolLock": {
          "_": 472,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "shiftKey": {
          "_": 473,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EventSourceInit": {
      "indexes": [],
      "props": {
        "withCredentials": {
          "_": 477,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FilePropertyBag": {
      "indexes": [],
      "props": {
        "lastModified": {
          "_": 481,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemFlags": {
      "indexes": [],
      "props": {
        "create": {
          "_": 485,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "exclusive": {
          "_": 486,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemGetDirectoryOptions": {
      "indexes": [],
      "props": {
        "create": {
          "_": 490,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemGetFileOptions": {
      "indexes": [],
      "props": {
        "create": {
          "_": 494,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemRemoveOptions": {
      "indexes": [],
      "props": {
        "recursive": {
          "_": 498,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FocusEventInit": {
      "indexes": [],
      "props": {
        "relatedTarget": {
          "_": 502,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FocusOptions": {
      "indexes": [],
      "props": {
        "preventScroll": {
          "_": 506,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FontFaceDescriptors": {
      "indexes": [],
      "props": {
        "display": {
          "_": 510,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "featureSettings": {
          "_": 511,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "stretch": {
          "_": 512,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "style": {
          "_": 513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "unicodeRange": {
          "_": 514,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "variant": {
          "_": 515,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "weight": {
          "_": 516,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FontFaceSetLoadEventInit": {
      "indexes": [],
      "props": {
        "fontfaces": {
          "_": 520,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "FontFace",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FormDataEventInit": {
      "indexes": [],
      "props": {
        "formData": {
          "_": 524,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FormData",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FullscreenOptions": {
      "indexes": [],
      "props": {
        "navigationUI": {
          "_": 528,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FullscreenNavigationUI",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "GainOptions": {
      "indexes": [],
      "props": {
        "gain": {
          "_": 532,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "GamepadEventInit": {
      "indexes": [],
      "props": {
        "gamepad": {
          "_": 536,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Gamepad",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "GetAnimationsOptions": {
      "indexes": [],
      "props": {
        "subtree": {
          "_": 540,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "GetNotificationOptions": {
      "indexes": [],
      "props": {
        "tag": {
          "_": 544,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "GetRootNodeOptions": {
      "indexes": [],
      "props": {
        "composed": {
          "_": 548,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HashChangeEventInit": {
      "indexes": [],
      "props": {
        "newURL": {
          "_": 552,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "oldURL": {
          "_": 553,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HkdfParams": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 557,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HashAlgorithmIdentifier",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "info": {
          "_": 558,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "salt": {
          "_": 559,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HmacImportParams": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 563,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HashAlgorithmIdentifier",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 564,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HmacKeyAlgorithm": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 568,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "KeyAlgorithm",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 569,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HmacKeyGenParams": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 573,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HashAlgorithmIdentifier",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 574,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBDatabaseInfo": {
      "indexes": [],
      "props": {
        "name": {
          "_": 578,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "version": {
          "_": 579,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBIndexParameters": {
      "indexes": [],
      "props": {
        "multiEntry": {
          "_": 583,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "unique": {
          "_": 584,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBObjectStoreParameters": {
      "indexes": [],
      "props": {
        "autoIncrement": {
          "_": 588,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "keyPath": {
          "_": 589,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBTransactionOptions": {
      "indexes": [],
      "props": {
        "durability": {
          "_": 593,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBTransactionDurability",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBVersionChangeEventInit": {
      "indexes": [],
      "props": {
        "newVersion": {
          "_": 597,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "oldVersion": {
          "_": 598,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IIRFilterOptions": {
      "indexes": [],
      "props": {
        "feedback": {
          "_": 602,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "number",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "feedforward": {
          "_": 603,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "number",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IdleRequestOptions": {
      "indexes": [],
      "props": {
        "timeout": {
          "_": 607,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ImageBitmapOptions": {
      "indexes": [],
      "props": {
        "colorSpaceConversion": {
          "_": 611,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ColorSpaceConversion",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "imageOrientation": {
          "_": 612,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ImageOrientation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "premultiplyAlpha": {
          "_": 613,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PremultiplyAlpha",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "resizeHeight": {
          "_": 614,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "resizeQuality": {
          "_": 615,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ResizeQuality",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "resizeWidth": {
          "_": 616,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ImageBitmapRenderingContextSettings": {
      "indexes": [],
      "props": {
        "alpha": {
          "_": 620,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ImageDataSettings": {
      "indexes": [],
      "props": {
        "colorSpace": {
          "_": 624,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PredefinedColorSpace",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ImportMeta": {
      "indexes": [],
      "props": {
        "url": {
          "_": 628,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The type of `import.meta`.\r\n\r\nIf you need to declare that a given property exists on `import.meta`,\r\nthis type may be augmented via interface merging.\nThe type of `import.meta`.\n\nIf you need to declare that a given property exists on `import.meta`,\nthis type may be augmented via interface merging."
    },
    "InputEventInit": {
      "indexes": [],
      "props": {
        "data": {
          "_": 632,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dataTransfer": {
          "_": 633,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DataTransfer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "inputType": {
          "_": 634,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "isComposing": {
          "_": 635,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "targetRanges": {
          "_": 636,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "StaticRange",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IntersectionObserverEntryInit": {
      "indexes": [],
      "props": {
        "boundingClientRect": {
          "_": 640,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMRectInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "intersectionRatio": {
          "_": 641,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "intersectionRect": {
          "_": 642,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMRectInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isIntersecting": {
          "_": 643,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "rootBounds": {
          "_": 644,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DOMRectInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 645,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "time": {
          "_": 646,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IntersectionObserverInit": {
      "indexes": [],
      "props": {
        "root": {
          "_": 650,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "rootMargin": {
          "_": 651,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "threshold": {
          "_": 652,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "JsonWebKey": {
      "indexes": [],
      "props": {
        "alg": {
          "_": 656,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "crv": {
          "_": 657,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "d": {
          "_": 658,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dp": {
          "_": 659,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dq": {
          "_": 660,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "e": {
          "_": 661,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ext": {
          "_": 662,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "k": {
          "_": 663,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "key_ops": {
          "_": 664,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "kty": {
          "_": 665,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "n": {
          "_": 666,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "oth": {
          "_": 667,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RsaOtherPrimesInfo",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "p": {
          "_": 668,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "q": {
          "_": 669,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "qi": {
          "_": 670,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "use": {
          "_": 671,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 672,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 673,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "KeyAlgorithm": {
      "indexes": [],
      "props": {
        "name": {
          "_": 677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "KeyboardEventInit": {
      "indexes": [],
      "props": {
        "charCode": {
          "_": 682,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "code": {
          "_": 683,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "isComposing": {
          "_": 684,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "key": {
          "_": 685,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "keyCode": {
          "_": 687,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "location": {
          "_": 688,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "repeat": {
          "_": 689,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Keyframe": {
      "indexes": [
        {
          "_": 696,
          "key": {
            "core": "string",
            "isFuture": false
          },
          "value": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "props": {
        "composite": {
          "_": 693,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CompositeOperationOrAuto",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "easing": {
          "_": 694,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "offset": {
          "_": 695,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "KeyframeAnimationOptions": {
      "indexes": [],
      "props": {
        "id": {
          "_": 700,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "KeyframeEffectOptions": {
      "indexes": [],
      "props": {
        "composite": {
          "_": 704,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CompositeOperation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "iterationComposite": {
          "_": 705,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IterationCompositeOperation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pseudoElement": {
          "_": 706,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "LockInfo": {
      "indexes": [],
      "props": {
        "clientId": {
          "_": 710,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 711,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "LockMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 712,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "LockManagerSnapshot": {
      "indexes": [],
      "props": {
        "held": {
          "_": 716,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "LockInfo",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "pending": {
          "_": 717,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "LockInfo",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "LockOptions": {
      "indexes": [],
      "props": {
        "ifAvailable": {
          "_": 721,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 722,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "LockMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "signal": {
          "_": 723,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AbortSignal",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "steal": {
          "_": 724,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaCapabilitiesDecodingInfo": {
      "indexes": [],
      "props": {
        "configuration": {
          "_": 728,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaDecodingConfiguration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaCapabilitiesEncodingInfo": {
      "indexes": [],
      "props": {
        "configuration": {
          "_": 732,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaEncodingConfiguration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaCapabilitiesInfo": {
      "indexes": [],
      "props": {
        "powerEfficient": {
          "_": 736,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "smooth": {
          "_": 737,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "supported": {
          "_": 738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaConfiguration": {
      "indexes": [],
      "props": {
        "audio": {
          "_": 742,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioConfiguration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "video": {
          "_": 743,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "VideoConfiguration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaDecodingConfiguration": {
      "indexes": [],
      "props": {
        "type": {
          "_": 747,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaDecodingType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaElementAudioSourceOptions": {
      "indexes": [],
      "props": {
        "mediaElement": {
          "_": 751,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLMediaElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaEncodingConfiguration": {
      "indexes": [],
      "props": {
        "type": {
          "_": 755,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaEncodingType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaEncryptedEventInit": {
      "indexes": [],
      "props": {
        "initData": {
          "_": 759,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initDataType": {
          "_": 760,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaImage": {
      "indexes": [],
      "props": {
        "sizes": {
          "_": 764,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 765,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 766,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaKeyMessageEventInit": {
      "indexes": [],
      "props": {
        "message": {
          "_": 770,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "messageType": {
          "_": 771,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaKeyMessageType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaKeySystemConfiguration": {
      "indexes": [],
      "props": {
        "audioCapabilities": {
          "_": 775,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MediaKeySystemMediaCapability",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "distinctiveIdentifier": {
          "_": 776,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaKeysRequirement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initDataTypes": {
          "_": 777,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "label": {
          "_": 778,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "persistentState": {
          "_": 779,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaKeysRequirement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "sessionTypes": {
          "_": 780,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "videoCapabilities": {
          "_": 781,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MediaKeySystemMediaCapability",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaKeySystemMediaCapability": {
      "indexes": [],
      "props": {
        "contentType": {
          "_": 785,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "encryptionScheme": {
          "_": 786,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "robustness": {
          "_": 787,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaMetadataInit": {
      "indexes": [],
      "props": {
        "album": {
          "_": 791,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "artist": {
          "_": 792,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "artwork": {
          "_": 793,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MediaImage",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "title": {
          "_": 794,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaPositionState": {
      "indexes": [],
      "props": {
        "duration": {
          "_": 798,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackRate": {
          "_": 799,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "position": {
          "_": 800,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaQueryListEventInit": {
      "indexes": [],
      "props": {
        "matches": {
          "_": 804,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 805,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaRecorderOptions": {
      "indexes": [],
      "props": {
        "audioBitsPerSecond": {
          "_": 809,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "bitsPerSecond": {
          "_": 810,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "mimeType": {
          "_": 811,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "videoBitsPerSecond": {
          "_": 812,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaSessionActionDetails": {
      "indexes": [],
      "props": {
        "action": {
          "_": 816,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaSessionAction",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "fastSeek": {
          "_": 817,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "seekOffset": {
          "_": 818,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "seekTime": {
          "_": 819,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaStreamAudioSourceOptions": {
      "indexes": [],
      "props": {
        "mediaStream": {
          "_": 823,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStream",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaStreamConstraints": {
      "indexes": [],
      "props": {
        "audio": {
          "_": 827,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "peerIdentity": {
          "_": 828,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "preferCurrentTab": {
          "_": 829,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "video": {
          "_": 830,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaStreamTrackEventInit": {
      "indexes": [],
      "props": {
        "track": {
          "_": 834,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaTrackCapabilities": {
      "indexes": [],
      "props": {
        "aspectRatio": {
          "_": 838,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DoubleRange",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "autoGainControl": {
          "_": 839,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "boolean",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "channelCount": {
          "_": 840,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ULongRange",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cursor": {
          "_": 841,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "deviceId": {
          "_": 842,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "displaySurface": {
          "_": 843,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "echoCancellation": {
          "_": 844,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "boolean",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "facingMode": {
          "_": 845,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "frameRate": {
          "_": 846,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DoubleRange",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "groupId": {
          "_": 847,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 848,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ULongRange",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "latency": {
          "_": 849,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DoubleRange",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "logicalSurface": {
          "_": 850,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "noiseSuppression": {
          "_": 851,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "boolean",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "resizeMode": {
          "_": 852,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleRate": {
          "_": 853,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ULongRange",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleSize": {
          "_": 854,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ULongRange",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 855,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ULongRange",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaTrackConstraintSet": {
      "indexes": [],
      "props": {
        "aspectRatio": {
          "_": 859,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainDouble",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "autoGainControl": {
          "_": 860,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainBoolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "channelCount": {
          "_": 861,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainULong",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "deviceId": {
          "_": 862,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainDOMString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "echoCancellation": {
          "_": 863,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainBoolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "facingMode": {
          "_": 864,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainDOMString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "frameRate": {
          "_": 865,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainDouble",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "groupId": {
          "_": 866,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainDOMString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 867,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainULong",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "latency": {
          "_": 868,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainDouble",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "noiseSuppression": {
          "_": 869,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainBoolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleRate": {
          "_": 870,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainULong",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleSize": {
          "_": 871,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainULong",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "suppressLocalAudioPlayback": {
          "_": 872,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainBoolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 873,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ConstrainULong",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaTrackConstraints": {
      "indexes": [],
      "props": {
        "advanced": {
          "_": 877,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MediaTrackConstraintSet",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaTrackSettings": {
      "indexes": [],
      "props": {
        "aspectRatio": {
          "_": 881,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "autoGainControl": {
          "_": 882,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "deviceId": {
          "_": 883,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "echoCancellation": {
          "_": 884,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "facingMode": {
          "_": 885,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "frameRate": {
          "_": 886,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "groupId": {
          "_": 887,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 888,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "noiseSuppression": {
          "_": 889,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "restrictOwnAudio": {
          "_": 890,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleRate": {
          "_": 891,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleSize": {
          "_": 892,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 893,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaTrackSupportedConstraints": {
      "indexes": [],
      "props": {
        "aspectRatio": {
          "_": 897,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "autoGainControl": {
          "_": 898,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "deviceId": {
          "_": 899,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "echoCancellation": {
          "_": 900,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "facingMode": {
          "_": 901,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "frameRate": {
          "_": 902,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "groupId": {
          "_": 903,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 904,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "noiseSuppression": {
          "_": 905,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleRate": {
          "_": 906,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleSize": {
          "_": 907,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "suppressLocalAudioPlayback": {
          "_": 908,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 909,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MessageEventInit": {
      "indexes": [],
      "props": {
        "data": {
          "_": 913,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lastEventId": {
          "_": 914,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "origin": {
          "_": 915,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ports": {
          "_": 916,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MessagePort",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "source": {
          "_": 917,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "MessageEventSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "MouseEventInit": {
      "indexes": [],
      "props": {
        "button": {
          "_": 921,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buttons": {
          "_": 922,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientX": {
          "_": 923,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientY": {
          "_": 924,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "movementX": {
          "_": 925,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "movementY": {
          "_": 926,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "relatedTarget": {
          "_": 927,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "screenX": {
          "_": 928,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "screenY": {
          "_": 929,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MultiCacheQueryOptions": {
      "indexes": [],
      "props": {
        "cacheName": {
          "_": 933,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MutationObserverInit": {
      "indexes": [],
      "props": {
        "attributeFilter": {
          "_": 938,
          "doc": "Set to a list of attribute local names (without namespace) if not all attribute mutations need to be observed and attributes is true or omitted.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "attributeOldValue": {
          "_": 940,
          "doc": "Set to true if attributes is true or omitted and target's attribute value before the mutation needs to be recorded.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "attributes": {
          "_": 942,
          "doc": "Set to true if mutations to target's attributes are to be observed. Can be omitted if attributeOldValue or attributeFilter is specified.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "characterData": {
          "_": 944,
          "doc": "Set to true if mutations to target's data are to be observed. Can be omitted if characterDataOldValue is specified.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "characterDataOldValue": {
          "_": 946,
          "doc": "Set to true if characterData is set to true or omitted and target's data before the mutation needs to be recorded.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "childList": {
          "_": 948,
          "doc": "Set to true if mutations to target's children are to be observed.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "subtree": {
          "_": 950,
          "doc": "Set to true if mutations to not just target, but also target's descendants are to be observed.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NavigationPreloadState": {
      "indexes": [],
      "props": {
        "enabled": {
          "_": 954,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "headerValue": {
          "_": 955,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NotificationAction": {
      "indexes": [],
      "props": {
        "action": {
          "_": 959,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "icon": {
          "_": 960,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "title": {
          "_": 961,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NotificationOptions": {
      "indexes": [],
      "props": {
        "actions": {
          "_": 965,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "NotificationAction",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "badge": {
          "_": 966,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "body": {
          "_": 967,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "data": {
          "_": 968,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "dir": {
          "_": 969,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NotificationDirection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "icon": {
          "_": 970,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "image": {
          "_": 971,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lang": {
          "_": 972,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "renotify": {
          "_": 973,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "requireInteraction": {
          "_": 974,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "silent": {
          "_": 975,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "tag": {
          "_": 976,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "timestamp": {
          "_": 977,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "EpochTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "vibrate": {
          "_": 978,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "VibratePattern",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OfflineAudioCompletionEventInit": {
      "indexes": [],
      "props": {
        "renderedBuffer": {
          "_": 982,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OfflineAudioContextOptions": {
      "indexes": [],
      "props": {
        "length": {
          "_": 986,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfChannels": {
          "_": 987,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleRate": {
          "_": 988,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OptionalEffectTiming": {
      "indexes": [],
      "props": {
        "delay": {
          "_": 992,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "direction": {
          "_": 993,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PlaybackDirection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "duration": {
          "_": 994,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "easing": {
          "_": 995,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "endDelay": {
          "_": 996,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 997,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FillMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "iterationStart": {
          "_": 998,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "iterations": {
          "_": 999,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackRate": {
          "_": 1000,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OscillatorOptions": {
      "indexes": [],
      "props": {
        "detune": {
          "_": 1004,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "frequency": {
          "_": 1005,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "periodicWave": {
          "_": 1006,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PeriodicWave",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1007,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "OscillatorType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PageTransitionEventInit": {
      "indexes": [],
      "props": {
        "persisted": {
          "_": 1011,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PannerOptions": {
      "indexes": [],
      "props": {
        "coneInnerAngle": {
          "_": 1015,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "coneOuterAngle": {
          "_": 1016,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "coneOuterGain": {
          "_": 1017,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "distanceModel": {
          "_": 1018,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DistanceModelType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "maxDistance": {
          "_": 1019,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "orientationX": {
          "_": 1020,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "orientationY": {
          "_": 1021,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "orientationZ": {
          "_": 1022,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "panningModel": {
          "_": 1023,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PanningModelType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "positionX": {
          "_": 1024,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "positionY": {
          "_": 1025,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "positionZ": {
          "_": 1026,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "refDistance": {
          "_": 1027,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "rolloffFactor": {
          "_": 1028,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentCurrencyAmount": {
      "indexes": [],
      "props": {
        "currency": {
          "_": 1032,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 1033,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentDetailsBase": {
      "indexes": [],
      "props": {
        "displayItems": {
          "_": 1037,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PaymentItem",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "modifiers": {
          "_": 1038,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PaymentDetailsModifier",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentDetailsInit": {
      "indexes": [],
      "props": {
        "id": {
          "_": 1042,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "total": {
          "_": 1043,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PaymentItem",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentDetailsModifier": {
      "indexes": [],
      "props": {
        "additionalDisplayItems": {
          "_": 1047,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PaymentItem",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "data": {
          "_": 1048,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "supportedMethods": {
          "_": 1049,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "total": {
          "_": 1050,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PaymentItem",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentDetailsUpdate": {
      "indexes": [],
      "props": {
        "paymentMethodErrors": {
          "_": 1054,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "total": {
          "_": 1055,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PaymentItem",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentItem": {
      "indexes": [],
      "props": {
        "amount": {
          "_": 1059,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PaymentCurrencyAmount",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "label": {
          "_": 1060,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pending": {
          "_": 1061,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentMethodChangeEventInit": {
      "indexes": [],
      "props": {
        "methodDetails": {
          "_": 1065,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "methodName": {
          "_": 1066,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentMethodData": {
      "indexes": [],
      "props": {
        "data": {
          "_": 1070,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "supportedMethods": {
          "_": 1071,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentRequestUpdateEventInit": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentValidationErrors": {
      "indexes": [],
      "props": {
        "error": {
          "_": 1078,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paymentMethod": {
          "_": 1079,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Pbkdf2Params": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 1083,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HashAlgorithmIdentifier",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "iterations": {
          "_": 1084,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "salt": {
          "_": 1085,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PerformanceMarkOptions": {
      "indexes": [],
      "props": {
        "detail": {
          "_": 1089,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "startTime": {
          "_": 1090,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PerformanceMeasureOptions": {
      "indexes": [],
      "props": {
        "detail": {
          "_": 1094,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "duration": {
          "_": 1095,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "end": {
          "_": 1096,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 1097,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PerformanceObserverInit": {
      "indexes": [],
      "props": {
        "buffered": {
          "_": 1101,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "entryTypes": {
          "_": 1102,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1103,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PeriodicWaveConstraints": {
      "indexes": [],
      "props": {
        "disableNormalization": {
          "_": 1107,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PeriodicWaveOptions": {
      "indexes": [],
      "props": {
        "imag": {
          "_": 1111,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "real": {
          "_": 1112,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PermissionDescriptor": {
      "indexes": [],
      "props": {
        "name": {
          "_": 1116,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PermissionName",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PictureInPictureEventInit": {
      "indexes": [],
      "props": {
        "pictureInPictureWindow": {
          "_": 1120,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PictureInPictureWindow",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PointerEventInit": {
      "indexes": [],
      "props": {
        "coalescedEvents": {
          "_": 1124,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 1125,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "isPrimary": {
          "_": 1126,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "pointerId": {
          "_": 1127,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pointerType": {
          "_": 1128,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "predictedEvents": {
          "_": 1129,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "pressure": {
          "_": 1130,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "tangentialPressure": {
          "_": 1131,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "tiltX": {
          "_": 1132,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "tiltY": {
          "_": 1133,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "twist": {
          "_": 1134,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 1135,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PopStateEventInit": {
      "indexes": [],
      "props": {
        "state": {
          "_": 1139,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PositionOptions": {
      "indexes": [],
      "props": {
        "enableHighAccuracy": {
          "_": 1143,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "maximumAge": {
          "_": 1144,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "timeout": {
          "_": 1145,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ProgressEventInit": {
      "indexes": [],
      "props": {
        "lengthComputable": {
          "_": 1149,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "loaded": {
          "_": 1150,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "total": {
          "_": 1151,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PromiseRejectionEventInit": {
      "indexes": [],
      "props": {
        "promise": {
          "_": 1155,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "any"
          },
          "isStatic": false
        },
        "reason": {
          "_": 1156,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PropertyIndexedKeyframes": {
      "indexes": [
        {
          "_": 1163,
          "key": {
            "core": "string",
            "isFuture": false
          },
          "value": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "props": {
        "composite": {
          "_": 1160,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "easing": {
          "_": 1161,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "offset": {
          "_": 1162,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PublicKeyCredentialCreationOptions": {
      "indexes": [],
      "props": {
        "attestation": {
          "_": 1167,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AttestationConveyancePreference",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "authenticatorSelection": {
          "_": 1168,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AuthenticatorSelectionCriteria",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "challenge": {
          "_": 1169,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "excludeCredentials": {
          "_": 1170,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PublicKeyCredentialDescriptor",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "extensions": {
          "_": 1171,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AuthenticationExtensionsClientInputs",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pubKeyCredParams": {
          "_": 1172,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PublicKeyCredentialParameters",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "rp": {
          "_": 1173,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PublicKeyCredentialRpEntity",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timeout": {
          "_": 1174,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "user": {
          "_": 1175,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PublicKeyCredentialUserEntity",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PublicKeyCredentialDescriptor": {
      "indexes": [],
      "props": {
        "id": {
          "_": 1179,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transports": {
          "_": 1180,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "AuthenticatorTransport",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1181,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PublicKeyCredentialType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PublicKeyCredentialEntity": {
      "indexes": [],
      "props": {
        "name": {
          "_": 1185,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PublicKeyCredentialParameters": {
      "indexes": [],
      "props": {
        "alg": {
          "_": 1189,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "COSEAlgorithmIdentifier",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1190,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PublicKeyCredentialType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PublicKeyCredentialRequestOptions": {
      "indexes": [],
      "props": {
        "allowCredentials": {
          "_": 1194,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PublicKeyCredentialDescriptor",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "challenge": {
          "_": 1195,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "extensions": {
          "_": 1196,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AuthenticationExtensionsClientInputs",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rpId": {
          "_": 1197,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "timeout": {
          "_": 1198,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "userVerification": {
          "_": 1199,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UserVerificationRequirement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PublicKeyCredentialRpEntity": {
      "indexes": [],
      "props": {
        "id": {
          "_": 1203,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PublicKeyCredentialUserEntity": {
      "indexes": [],
      "props": {
        "displayName": {
          "_": 1207,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "id": {
          "_": 1208,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PushSubscriptionJSON": {
      "indexes": [],
      "props": {
        "endpoint": {
          "_": 1212,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "expirationTime": {
          "_": 1213,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "EpochTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "keys": {
          "_": 1214,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Record",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              },
              {
                "core": "string",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PushSubscriptionOptionsInit": {
      "indexes": [],
      "props": {
        "applicationServerKey": {
          "_": 1218,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "userVisibleOnly": {
          "_": 1219,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "QueuingStrategy": {
      "indexes": [],
      "props": {
        "highWaterMark": {
          "_": 1223,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "size": {
          "_": 1224,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "QueuingStrategySize",
            "generics": [
              {
                "ref": "T",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "QueuingStrategyInit": {
      "indexes": [],
      "props": {
        "highWaterMark": {
          "_": 1233,
          "doc": "Creates a new ByteLengthQueuingStrategy with the provided high water mark.\n\nNote that the provided high water mark will not be validated ahead of time. Instead, if it is negative, NaN, or not a number, the resulting ByteLengthQueuingStrategy will cause the corresponding stream constructor to throw.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCAnswerOptions": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCCertificateExpiration": {
      "indexes": [],
      "props": {
        "expires": {
          "_": 1240,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCConfiguration": {
      "indexes": [],
      "props": {
        "bundlePolicy": {
          "_": 1244,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCBundlePolicy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "certificates": {
          "_": 1245,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCCertificate",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "iceCandidatePoolSize": {
          "_": 1246,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "iceServers": {
          "_": 1247,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCIceServer",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "iceTransportPolicy": {
          "_": 1248,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCIceTransportPolicy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rtcpMuxPolicy": {
          "_": 1249,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtcpMuxPolicy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDTMFToneChangeEventInit": {
      "indexes": [],
      "props": {
        "tone": {
          "_": 1253,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDataChannelEventInit": {
      "indexes": [],
      "props": {
        "channel": {
          "_": 1257,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCDataChannel",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDataChannelInit": {
      "indexes": [],
      "props": {
        "id": {
          "_": 1261,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxPacketLifeTime": {
          "_": 1262,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxRetransmits": {
          "_": 1263,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "negotiated": {
          "_": 1264,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ordered": {
          "_": 1265,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "protocol": {
          "_": 1266,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDtlsFingerprint": {
      "indexes": [],
      "props": {
        "algorithm": {
          "_": 1270,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 1271,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCEncodedAudioFrameMetadata": {
      "indexes": [],
      "props": {
        "contributingSources": {
          "_": 1275,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "number",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "synchronizationSource": {
          "_": 1276,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCEncodedVideoFrameMetadata": {
      "indexes": [],
      "props": {
        "contributingSources": {
          "_": 1280,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "number",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "dependencies": {
          "_": 1281,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "number",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "frameId": {
          "_": 1282,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 1283,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "spatialIndex": {
          "_": 1284,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "synchronizationSource": {
          "_": 1285,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "temporalIndex": {
          "_": 1286,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 1287,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCErrorEventInit": {
      "indexes": [],
      "props": {
        "error": {
          "_": 1291,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCErrorInit": {
      "indexes": [],
      "props": {
        "errorDetail": {
          "_": 1295,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCErrorDetailType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "httpRequestStatusCode": {
          "_": 1296,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "receivedAlert": {
          "_": 1297,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sctpCauseCode": {
          "_": 1298,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sdpLineNumber": {
          "_": 1299,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sentAlert": {
          "_": 1300,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCIceCandidateInit": {
      "indexes": [],
      "props": {
        "candidate": {
          "_": 1304,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "sdpMLineIndex": {
          "_": 1305,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sdpMid": {
          "_": 1306,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "usernameFragment": {
          "_": 1307,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCIceCandidatePairStats": {
      "indexes": [],
      "props": {
        "availableIncomingBitrate": {
          "_": 1311,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "availableOutgoingBitrate": {
          "_": 1312,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "bytesReceived": {
          "_": 1313,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "bytesSent": {
          "_": 1314,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "currentRoundTripTime": {
          "_": 1315,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastPacketReceivedTimestamp": {
          "_": 1316,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lastPacketSentTimestamp": {
          "_": 1317,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "localCandidateId": {
          "_": 1318,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "nominated": {
          "_": 1319,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "remoteCandidateId": {
          "_": 1320,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "requestsReceived": {
          "_": 1321,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "requestsSent": {
          "_": 1322,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "responsesReceived": {
          "_": 1323,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "responsesSent": {
          "_": 1324,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 1325,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCStatsIceCandidatePairState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "totalRoundTripTime": {
          "_": 1326,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "transportId": {
          "_": 1327,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCIceServer": {
      "indexes": [],
      "props": {
        "credential": {
          "_": 1331,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "urls": {
          "_": 1332,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "username": {
          "_": 1333,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCInboundRtpStreamStats": {
      "indexes": [],
      "props": {
        "audioLevel": {
          "_": 1337,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "bytesReceived": {
          "_": 1338,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "concealedSamples": {
          "_": 1339,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "concealmentEvents": {
          "_": 1340,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "decoderImplementation": {
          "_": 1341,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "estimatedPlayoutTimestamp": {
          "_": 1342,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "fecPacketsDiscarded": {
          "_": 1343,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "fecPacketsReceived": {
          "_": 1344,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "firCount": {
          "_": 1345,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "frameHeight": {
          "_": 1346,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "frameWidth": {
          "_": 1347,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "framesDecoded": {
          "_": 1348,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "framesDropped": {
          "_": 1349,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "framesPerSecond": {
          "_": 1350,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "framesReceived": {
          "_": 1351,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "headerBytesReceived": {
          "_": 1352,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertedSamplesForDeceleration": {
          "_": 1353,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "jitterBufferDelay": {
          "_": 1354,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "jitterBufferEmittedCount": {
          "_": 1355,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "keyFramesDecoded": {
          "_": 1356,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "kind": {
          "_": 1357,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastPacketReceivedTimestamp": {
          "_": 1358,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "nackCount": {
          "_": 1359,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "packetsDiscarded": {
          "_": 1360,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pliCount": {
          "_": 1361,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "qpSum": {
          "_": 1362,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "remoteId": {
          "_": 1363,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "removedSamplesForAcceleration": {
          "_": 1364,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "silentConcealedSamples": {
          "_": 1365,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalAudioEnergy": {
          "_": 1366,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalDecodeTime": {
          "_": 1367,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalInterFrameDelay": {
          "_": 1368,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalProcessingDelay": {
          "_": 1369,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalSamplesDuration": {
          "_": 1370,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalSamplesReceived": {
          "_": 1371,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalSquaredInterFrameDelay": {
          "_": 1372,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCLocalSessionDescriptionInit": {
      "indexes": [],
      "props": {
        "sdp": {
          "_": 1376,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1377,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCSdpType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCOfferAnswerOptions": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCOfferOptions": {
      "indexes": [],
      "props": {
        "iceRestart": {
          "_": 1384,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "offerToReceiveAudio": {
          "_": 1385,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "offerToReceiveVideo": {
          "_": 1386,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCOutboundRtpStreamStats": {
      "indexes": [],
      "props": {
        "firCount": {
          "_": 1390,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "frameHeight": {
          "_": 1391,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "frameWidth": {
          "_": 1392,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "framesEncoded": {
          "_": 1393,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "framesPerSecond": {
          "_": 1394,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "framesSent": {
          "_": 1395,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "headerBytesSent": {
          "_": 1396,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "hugeFramesSent": {
          "_": 1397,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "keyFramesEncoded": {
          "_": 1398,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "mediaSourceId": {
          "_": 1399,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "nackCount": {
          "_": 1400,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pliCount": {
          "_": 1401,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "qpSum": {
          "_": 1402,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "qualityLimitationResolutionChanges": {
          "_": 1403,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "remoteId": {
          "_": 1404,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "retransmittedBytesSent": {
          "_": 1405,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "retransmittedPacketsSent": {
          "_": 1406,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "rid": {
          "_": 1407,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "targetBitrate": {
          "_": 1408,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalEncodeTime": {
          "_": 1409,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalEncodedBytesTarget": {
          "_": 1410,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalPacketSendDelay": {
          "_": 1411,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCPeerConnectionIceErrorEventInit": {
      "indexes": [],
      "props": {
        "address": {
          "_": 1415,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "errorCode": {
          "_": 1416,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "errorText": {
          "_": 1417,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "port": {
          "_": 1418,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 1419,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCPeerConnectionIceEventInit": {
      "indexes": [],
      "props": {
        "candidate": {
          "_": 1423,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCIceCandidate",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 1424,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCReceivedRtpStreamStats": {
      "indexes": [],
      "props": {
        "jitter": {
          "_": 1428,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "packetsLost": {
          "_": 1429,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "packetsReceived": {
          "_": 1430,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtcpParameters": {
      "indexes": [],
      "props": {
        "cname": {
          "_": 1434,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "reducedSize": {
          "_": 1435,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpCapabilities": {
      "indexes": [],
      "props": {
        "codecs": {
          "_": 1439,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpCodecCapability",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "headerExtensions": {
          "_": 1440,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpHeaderExtensionCapability",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpCodecCapability": {
      "indexes": [],
      "props": {
        "channels": {
          "_": 1444,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clockRate": {
          "_": 1445,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "mimeType": {
          "_": 1446,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "sdpFmtpLine": {
          "_": 1447,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpCodecParameters": {
      "indexes": [],
      "props": {
        "channels": {
          "_": 1451,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clockRate": {
          "_": 1452,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "mimeType": {
          "_": 1453,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "payloadType": {
          "_": 1454,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sdpFmtpLine": {
          "_": 1455,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpCodingParameters": {
      "indexes": [],
      "props": {
        "rid": {
          "_": 1459,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpContributingSource": {
      "indexes": [],
      "props": {
        "audioLevel": {
          "_": 1463,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "rtpTimestamp": {
          "_": 1464,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "source": {
          "_": 1465,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "timestamp": {
          "_": 1466,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpEncodingParameters": {
      "indexes": [],
      "props": {
        "active": {
          "_": 1470,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxBitrate": {
          "_": 1471,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxFramerate": {
          "_": 1472,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "networkPriority": {
          "_": 1473,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCPriorityType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "priority": {
          "_": 1474,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCPriorityType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scaleResolutionDownBy": {
          "_": 1475,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpHeaderExtensionCapability": {
      "indexes": [],
      "props": {
        "uri": {
          "_": 1479,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpHeaderExtensionParameters": {
      "indexes": [],
      "props": {
        "encrypted": {
          "_": 1483,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "id": {
          "_": 1484,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "uri": {
          "_": 1485,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpParameters": {
      "indexes": [],
      "props": {
        "codecs": {
          "_": 1489,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpCodecParameters",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "headerExtensions": {
          "_": 1490,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpHeaderExtensionParameters",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "rtcp": {
          "_": 1491,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtcpParameters",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpReceiveParameters": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpSendParameters": {
      "indexes": [],
      "props": {
        "degradationPreference": {
          "_": 1498,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCDegradationPreference",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "encodings": {
          "_": 1499,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpEncodingParameters",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "transactionId": {
          "_": 1500,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpStreamStats": {
      "indexes": [],
      "props": {
        "codecId": {
          "_": 1504,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "kind": {
          "_": 1505,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ssrc": {
          "_": 1506,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "transportId": {
          "_": 1507,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpSynchronizationSource": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCRtpTransceiverInit": {
      "indexes": [],
      "props": {
        "direction": {
          "_": 1514,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpTransceiverDirection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "sendEncodings": {
          "_": 1515,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpEncodingParameters",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "streams": {
          "_": 1516,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MediaStream",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCSentRtpStreamStats": {
      "indexes": [],
      "props": {
        "bytesSent": {
          "_": 1520,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "packetsSent": {
          "_": 1521,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCSessionDescriptionInit": {
      "indexes": [],
      "props": {
        "sdp": {
          "_": 1525,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1526,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCSdpType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCStats": {
      "indexes": [],
      "props": {
        "id": {
          "_": 1530,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "timestamp": {
          "_": 1531,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1532,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCStatsType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCTrackEventInit": {
      "indexes": [],
      "props": {
        "receiver": {
          "_": 1536,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpReceiver",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "streams": {
          "_": 1537,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MediaStream",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "track": {
          "_": 1538,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transceiver": {
          "_": 1539,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpTransceiver",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCTransportStats": {
      "indexes": [],
      "props": {
        "bytesReceived": {
          "_": 1543,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "bytesSent": {
          "_": 1544,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "dtlsCipher": {
          "_": 1545,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dtlsState": {
          "_": 1546,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCDtlsTransportState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "localCertificateId": {
          "_": 1547,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "remoteCertificateId": {
          "_": 1548,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectedCandidatePairId": {
          "_": 1549,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "srtpCipher": {
          "_": 1550,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "tlsVersion": {
          "_": 1551,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ReadableStreamGetReaderOptions": {
      "indexes": [],
      "props": {
        "mode": {
          "_": 1560,
          "doc": "Creates a ReadableStreamBYOBReader and locks the stream to the new reader.\n\nThis call behaves the same way as the no-argument variant, except that it only works on readable byte streams, i.e. streams which were constructed specifically with the ability to handle \"bring your own buffer\" reading. The returned BYOB reader provides the ability to directly read individual chunks from the stream via its read() method, into developer-supplied buffers, allowing more precise control over allocation.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadableStreamReaderMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ReadableStreamReadDoneResult": {
      "indexes": [],
      "props": {
        "done": {
          "_": 1564,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "true",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 1565,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "ReadableStreamReadValueResult": {
      "indexes": [],
      "props": {
        "done": {
          "_": 1569,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "false",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 1570,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "ReadableWritablePair": {
      "indexes": [],
      "props": {
        "readable": {
          "_": 1574,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadableStream",
            "generics": [
              {
                "ref": "R",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "writable": {
          "_": 1580,
          "doc": "Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.\n\nPiping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WritableStream",
            "generics": [
              {
                "ref": "W",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "R",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        },
        {
          "name": "W",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "RegistrationOptions": {
      "indexes": [],
      "props": {
        "scope": {
          "_": 1584,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1585,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WorkerType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "updateViaCache": {
          "_": 1586,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ServiceWorkerUpdateViaCache",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RequestInit": {
      "indexes": [],
      "props": {
        "body": {
          "_": 1591,
          "doc": "A BodyInit object or null to set request's body.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "BodyInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cache": {
          "_": 1593,
          "doc": "A string indicating how the request will interact with the browser's cache to set request's cache.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestCache",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "credentials": {
          "_": 1595,
          "doc": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestCredentials",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "headers": {
          "_": 1597,
          "doc": "A Headers object, an object literal, or an array of two-item arrays to set request's headers.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HeadersInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "integrity": {
          "_": 1599,
          "doc": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "keepalive": {
          "_": 1601,
          "doc": "A boolean to set request's keepalive.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "method": {
          "_": 1603,
          "doc": "A string to set request's method.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 1605,
          "doc": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "redirect": {
          "_": 1607,
          "doc": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestRedirect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "referrer": {
          "_": 1609,
          "doc": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrerPolicy": {
          "_": 1611,
          "doc": "A referrer policy to set request's referrerPolicy.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReferrerPolicy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "signal": {
          "_": 1613,
          "doc": "An AbortSignal to set request's signal.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "AbortSignal",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "window": {
          "_": 1615,
          "doc": "Can only be null. Used to disassociate request from any Window.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "null",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ResizeObserverOptions": {
      "indexes": [],
      "props": {
        "box": {
          "_": 1619,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ResizeObserverBoxOptions",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ResponseInit": {
      "indexes": [],
      "props": {
        "headers": {
          "_": 1623,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HeadersInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "status": {
          "_": 1624,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "statusText": {
          "_": 1625,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RsaHashedImportParams": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 1629,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HashAlgorithmIdentifier",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RsaHashedKeyAlgorithm": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 1633,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "KeyAlgorithm",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RsaHashedKeyGenParams": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 1637,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HashAlgorithmIdentifier",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RsaKeyAlgorithm": {
      "indexes": [],
      "props": {
        "modulusLength": {
          "_": 1641,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "publicExponent": {
          "_": 1642,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BigInteger",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RsaKeyGenParams": {
      "indexes": [],
      "props": {
        "modulusLength": {
          "_": 1646,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "publicExponent": {
          "_": 1647,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BigInteger",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RsaOaepParams": {
      "indexes": [],
      "props": {
        "label": {
          "_": 1651,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BufferSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RsaOtherPrimesInfo": {
      "indexes": [],
      "props": {
        "d": {
          "_": 1655,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "r": {
          "_": 1656,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "t": {
          "_": 1657,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RsaPssParams": {
      "indexes": [],
      "props": {
        "saltLength": {
          "_": 1661,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGBoundingBoxOptions": {
      "indexes": [],
      "props": {
        "clipped": {
          "_": 1665,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 1666,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "markers": {
          "_": 1667,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "stroke": {
          "_": 1668,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ScrollIntoViewOptions": {
      "indexes": [],
      "props": {
        "block": {
          "_": 1672,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ScrollLogicalPosition",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "inline": {
          "_": 1673,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ScrollLogicalPosition",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ScrollOptions": {
      "indexes": [],
      "props": {
        "behavior": {
          "_": 1677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ScrollBehavior",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ScrollToOptions": {
      "indexes": [],
      "props": {
        "left": {
          "_": 1681,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "top": {
          "_": 1682,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SecurityPolicyViolationEventInit": {
      "indexes": [],
      "props": {
        "blockedURI": {
          "_": 1686,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnNumber": {
          "_": 1687,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "disposition": {
          "_": 1688,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SecurityPolicyViolationEventDisposition",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "documentURI": {
          "_": 1689,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "effectiveDirective": {
          "_": 1690,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lineNumber": {
          "_": 1691,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "originalPolicy": {
          "_": 1692,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrer": {
          "_": 1693,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "sample": {
          "_": 1694,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "sourceFile": {
          "_": 1695,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "statusCode": {
          "_": 1696,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "violatedDirective": {
          "_": 1697,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ShadowRootInit": {
      "indexes": [],
      "props": {
        "delegatesFocus": {
          "_": 1701,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 1702,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ShadowRootMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "slotAssignment": {
          "_": 1703,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SlotAssignmentMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ShareData": {
      "indexes": [],
      "props": {
        "files": {
          "_": 1707,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "File",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "text": {
          "_": 1708,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "title": {
          "_": 1709,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 1710,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SpeechSynthesisErrorEventInit": {
      "indexes": [],
      "props": {
        "error": {
          "_": 1714,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisErrorCode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SpeechSynthesisEventInit": {
      "indexes": [],
      "props": {
        "charIndex": {
          "_": 1718,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "charLength": {
          "_": 1719,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "elapsedTime": {
          "_": 1720,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 1721,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "utterance": {
          "_": 1722,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisUtterance",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "StaticRangeInit": {
      "indexes": [],
      "props": {
        "endContainer": {
          "_": 1726,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "endOffset": {
          "_": 1727,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "startContainer": {
          "_": 1728,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "startOffset": {
          "_": 1729,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "StereoPannerOptions": {
      "indexes": [],
      "props": {
        "pan": {
          "_": 1733,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "StorageEstimate": {
      "indexes": [],
      "props": {
        "quota": {
          "_": 1737,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "usage": {
          "_": 1738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "StorageEventInit": {
      "indexes": [],
      "props": {
        "key": {
          "_": 1742,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "newValue": {
          "_": 1743,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "oldValue": {
          "_": 1744,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "storageArea": {
          "_": 1745,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Storage",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 1746,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "StreamPipeOptions": {
      "indexes": [],
      "props": {
        "preventAbort": {
          "_": 1750,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "preventCancel": {
          "_": 1751,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "preventClose": {
          "_": 1769,
          "doc": "Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.\n\nPiping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n\nErrors and closures of the source and destination streams propagate as follows:\n\nAn error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source's error, or with any error that occurs during aborting the destination.\n\nAn error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination's error, or with any error that occurs during canceling the source.\n\nWhen this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n\nIf destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n\nThe signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "signal": {
          "_": 1770,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AbortSignal",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "StructuredSerializeOptions": {
      "indexes": [],
      "props": {
        "transfer": {
          "_": 1774,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Transferable",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SubmitEventInit": {
      "indexes": [],
      "props": {
        "submitter": {
          "_": 1778,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextDecodeOptions": {
      "indexes": [],
      "props": {
        "stream": {
          "_": 1782,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextDecoderOptions": {
      "indexes": [],
      "props": {
        "fatal": {
          "_": 1786,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ignoreBOM": {
          "_": 1787,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextEncoderEncodeIntoResult": {
      "indexes": [],
      "props": {
        "read": {
          "_": 1791,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "written": {
          "_": 1792,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TouchEventInit": {
      "indexes": [],
      "props": {
        "changedTouches": {
          "_": 1796,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Touch",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "targetTouches": {
          "_": 1797,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Touch",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "touches": {
          "_": 1798,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Touch",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TouchInit": {
      "indexes": [],
      "props": {
        "altitudeAngle": {
          "_": 1802,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "azimuthAngle": {
          "_": 1803,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientX": {
          "_": 1804,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientY": {
          "_": 1805,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "force": {
          "_": 1806,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "identifier": {
          "_": 1807,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageX": {
          "_": 1808,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageY": {
          "_": 1809,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "radiusX": {
          "_": 1810,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "radiusY": {
          "_": 1811,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "rotationAngle": {
          "_": 1812,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "screenX": {
          "_": 1813,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "screenY": {
          "_": 1814,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 1815,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "touchType": {
          "_": 1816,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TouchType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TrackEventInit": {
      "indexes": [],
      "props": {
        "track": {
          "_": 1820,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "TextTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Transformer": {
      "indexes": [],
      "props": {
        "flush": {
          "_": 1824,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TransformerFlushCallback",
            "generics": [
              {
                "ref": "O",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "readableType": {
          "_": 1825,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "undefined",
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 1826,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TransformerStartCallback",
            "generics": [
              {
                "ref": "O",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "transform": {
          "_": 1827,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TransformerTransformCallback",
            "generics": [
              {
                "ref": "I",
                "generics": [],
                "isFuture": false
              },
              {
                "ref": "O",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "writableType": {
          "_": 1828,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "undefined",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "I",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        },
        {
          "name": "O",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "TransitionEventInit": {
      "indexes": [],
      "props": {
        "elapsedTime": {
          "_": 1832,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "propertyName": {
          "_": 1833,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pseudoElement": {
          "_": 1834,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "UIEventInit": {
      "indexes": [],
      "props": {
        "detail": {
          "_": 1838,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "view": {
          "_": 1839,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Window",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "which": {
          "_": 1841,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ULongRange": {
      "indexes": [],
      "props": {
        "max": {
          "_": 1845,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "min": {
          "_": 1846,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingByteSource": {
      "indexes": [],
      "props": {
        "autoAllocateChunkSize": {
          "_": 1850,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancel": {
          "_": 1851,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UnderlyingSourceCancelCallback",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pull": {
          "_": 1852,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "controller",
                "type": {
                  "ref": "ReadableByteStreamController",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 1853,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "controller",
                "type": {
                  "ref": "ReadableByteStreamController",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1854,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "\"bytes\"",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingDefaultSource": {
      "indexes": [],
      "props": {
        "cancel": {
          "_": 1858,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UnderlyingSourceCancelCallback",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pull": {
          "_": 1859,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "controller",
                "type": {
                  "ref": "ReadableStreamDefaultController",
                  "generics": [
                    {
                      "ref": "R",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 1860,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "controller",
                "type": {
                  "ref": "ReadableStreamDefaultController",
                  "generics": [
                    {
                      "ref": "R",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1861,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "undefined",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "R",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingSink": {
      "indexes": [],
      "props": {
        "abort": {
          "_": 1865,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UnderlyingSinkAbortCallback",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 1866,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UnderlyingSinkCloseCallback",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 1867,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UnderlyingSinkStartCallback",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1868,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "undefined",
            "isFuture": false
          },
          "isStatic": false
        },
        "write": {
          "_": 1869,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UnderlyingSinkWriteCallback",
            "generics": [
              {
                "ref": "W",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "W",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingSource": {
      "indexes": [],
      "props": {
        "autoAllocateChunkSize": {
          "_": 1873,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancel": {
          "_": 1874,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UnderlyingSourceCancelCallback",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pull": {
          "_": 1875,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UnderlyingSourcePullCallback",
            "generics": [
              {
                "ref": "R",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 1876,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UnderlyingSourceStartCallback",
            "generics": [
              {
                "ref": "R",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1877,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadableStreamType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "R",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "ValidityStateFlags": {
      "indexes": [],
      "props": {
        "badInput": {
          "_": 1881,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "customError": {
          "_": 1882,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "patternMismatch": {
          "_": 1883,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "rangeOverflow": {
          "_": 1884,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "rangeUnderflow": {
          "_": 1885,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "stepMismatch": {
          "_": 1886,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "tooLong": {
          "_": 1887,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "tooShort": {
          "_": 1888,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "typeMismatch": {
          "_": 1889,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueMissing": {
          "_": 1890,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "VideoColorSpaceInit": {
      "indexes": [],
      "props": {
        "fullRange": {
          "_": 1894,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "matrix": {
          "_": 1895,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "VideoMatrixCoefficients",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "primaries": {
          "_": 1896,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "VideoColorPrimaries",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transfer": {
          "_": 1897,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "VideoTransferCharacteristics",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "VideoConfiguration": {
      "indexes": [],
      "props": {
        "bitrate": {
          "_": 1901,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "colorGamut": {
          "_": 1902,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ColorGamut",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "contentType": {
          "_": 1903,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "framerate": {
          "_": 1904,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "hdrMetadataType": {
          "_": 1905,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HdrMetadataType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 1906,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scalabilityMode": {
          "_": 1907,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transferFunction": {
          "_": 1908,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TransferFunction",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 1909,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "VideoFrameCallbackMetadata": {
      "indexes": [],
      "props": {
        "captureTime": {
          "_": 1913,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "expectedDisplayTime": {
          "_": 1914,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 1915,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "mediaTime": {
          "_": 1916,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "presentationTime": {
          "_": 1917,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "presentedFrames": {
          "_": 1918,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "processingDuration": {
          "_": 1919,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "receiveTime": {
          "_": 1920,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rtpTimestamp": {
          "_": 1921,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 1922,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WaveShaperOptions": {
      "indexes": [],
      "props": {
        "curve": {
          "_": 1926,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "oversample": {
          "_": 1927,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "OverSampleType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLContextAttributes": {
      "indexes": [],
      "props": {
        "alpha": {
          "_": 1931,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "antialias": {
          "_": 1932,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "depth": {
          "_": 1933,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "desynchronized": {
          "_": 1934,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "failIfMajorPerformanceCaveat": {
          "_": 1935,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "powerPreference": {
          "_": 1936,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WebGLPowerPreference",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "premultipliedAlpha": {
          "_": 1937,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "preserveDrawingBuffer": {
          "_": 1938,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "stencil": {
          "_": 1939,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLContextEventInit": {
      "indexes": [],
      "props": {
        "statusMessage": {
          "_": 1943,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WheelEventInit": {
      "indexes": [],
      "props": {
        "deltaMode": {
          "_": 1947,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "deltaX": {
          "_": 1948,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "deltaY": {
          "_": 1949,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "deltaZ": {
          "_": 1950,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WindowPostMessageOptions": {
      "indexes": [],
      "props": {
        "targetOrigin": {
          "_": 1954,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WorkerOptions": {
      "indexes": [],
      "props": {
        "credentials": {
          "_": 1958,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestCredentials",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 1959,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 1960,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WorkerType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WorkletOptions": {
      "indexes": [],
      "props": {
        "credentials": {
          "_": 1964,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestCredentials",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17855,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLOptionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false
    },
    "ANGLE_instanced_arrays": {
      "indexes": [],
      "props": {
        "drawArraysInstancedANGLE": {
          "_": 1992,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "drawElementsInstancedANGLE": {
          "_": 1993,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttribDivisorANGLE": {
          "_": 1994,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE": {
          "_": 1995,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The ANGLE_instanced_arrays extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type."
    },
    "ARIAMixin": {
      "indexes": [],
      "props": {
        "ariaAtomic": {
          "_": 1999,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaAutoComplete": {
          "_": 2000,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaBusy": {
          "_": 2001,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaChecked": {
          "_": 2002,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaColCount": {
          "_": 2003,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaColIndex": {
          "_": 2004,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaColIndexText": {
          "_": 2005,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaColSpan": {
          "_": 2006,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaCurrent": {
          "_": 2007,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaDisabled": {
          "_": 2008,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaExpanded": {
          "_": 2009,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaHasPopup": {
          "_": 2010,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaHidden": {
          "_": 2011,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaInvalid": {
          "_": 2012,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaKeyShortcuts": {
          "_": 2013,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaLabel": {
          "_": 2014,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaLevel": {
          "_": 2015,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaLive": {
          "_": 2016,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaModal": {
          "_": 2017,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaMultiLine": {
          "_": 2018,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaMultiSelectable": {
          "_": 2019,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaOrientation": {
          "_": 2020,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaPlaceholder": {
          "_": 2021,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaPosInSet": {
          "_": 2022,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaPressed": {
          "_": 2023,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaReadOnly": {
          "_": 2024,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaRequired": {
          "_": 2025,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaRoleDescription": {
          "_": 2026,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaRowCount": {
          "_": 2027,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaRowIndex": {
          "_": 2028,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaRowIndexText": {
          "_": 2029,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaRowSpan": {
          "_": 2030,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaSelected": {
          "_": 2031,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaSetSize": {
          "_": 2032,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaSort": {
          "_": 2033,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaValueMax": {
          "_": 2034,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaValueMin": {
          "_": 2035,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaValueNow": {
          "_": 2036,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ariaValueText": {
          "_": 2037,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "role": {
          "_": 2038,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AbortController": {
      "indexes": [],
      "props": {
        "signal": {
          "_": 2044,
          "doc": "Returns the AbortSignal object associated with this object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AbortSignal",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "abort": {
          "_": 2046,
          "doc": "Invoking this method will set this object's AbortSignal's aborted flag and signal to any observers that the associated activity is to be aborted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A controller object that allows you to abort one or more DOM requests as and when desired."
    },
    "AbortSignalEventMap": {
      "indexes": [],
      "props": {
        "\"abort\"": {
          "_": 2055,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AbortSignal": {
      "indexes": [],
      "props": {
        "aborted": {
          "_": 2061,
          "doc": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "onabort": {
          "_": 2062,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "AbortSignal",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "reason": {
          "_": 2063,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "throwIfAborted": {
          "_": 2064,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2066,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2068,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object."
    },
    "AbstractRange": {
      "indexes": [],
      "props": {
        "collapsed": {
          "_": 2080,
          "doc": "Returns true if range is collapsed, and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "endContainer": {
          "_": 2082,
          "doc": "Returns range's end node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "endOffset": {
          "_": 2084,
          "doc": "Returns range's end offset.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "startContainer": {
          "_": 2086,
          "doc": "Returns range's start node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "startOffset": {
          "_": 2088,
          "doc": "Returns range's start offset.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AbstractWorkerEventMap": {
      "indexes": [],
      "props": {
        "\"error\"": {
          "_": 2097,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ErrorEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AbstractWorker": {
      "indexes": [],
      "props": {
        "onerror": {
          "_": 2101,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "AbstractWorker",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ErrorEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2103,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2105,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AnalyserNode": {
      "indexes": [],
      "props": {
        "fftSize": {
          "_": 2110,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "frequencyBinCount": {
          "_": 2111,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxDecibels": {
          "_": 2112,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "minDecibels": {
          "_": 2113,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "smoothingTimeConstant": {
          "_": 2114,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getByteFrequencyData": {
          "_": 2115,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getByteTimeDomainData": {
          "_": 2116,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getFloatFrequencyData": {
          "_": 2117,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getFloatTimeDomainData": {
          "_": 2118,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A node able to provide real-time frequency and time-domain analysis information. It is an AudioNode that passes the audio stream unchanged from the input to the output, but allows you to take the generated data, process it, and create audio visualizations."
    },
    "Animatable": {
      "indexes": [],
      "props": {
        "animate": {
          "_": 2127,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Animation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAnimations": {
          "_": 2128,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Animation",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AnimationEventMap": {
      "indexes": [],
      "props": {
        "\"cancel\"": {
          "_": 2132,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AnimationPlaybackEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"finish\"": {
          "_": 2133,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AnimationPlaybackEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"remove\"": {
          "_": 2134,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Animation": {
      "indexes": [],
      "props": {
        "currentTime": {
          "_": 2138,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "effect": {
          "_": 2139,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "AnimationEffect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "finished": {
          "_": 2140,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Animation",
            "generics": []
          },
          "isStatic": false
        },
        "id": {
          "_": 2141,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "oncancel": {
          "_": 2142,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Animation",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "AnimationPlaybackEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onfinish": {
          "_": 2143,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Animation",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "AnimationPlaybackEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onremove": {
          "_": 2144,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Animation",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "pending": {
          "_": 2145,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "playState": {
          "_": 2146,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AnimationPlayState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackRate": {
          "_": 2147,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ready": {
          "_": 2148,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Animation",
            "generics": []
          },
          "isStatic": false
        },
        "replaceState": {
          "_": 2149,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AnimationReplaceState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "startTime": {
          "_": 2150,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timeline": {
          "_": 2151,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "AnimationTimeline",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cancel": {
          "_": 2152,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "commitStyles": {
          "_": 2153,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "finish": {
          "_": 2154,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "pause": {
          "_": 2155,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "persist": {
          "_": 2156,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "play": {
          "_": 2157,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 2158,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "updatePlaybackRate": {
          "_": 2159,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2161,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2163,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AnimationEffect": {
      "indexes": [],
      "props": {
        "getComputedTiming": {
          "_": 2172,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ComputedEffectTiming",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getTiming": {
          "_": 2173,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "EffectTiming",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "updateTiming": {
          "_": 2174,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AnimationEvent": {
      "indexes": [],
      "props": {
        "animationName": {
          "_": 2184,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "elapsedTime": {
          "_": 2185,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pseudoElement": {
          "_": 2186,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events providing information related to animations."
    },
    "AnimationFrameProvider": {
      "indexes": [],
      "props": {
        "cancelAnimationFrame": {
          "_": 2195,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "requestAnimationFrame": {
          "_": 2196,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AnimationPlaybackEvent": {
      "indexes": [],
      "props": {
        "currentTime": {
          "_": 2200,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timelineTime": {
          "_": 2201,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AnimationTimeline": {
      "indexes": [],
      "props": {
        "currentTime": {
          "_": 2210,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSNumberish",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Attr": {
      "indexes": [],
      "props": {
        "localName": {
          "_": 2220,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 2221,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "namespaceURI": {
          "_": 2222,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerDocument": {
          "_": 2223,
          "doc": "Returns the node document. Returns null for documents.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerElement": {
          "_": 2224,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prefix": {
          "_": 2225,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "specified": {
          "_": 2227,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 2228,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types."
    },
    "AudioBuffer": {
      "indexes": [],
      "props": {
        "duration": {
          "_": 2238,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 2239,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfChannels": {
          "_": 2240,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleRate": {
          "_": 2241,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyFromChannel": {
          "_": 2242,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyToChannel": {
          "_": 2243,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getChannelData": {
          "_": 2244,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A short audio asset residing in memory, created from an audio file using the AudioContext.decodeAudioData() method, or from raw data using AudioContext.createBuffer(). Once put into an AudioBuffer, the audio can then be played by being passed into an AudioBufferSourceNode."
    },
    "AudioBufferSourceNode": {
      "indexes": [],
      "props": {
        "buffer": {
          "_": 2254,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "detune": {
          "_": 2255,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "loop": {
          "_": 2256,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "loopEnd": {
          "_": 2257,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "loopStart": {
          "_": 2258,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackRate": {
          "_": 2259,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 2260,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2262,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2264,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An AudioScheduledSourceNode which represents an audio source consisting of in-memory audio data, stored in an AudioBuffer. It's especially useful for playing back audio which has particularly stringent timing accuracy requirements, such as for sounds that must match a specific rhythm and can be kept in memory rather than being played from disk or the network."
    },
    "AudioContext": {
      "indexes": [],
      "props": {
        "baseLatency": {
          "_": 2274,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "outputLatency": {
          "_": 2275,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 2276,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "createMediaElementSource": {
          "_": 2277,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaElementAudioSourceNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createMediaStreamDestination": {
          "_": 2278,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamAudioDestinationNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createMediaStreamSource": {
          "_": 2279,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamAudioSourceNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getOutputTimestamp": {
          "_": 2280,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioTimestamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "resume": {
          "_": 2281,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "suspend": {
          "_": 2282,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2284,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2286,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An audio-processing graph built from audio modules linked together, each represented by an AudioNode."
    },
    "AudioDestinationNode": {
      "indexes": [],
      "props": {
        "maxChannelCount": {
          "_": 2296,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "AudioDestinationNode has no output (as it is the output, no more AudioNode can be linked after it in the audio graph) and one input. The number of channels in the input must be between 0 and the maxChannelCount value or an exception is raised."
    },
    "AudioListener": {
      "indexes": [],
      "props": {
        "forwardX": {
          "_": 2306,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "forwardY": {
          "_": 2307,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "forwardZ": {
          "_": 2308,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "positionX": {
          "_": 2309,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "positionY": {
          "_": 2310,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "positionZ": {
          "_": 2311,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "upX": {
          "_": 2312,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "upY": {
          "_": 2313,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "upZ": {
          "_": 2314,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setOrientation": {
          "_": 2316,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setPosition": {
          "_": 2318,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The position and orientation of the unique person listening to the audio scene, and is used in audio spatialization. All PannerNodes spatialize in relation to the AudioListener stored in the BaseAudioContext.listener attribute."
    },
    "AudioNode": {
      "indexes": [],
      "props": {
        "channelCount": {
          "_": 2328,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "channelCountMode": {
          "_": 2329,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ChannelCountMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "channelInterpretation": {
          "_": 2330,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ChannelInterpretation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "context": {
          "_": 2331,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BaseAudioContext",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfInputs": {
          "_": 2332,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfOutputs": {
          "_": 2333,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "connect": {
          "_": 2335,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "disconnect": {
          "_": 2342,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A generic interface for representing an audio processing module. Examples include:"
    },
    "AudioParam": {
      "indexes": [],
      "props": {
        "automationRate": {
          "_": 2352,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AutomationRate",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "defaultValue": {
          "_": 2353,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxValue": {
          "_": 2354,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "minValue": {
          "_": 2355,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 2356,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancelAndHoldAtTime": {
          "_": 2357,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cancelScheduledValues": {
          "_": 2358,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "exponentialRampToValueAtTime": {
          "_": 2359,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "linearRampToValueAtTime": {
          "_": 2360,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setTargetAtTime": {
          "_": 2361,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setValueAtTime": {
          "_": 2362,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setValueCurveAtTime": {
          "_": 2363,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The Web Audio API's AudioParam interface represents an audio-related parameter, usually a parameter of an AudioNode (such as GainNode.gain)."
    },
    "AudioParamMap": {
      "indexes": [],
      "props": {
        "forEach": {
          "_": 2372,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioProcessingEvent": {
      "indexes": [],
      "props": {
        "inputBuffer": {
          "_": 2386,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "outputBuffer": {
          "_": 2388,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackTime": {
          "_": 2390,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The Web Audio API events that occur when a ScriptProcessorNode input buffer is ready to be processed."
    },
    "AudioScheduledSourceNodeEventMap": {
      "indexes": [],
      "props": {
        "\"ended\"": {
          "_": 2400,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioScheduledSourceNode": {
      "indexes": [],
      "props": {
        "onended": {
          "_": 2404,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "AudioScheduledSourceNode",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 2405,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stop": {
          "_": 2406,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2408,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2410,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioWorklet": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "AudioWorkletNodeEventMap": {
      "indexes": [],
      "props": {
        "\"processorerror\"": {
          "_": 2428,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "AudioWorkletNode": {
      "indexes": [],
      "props": {
        "onprocessorerror": {
          "_": 2433,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "AudioWorkletNode",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "parameters": {
          "_": 2434,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParamMap",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "port": {
          "_": 2435,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessagePort",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2437,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2439,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "AuthenticatorAssertionResponse": {
      "indexes": [],
      "props": {
        "authenticatorData": {
          "_": 2449,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "signature": {
          "_": 2450,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "userHandle": {
          "_": 2451,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "AuthenticatorAttestationResponse": {
      "indexes": [],
      "props": {
        "attestationObject": {
          "_": 2461,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAuthenticatorData": {
          "_": 2462,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getPublicKey": {
          "_": 2463,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getPublicKeyAlgorithm": {
          "_": 2464,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "COSEAlgorithmIdentifier",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getTransports": {
          "_": 2465,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "AuthenticatorResponse": {
      "indexes": [],
      "props": {
        "clientDataJSON": {
          "_": 2475,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "BarProp": {
      "indexes": [],
      "props": {
        "visible": {
          "_": 2484,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BaseAudioContextEventMap": {
      "indexes": [],
      "props": {
        "\"statechange\"": {
          "_": 2493,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BaseAudioContext": {
      "indexes": [],
      "props": {
        "audioWorklet": {
          "_": 2498,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioWorklet",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "currentTime": {
          "_": 2499,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "destination": {
          "_": 2500,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioDestinationNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "listener": {
          "_": 2501,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioListener",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onstatechange": {
          "_": 2502,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "BaseAudioContext",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleRate": {
          "_": 2503,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 2504,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioContextState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createAnalyser": {
          "_": 2505,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AnalyserNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createBiquadFilter": {
          "_": 2506,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "BiquadFilterNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createBuffer": {
          "_": 2507,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createBufferSource": {
          "_": 2508,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AudioBufferSourceNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createChannelMerger": {
          "_": 2509,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ChannelMergerNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createChannelSplitter": {
          "_": 2510,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ChannelSplitterNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createConstantSource": {
          "_": 2511,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ConstantSourceNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createConvolver": {
          "_": 2512,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ConvolverNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createDelay": {
          "_": 2513,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DelayNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createDynamicsCompressor": {
          "_": 2514,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DynamicsCompressorNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createGain": {
          "_": 2515,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GainNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createIIRFilter": {
          "_": 2516,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IIRFilterNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createOscillator": {
          "_": 2517,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "OscillatorNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createPanner": {
          "_": 2518,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PannerNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createPeriodicWave": {
          "_": 2519,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PeriodicWave",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createScriptProcessor": {
          "_": 2521,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ScriptProcessorNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createStereoPanner": {
          "_": 2522,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "StereoPannerNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createWaveShaper": {
          "_": 2523,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "WaveShaperNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "decodeAudioData": {
          "_": 2524,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "AudioBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2526,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2528,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BeforeUnloadEvent": {
      "indexes": [],
      "props": {
        "returnValue": {
          "_": 2538,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The beforeunload event is fired when the window, the document and its resources are about to be unloaded."
    },
    "BiquadFilterNode": {
      "indexes": [],
      "props": {
        "Q": {
          "_": 2548,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "detune": {
          "_": 2549,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "frequency": {
          "_": 2550,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "gain": {
          "_": 2551,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 2552,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BiquadFilterType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getFrequencyResponse": {
          "_": 2553,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A simple low-order filter, and is created using the AudioContext.createBiquadFilter() method. It is an AudioNode that can represent different kinds of filters, tone control devices, and graphic equalizers."
    },
    "Blob": {
      "indexes": [],
      "props": {
        "size": {
          "_": 2563,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 2564,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "arrayBuffer": {
          "_": 2565,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ArrayBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "slice": {
          "_": 2566,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Blob",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "stream": {
          "_": 2567,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ReadableStream",
            "generics": [
              {
                "ref": "Uint8Array",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "text": {
          "_": 2568,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "string"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\n`Blob` class is a global reference for `require('node:buffer').Blob`\nhttps://nodejs.org/api/buffer.html#class-blob"
    },
    "BlobEvent": {
      "indexes": [],
      "props": {
        "data": {
          "_": 2577,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Blob",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timecode": {
          "_": 2578,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Body": {
      "indexes": [],
      "props": {
        "body": {
          "_": 2587,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ReadableStream",
            "generics": [
              {
                "ref": "Uint8Array",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "bodyUsed": {
          "_": 2588,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "arrayBuffer": {
          "_": 2589,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ArrayBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "blob": {
          "_": 2590,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Blob",
            "generics": []
          },
          "isStatic": false
        },
        "formData": {
          "_": 2591,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "FormData",
            "generics": []
          },
          "isStatic": false
        },
        "json": {
          "_": 2592,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "any"
          },
          "isStatic": false
        },
        "text": {
          "_": 2593,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "string"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BroadcastChannelEventMap": {
      "indexes": [],
      "props": {
        "\"message\"": {
          "_": 2597,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"messageerror\"": {
          "_": 2598,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BroadcastChannel": {
      "indexes": [],
      "props": {
        "name": {
          "_": 2603,
          "doc": "Returns the channel name (as passed to the constructor).",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessage": {
          "_": 2604,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "BroadcastChannel",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessageerror": {
          "_": 2605,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "BroadcastChannel",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 2607,
          "doc": "Closes the BroadcastChannel object, opening it up to garbage collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "postMessage": {
          "_": 2609,
          "doc": "Sends the given message to other BroadcastChannel objects set up for this channel. Messages can be structured objects, e.g. nested objects and arrays.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2611,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2613,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "`BroadcastChannel` class is a global reference for `require('worker_threads').BroadcastChannel`\nhttps://nodejs.org/api/globals.html#broadcastchannel"
    },
    "ByteLengthQueuingStrategy": {
      "indexes": [],
      "props": {
        "highWaterMark": {
          "_": 2623,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "size": {
          "_": 2624,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "QueuingStrategySize",
            "generics": [
              {
                "ref": "ArrayBufferView",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Streams API interface provides a built-in byte length queuing strategy that can be used when constructing streams."
    },
    "CDATASection": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "A CDATA section that can be used within XML to include extended portions of unescaped text. The symbols < and & don’t need escaping as they normally do when inside a CDATA section."
    },
    "CSSAnimation": {
      "indexes": [],
      "props": {
        "animationName": {
          "_": 2642,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 2644,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 2646,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CSSConditionRule": {
      "indexes": [],
      "props": {
        "conditionText": {
          "_": 2656,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A single condition CSS at-rule, which consists of a condition and a statement block. It is a child of CSSGroupingRule."
    },
    "CSSContainerRule": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CSSCounterStyleRule": {
      "indexes": [],
      "props": {
        "additiveSymbols": {
          "_": 2673,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fallback": {
          "_": 2674,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 2675,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "negative": {
          "_": 2676,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pad": {
          "_": 2677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "prefix": {
          "_": 2678,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "range": {
          "_": 2679,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "speakAs": {
          "_": 2680,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "suffix": {
          "_": 2681,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "symbols": {
          "_": 2682,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "system": {
          "_": 2683,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CSSFontFaceRule": {
      "indexes": [],
      "props": {
        "style": {
          "_": 2692,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSStyleDeclaration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CSSFontPaletteValuesRule": {
      "indexes": [],
      "props": {
        "basePalette": {
          "_": 2701,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontFamily": {
          "_": 2702,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 2703,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overrideColors": {
          "_": 2704,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CSSGroupingRule": {
      "indexes": [],
      "props": {
        "cssRules": {
          "_": 2714,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSRuleList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteRule": {
          "_": 2715,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertRule": {
          "_": 2716,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Any CSS at-rule that contains other rules nested within it."
    },
    "CSSImportRule": {
      "indexes": [],
      "props": {
        "href": {
          "_": 2725,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "layerName": {
          "_": 2726,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 2727,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "styleSheet": {
          "_": 2728,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSStyleSheet",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CSSKeyframeRule": {
      "indexes": [],
      "props": {
        "keyText": {
          "_": 2738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "style": {
          "_": 2739,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSStyleDeclaration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An object representing a set of style for a given keyframe. It corresponds to the contains of a single keyframe of a @keyframes at-rule. It implements the CSSRule interface with a type value of 8 (CSSRule.KEYFRAME_RULE)."
    },
    "CSSKeyframesRule": {
      "indexes": [],
      "props": {
        "cssRules": {
          "_": 2749,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSRuleList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 2750,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendRule": {
          "_": 2751,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteRule": {
          "_": 2752,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "findRule": {
          "_": 2753,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "CSSKeyframeRule",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An object representing a complete set of keyframes for a CSS animation. It corresponds to the contains of a whole @keyframes at-rule. It implements the CSSRule interface with a type value of 7 (CSSRule.KEYFRAMES_RULE)."
    },
    "CSSLayerBlockRule": {
      "indexes": [],
      "props": {
        "name": {
          "_": 2762,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CSSLayerStatementRule": {
      "indexes": [],
      "props": {
        "nameList": {
          "_": 2771,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CSSMediaRule": {
      "indexes": [],
      "props": {
        "media": {
          "_": 2781,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A single CSS @media rule. It implements the CSSConditionRule interface, and therefore the CSSGroupingRule and the CSSRule interface with a type value of 4 (CSSRule.MEDIA_RULE)."
    },
    "CSSNamespaceRule": {
      "indexes": [],
      "props": {
        "namespaceURI": {
          "_": 2791,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "prefix": {
          "_": 2792,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An object representing a single CSS @namespace at-rule. It implements the CSSRule interface, with a type value of 10 (CSSRule.NAMESPACE_RULE)."
    },
    "CSSPageRule": {
      "indexes": [],
      "props": {
        "selectorText": {
          "_": 2802,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "style": {
          "_": 2803,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSStyleDeclaration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "CSSPageRule is an interface representing a single CSS @page rule. It implements the CSSRule interface with a type value of 6 (CSSRule.PAGE_RULE)."
    },
    "CSSRule": {
      "indexes": [],
      "props": {
        "cssText": {
          "_": 2813,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "parentRule": {
          "_": 2814,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSRule",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "parentStyleSheet": {
          "_": 2815,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSStyleSheet",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 2817,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "CHARSET_RULE": {
          "_": 2818,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "FONT_FACE_RULE": {
          "_": 2819,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "IMPORT_RULE": {
          "_": 2820,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "KEYFRAMES_RULE": {
          "_": 2821,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "KEYFRAME_RULE": {
          "_": 2822,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "MEDIA_RULE": {
          "_": 2823,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NAMESPACE_RULE": {
          "_": 2824,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "PAGE_RULE": {
          "_": 2825,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "STYLE_RULE": {
          "_": 2826,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SUPPORTS_RULE": {
          "_": 2827,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A single CSS rule. There are several types of rules, listed in the Type constants section below."
    },
    "CSSRuleList": {
      "indexes": [
        {
          "_": 2849,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "CSSRule",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 2847,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 2848,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "CSSRule",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A CSSRuleList is an (indirect-modify only) array-like object containing an ordered collection of CSSRule objects."
    },
    "CSSStyleDeclaration": {
      "indexes": [
        {
          "_": 3399,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "string",
            "isFuture": false
          }
        }
      ],
      "props": {
        "accentColor": {
          "_": 2859,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "alignContent": {
          "_": 2860,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "alignItems": {
          "_": 2861,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "alignSelf": {
          "_": 2862,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "alignmentBaseline": {
          "_": 2863,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "all": {
          "_": 2864,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "animation": {
          "_": 2865,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "animationDelay": {
          "_": 2866,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "animationDirection": {
          "_": 2867,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "animationDuration": {
          "_": 2868,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "animationFillMode": {
          "_": 2869,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "animationIterationCount": {
          "_": 2870,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "animationName": {
          "_": 2871,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "animationPlayState": {
          "_": 2872,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "animationTimingFunction": {
          "_": 2873,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "appearance": {
          "_": 2874,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "aspectRatio": {
          "_": 2875,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backdropFilter": {
          "_": 2876,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backfaceVisibility": {
          "_": 2877,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "background": {
          "_": 2878,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundAttachment": {
          "_": 2879,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundBlendMode": {
          "_": 2880,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundClip": {
          "_": 2881,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundColor": {
          "_": 2882,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundImage": {
          "_": 2883,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundOrigin": {
          "_": 2884,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundPosition": {
          "_": 2885,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundPositionX": {
          "_": 2886,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundPositionY": {
          "_": 2887,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundRepeat": {
          "_": 2888,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "backgroundSize": {
          "_": 2889,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "baselineShift": {
          "_": 2890,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "blockSize": {
          "_": 2891,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "border": {
          "_": 2892,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlock": {
          "_": 2893,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockColor": {
          "_": 2894,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockEnd": {
          "_": 2895,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockEndColor": {
          "_": 2896,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockEndStyle": {
          "_": 2897,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockEndWidth": {
          "_": 2898,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockStart": {
          "_": 2899,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockStartColor": {
          "_": 2900,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockStartStyle": {
          "_": 2901,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockStartWidth": {
          "_": 2902,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockStyle": {
          "_": 2903,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBlockWidth": {
          "_": 2904,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBottom": {
          "_": 2905,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBottomColor": {
          "_": 2906,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBottomLeftRadius": {
          "_": 2907,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBottomRightRadius": {
          "_": 2908,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBottomStyle": {
          "_": 2909,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderBottomWidth": {
          "_": 2910,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderCollapse": {
          "_": 2911,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderColor": {
          "_": 2912,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderEndEndRadius": {
          "_": 2913,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderEndStartRadius": {
          "_": 2914,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderImage": {
          "_": 2915,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderImageOutset": {
          "_": 2916,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderImageRepeat": {
          "_": 2917,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderImageSlice": {
          "_": 2918,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderImageSource": {
          "_": 2919,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderImageWidth": {
          "_": 2920,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInline": {
          "_": 2921,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineColor": {
          "_": 2922,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineEnd": {
          "_": 2923,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineEndColor": {
          "_": 2924,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineEndStyle": {
          "_": 2925,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineEndWidth": {
          "_": 2926,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineStart": {
          "_": 2927,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineStartColor": {
          "_": 2928,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineStartStyle": {
          "_": 2929,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineStartWidth": {
          "_": 2930,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineStyle": {
          "_": 2931,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderInlineWidth": {
          "_": 2932,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderLeft": {
          "_": 2933,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderLeftColor": {
          "_": 2934,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderLeftStyle": {
          "_": 2935,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderLeftWidth": {
          "_": 2936,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderRadius": {
          "_": 2937,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderRight": {
          "_": 2938,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderRightColor": {
          "_": 2939,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderRightStyle": {
          "_": 2940,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderRightWidth": {
          "_": 2941,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderSpacing": {
          "_": 2942,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderStartEndRadius": {
          "_": 2943,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderStartStartRadius": {
          "_": 2944,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderStyle": {
          "_": 2945,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderTop": {
          "_": 2946,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderTopColor": {
          "_": 2947,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderTopLeftRadius": {
          "_": 2948,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderTopRightRadius": {
          "_": 2949,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderTopStyle": {
          "_": 2950,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderTopWidth": {
          "_": 2951,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "borderWidth": {
          "_": 2952,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "bottom": {
          "_": 2953,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "boxShadow": {
          "_": 2954,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "boxSizing": {
          "_": 2955,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "breakAfter": {
          "_": 2956,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "breakBefore": {
          "_": 2957,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "breakInside": {
          "_": 2958,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "captionSide": {
          "_": 2959,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "caretColor": {
          "_": 2960,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 2961,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "clip": {
          "_": 2963,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "clipPath": {
          "_": 2964,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "clipRule": {
          "_": 2965,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "color": {
          "_": 2966,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "colorInterpolation": {
          "_": 2967,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "colorInterpolationFilters": {
          "_": 2968,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "colorScheme": {
          "_": 2969,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnCount": {
          "_": 2970,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnFill": {
          "_": 2971,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnGap": {
          "_": 2972,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnRule": {
          "_": 2973,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnRuleColor": {
          "_": 2974,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnRuleStyle": {
          "_": 2975,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnRuleWidth": {
          "_": 2976,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnSpan": {
          "_": 2977,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnWidth": {
          "_": 2978,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columns": {
          "_": 2979,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "contain": {
          "_": 2980,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "container": {
          "_": 2981,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "containerName": {
          "_": 2982,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "containerType": {
          "_": 2983,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "content": {
          "_": 2984,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "counterIncrement": {
          "_": 2985,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "counterReset": {
          "_": 2986,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "counterSet": {
          "_": 2987,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "cssFloat": {
          "_": 2988,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "cssText": {
          "_": 2989,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "cursor": {
          "_": 2990,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "direction": {
          "_": 2991,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "display": {
          "_": 2992,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dominantBaseline": {
          "_": 2993,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "emptyCells": {
          "_": 2994,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 2995,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fillOpacity": {
          "_": 2996,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fillRule": {
          "_": 2997,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 2998,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "flex": {
          "_": 2999,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "flexBasis": {
          "_": 3000,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "flexDirection": {
          "_": 3001,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "flexFlow": {
          "_": 3002,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "flexGrow": {
          "_": 3003,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "flexShrink": {
          "_": 3004,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "flexWrap": {
          "_": 3005,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "float": {
          "_": 3006,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "floodColor": {
          "_": 3007,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "floodOpacity": {
          "_": 3008,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "font": {
          "_": 3009,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontFamily": {
          "_": 3010,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontFeatureSettings": {
          "_": 3011,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontKerning": {
          "_": 3012,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontOpticalSizing": {
          "_": 3013,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontPalette": {
          "_": 3014,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontSize": {
          "_": 3015,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontSizeAdjust": {
          "_": 3016,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontStretch": {
          "_": 3017,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontStyle": {
          "_": 3018,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontSynthesis": {
          "_": 3019,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontVariant": {
          "_": 3020,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontVariantAlternates": {
          "_": 3021,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontVariantCaps": {
          "_": 3022,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontVariantEastAsian": {
          "_": 3023,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontVariantLigatures": {
          "_": 3024,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontVariantNumeric": {
          "_": 3025,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontVariantPosition": {
          "_": 3026,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontVariationSettings": {
          "_": 3027,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontWeight": {
          "_": 3028,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gap": {
          "_": 3029,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "grid": {
          "_": 3030,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridArea": {
          "_": 3031,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridAutoColumns": {
          "_": 3032,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridAutoFlow": {
          "_": 3033,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridAutoRows": {
          "_": 3034,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridColumn": {
          "_": 3035,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridColumnEnd": {
          "_": 3036,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridColumnGap": {
          "_": 3038,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridColumnStart": {
          "_": 3039,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridGap": {
          "_": 3041,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridRow": {
          "_": 3042,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridRowEnd": {
          "_": 3043,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridRowGap": {
          "_": 3045,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridRowStart": {
          "_": 3046,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridTemplate": {
          "_": 3047,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridTemplateAreas": {
          "_": 3048,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridTemplateColumns": {
          "_": 3049,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "gridTemplateRows": {
          "_": 3050,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 3051,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "hyphenateCharacter": {
          "_": 3052,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "hyphens": {
          "_": 3053,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "imageOrientation": {
          "_": 3055,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "imageRendering": {
          "_": 3056,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "inlineSize": {
          "_": 3057,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "inset": {
          "_": 3058,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "insetBlock": {
          "_": 3059,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "insetBlockEnd": {
          "_": 3060,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "insetBlockStart": {
          "_": 3061,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "insetInline": {
          "_": 3062,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "insetInlineEnd": {
          "_": 3063,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "insetInlineStart": {
          "_": 3064,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "isolation": {
          "_": 3065,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "justifyContent": {
          "_": 3066,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "justifyItems": {
          "_": 3067,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "justifySelf": {
          "_": 3068,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "left": {
          "_": 3069,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 3070,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "letterSpacing": {
          "_": 3071,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lightingColor": {
          "_": 3072,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lineBreak": {
          "_": 3073,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lineHeight": {
          "_": 3074,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "listStyle": {
          "_": 3075,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "listStyleImage": {
          "_": 3076,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "listStylePosition": {
          "_": 3077,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "listStyleType": {
          "_": 3078,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "margin": {
          "_": 3079,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginBlock": {
          "_": 3080,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginBlockEnd": {
          "_": 3081,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginBlockStart": {
          "_": 3082,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginBottom": {
          "_": 3083,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginInline": {
          "_": 3084,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginInlineEnd": {
          "_": 3085,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginInlineStart": {
          "_": 3086,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginLeft": {
          "_": 3087,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginRight": {
          "_": 3088,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginTop": {
          "_": 3089,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marker": {
          "_": 3090,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "markerEnd": {
          "_": 3091,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "markerMid": {
          "_": 3092,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "markerStart": {
          "_": 3093,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "mask": {
          "_": 3094,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maskClip": {
          "_": 3095,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maskComposite": {
          "_": 3096,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maskImage": {
          "_": 3097,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maskMode": {
          "_": 3098,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maskOrigin": {
          "_": 3099,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maskPosition": {
          "_": 3100,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maskRepeat": {
          "_": 3101,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maskSize": {
          "_": 3102,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maskType": {
          "_": 3103,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxBlockSize": {
          "_": 3104,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxHeight": {
          "_": 3105,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxInlineSize": {
          "_": 3106,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxWidth": {
          "_": 3107,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "minBlockSize": {
          "_": 3108,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "minHeight": {
          "_": 3109,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "minInlineSize": {
          "_": 3110,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "minWidth": {
          "_": 3111,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "mixBlendMode": {
          "_": 3112,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "objectFit": {
          "_": 3113,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "objectPosition": {
          "_": 3114,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "offset": {
          "_": 3115,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetDistance": {
          "_": 3116,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetPath": {
          "_": 3117,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetRotate": {
          "_": 3118,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "opacity": {
          "_": 3119,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "order": {
          "_": 3120,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "orphans": {
          "_": 3121,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "outline": {
          "_": 3122,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "outlineColor": {
          "_": 3123,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "outlineOffset": {
          "_": 3124,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "outlineStyle": {
          "_": 3125,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "outlineWidth": {
          "_": 3126,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overflow": {
          "_": 3127,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overflowAnchor": {
          "_": 3128,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overflowClipMargin": {
          "_": 3129,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overflowWrap": {
          "_": 3130,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overflowX": {
          "_": 3131,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overflowY": {
          "_": 3132,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overscrollBehavior": {
          "_": 3133,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overscrollBehaviorBlock": {
          "_": 3134,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overscrollBehaviorInline": {
          "_": 3135,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overscrollBehaviorX": {
          "_": 3136,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "overscrollBehaviorY": {
          "_": 3137,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "padding": {
          "_": 3138,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingBlock": {
          "_": 3139,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingBlockEnd": {
          "_": 3140,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingBlockStart": {
          "_": 3141,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingBottom": {
          "_": 3142,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingInline": {
          "_": 3143,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingInlineEnd": {
          "_": 3144,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingInlineStart": {
          "_": 3145,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingLeft": {
          "_": 3146,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingRight": {
          "_": 3147,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paddingTop": {
          "_": 3148,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageBreakAfter": {
          "_": 3149,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageBreakBefore": {
          "_": 3150,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageBreakInside": {
          "_": 3151,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "paintOrder": {
          "_": 3152,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "parentRule": {
          "_": 3153,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSRule",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "perspective": {
          "_": 3154,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "perspectiveOrigin": {
          "_": 3155,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "placeContent": {
          "_": 3156,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "placeItems": {
          "_": 3157,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "placeSelf": {
          "_": 3158,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pointerEvents": {
          "_": 3159,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "position": {
          "_": 3160,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "printColorAdjust": {
          "_": 3161,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "quotes": {
          "_": 3162,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "resize": {
          "_": 3163,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "right": {
          "_": 3164,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rotate": {
          "_": 3165,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rowGap": {
          "_": 3166,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rubyPosition": {
          "_": 3167,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scale": {
          "_": 3168,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollBehavior": {
          "_": 3169,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMargin": {
          "_": 3170,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginBlock": {
          "_": 3171,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginBlockEnd": {
          "_": 3172,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginBlockStart": {
          "_": 3173,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginBottom": {
          "_": 3174,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginInline": {
          "_": 3175,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginInlineEnd": {
          "_": 3176,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginInlineStart": {
          "_": 3177,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginLeft": {
          "_": 3178,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginRight": {
          "_": 3179,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollMarginTop": {
          "_": 3180,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPadding": {
          "_": 3181,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingBlock": {
          "_": 3182,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingBlockEnd": {
          "_": 3183,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingBlockStart": {
          "_": 3184,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingBottom": {
          "_": 3185,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingInline": {
          "_": 3186,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingInlineEnd": {
          "_": 3187,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingInlineStart": {
          "_": 3188,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingLeft": {
          "_": 3189,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingRight": {
          "_": 3190,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollPaddingTop": {
          "_": 3191,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollSnapAlign": {
          "_": 3192,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollSnapStop": {
          "_": 3193,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollSnapType": {
          "_": 3194,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollbarGutter": {
          "_": 3195,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "shapeImageThreshold": {
          "_": 3196,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "shapeMargin": {
          "_": 3197,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "shapeOutside": {
          "_": 3198,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "shapeRendering": {
          "_": 3199,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "stopColor": {
          "_": 3200,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "stopOpacity": {
          "_": 3201,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "stroke": {
          "_": 3202,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeDasharray": {
          "_": 3203,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeDashoffset": {
          "_": 3204,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeLinecap": {
          "_": 3205,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeLinejoin": {
          "_": 3206,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeMiterlimit": {
          "_": 3207,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeOpacity": {
          "_": 3208,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeWidth": {
          "_": 3209,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "tabSize": {
          "_": 3210,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "tableLayout": {
          "_": 3211,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textAlign": {
          "_": 3212,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textAlignLast": {
          "_": 3213,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textAnchor": {
          "_": 3214,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textCombineUpright": {
          "_": 3215,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textDecoration": {
          "_": 3216,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textDecorationColor": {
          "_": 3217,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textDecorationLine": {
          "_": 3218,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textDecorationSkipInk": {
          "_": 3219,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textDecorationStyle": {
          "_": 3220,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textDecorationThickness": {
          "_": 3221,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textEmphasis": {
          "_": 3222,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textEmphasisColor": {
          "_": 3223,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textEmphasisPosition": {
          "_": 3224,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textEmphasisStyle": {
          "_": 3225,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textIndent": {
          "_": 3226,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textOrientation": {
          "_": 3227,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textOverflow": {
          "_": 3228,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textRendering": {
          "_": 3229,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textShadow": {
          "_": 3230,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textTransform": {
          "_": 3231,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textUnderlineOffset": {
          "_": 3232,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "textUnderlinePosition": {
          "_": 3233,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "top": {
          "_": 3234,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "touchAction": {
          "_": 3235,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transform": {
          "_": 3236,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transformBox": {
          "_": 3237,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transformOrigin": {
          "_": 3238,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transformStyle": {
          "_": 3239,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transition": {
          "_": 3240,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transitionDelay": {
          "_": 3241,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transitionDuration": {
          "_": 3242,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transitionProperty": {
          "_": 3243,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transitionTimingFunction": {
          "_": 3244,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "translate": {
          "_": 3245,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "unicodeBidi": {
          "_": 3246,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "userSelect": {
          "_": 3247,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "verticalAlign": {
          "_": 3248,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "visibility": {
          "_": 3249,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAlignContent": {
          "_": 3251,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAlignItems": {
          "_": 3253,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAlignSelf": {
          "_": 3255,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAnimation": {
          "_": 3257,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAnimationDelay": {
          "_": 3259,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAnimationDirection": {
          "_": 3261,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAnimationDuration": {
          "_": 3263,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAnimationFillMode": {
          "_": 3265,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAnimationIterationCount": {
          "_": 3267,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAnimationName": {
          "_": 3269,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAnimationPlayState": {
          "_": 3271,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAnimationTimingFunction": {
          "_": 3273,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitAppearance": {
          "_": 3275,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBackfaceVisibility": {
          "_": 3277,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBackgroundClip": {
          "_": 3279,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBackgroundOrigin": {
          "_": 3281,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBackgroundSize": {
          "_": 3283,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBorderBottomLeftRadius": {
          "_": 3285,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBorderBottomRightRadius": {
          "_": 3287,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBorderRadius": {
          "_": 3289,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBorderTopLeftRadius": {
          "_": 3291,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBorderTopRightRadius": {
          "_": 3293,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBoxAlign": {
          "_": 3295,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBoxFlex": {
          "_": 3297,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBoxOrdinalGroup": {
          "_": 3299,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBoxOrient": {
          "_": 3301,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBoxPack": {
          "_": 3303,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBoxShadow": {
          "_": 3305,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitBoxSizing": {
          "_": 3307,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitFilter": {
          "_": 3309,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitFlex": {
          "_": 3311,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitFlexBasis": {
          "_": 3313,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitFlexDirection": {
          "_": 3315,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitFlexFlow": {
          "_": 3317,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitFlexGrow": {
          "_": 3319,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitFlexShrink": {
          "_": 3321,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitFlexWrap": {
          "_": 3323,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitJustifyContent": {
          "_": 3325,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitLineClamp": {
          "_": 3326,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMask": {
          "_": 3328,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskBoxImage": {
          "_": 3330,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskBoxImageOutset": {
          "_": 3332,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskBoxImageRepeat": {
          "_": 3334,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskBoxImageSlice": {
          "_": 3336,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskBoxImageSource": {
          "_": 3338,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskBoxImageWidth": {
          "_": 3340,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskClip": {
          "_": 3342,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskComposite": {
          "_": 3343,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskImage": {
          "_": 3345,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskOrigin": {
          "_": 3347,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskPosition": {
          "_": 3349,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskRepeat": {
          "_": 3351,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMaskSize": {
          "_": 3353,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitOrder": {
          "_": 3355,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitPerspective": {
          "_": 3357,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitPerspectiveOrigin": {
          "_": 3359,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTextFillColor": {
          "_": 3360,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTextSizeAdjust": {
          "_": 3362,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTextStroke": {
          "_": 3363,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTextStrokeColor": {
          "_": 3364,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTextStrokeWidth": {
          "_": 3365,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTransform": {
          "_": 3367,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTransformOrigin": {
          "_": 3369,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTransformStyle": {
          "_": 3371,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTransition": {
          "_": 3373,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTransitionDelay": {
          "_": 3375,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTransitionDuration": {
          "_": 3377,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTransitionProperty": {
          "_": 3379,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitTransitionTimingFunction": {
          "_": 3381,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitUserSelect": {
          "_": 3383,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "whiteSpace": {
          "_": 3384,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "widows": {
          "_": 3385,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 3386,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "willChange": {
          "_": 3387,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "wordBreak": {
          "_": 3388,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "wordSpacing": {
          "_": 3389,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "wordWrap": {
          "_": 3391,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "writingMode": {
          "_": 3392,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "zIndex": {
          "_": 3393,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getPropertyPriority": {
          "_": 3394,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getPropertyValue": {
          "_": 3395,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 3396,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeProperty": {
          "_": 3397,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "setProperty": {
          "_": 3398,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties."
    },
    "CSSStyleRule": {
      "indexes": [],
      "props": {
        "selectorText": {
          "_": 3409,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "style": {
          "_": 3410,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSStyleDeclaration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "CSSStyleRule represents a single CSS style rule. It implements the CSSRule interface with a type value of 1 (CSSRule.STYLE_RULE)."
    },
    "CSSStyleSheet": {
      "indexes": [],
      "props": {
        "cssRules": {
          "_": 3420,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSRuleList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerRule": {
          "_": 3421,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSRule",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rules": {
          "_": 3423,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSRuleList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addRule": {
          "_": 3425,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteRule": {
          "_": 3426,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertRule": {
          "_": 3427,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeRule": {
          "_": 3429,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "replace": {
          "_": 3430,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "CSSStyleSheet",
            "generics": []
          },
          "isStatic": false
        },
        "replaceSync": {
          "_": 3431,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A single CSS style sheet. It inherits properties and methods from its parent, StyleSheet."
    },
    "CSSSupportsRule": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "An object representing a single CSS @supports at-rule. It implements the CSSConditionRule interface, and therefore the CSSRule and CSSGroupingRule interfaces with a type value of 12 (CSSRule.SUPPORTS_RULE)."
    },
    "CSSTransition": {
      "indexes": [],
      "props": {
        "transitionProperty": {
          "_": 3449,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 3451,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 3453,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Cache": {
      "indexes": [],
      "props": {
        "add": {
          "_": 3466,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "addAll": {
          "_": 3467,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "delete": {
          "_": 3468,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        },
        "keys": {
          "_": 3469,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "Request",
                "generics": [],
                "isFuture": false
              }
            ]
          },
          "isStatic": false
        },
        "match": {
          "_": 3470,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Response",
            "generics": []
          },
          "isStatic": false
        },
        "matchAll": {
          "_": 3471,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "Response",
                "generics": [],
                "isFuture": false
              }
            ]
          },
          "isStatic": false
        },
        "put": {
          "_": 3472,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides a storage mechanism for Request / Response object pairs that are cached, for example as part of the ServiceWorker life cycle. Note that the Cache interface is exposed to windowed scopes as well as workers. You don't have to use it in conjunction with service workers, even though it is defined in the service worker spec.\nAvailable only in secure contexts."
    },
    "CacheStorage": {
      "indexes": [],
      "props": {
        "delete": {
          "_": 3485,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        },
        "has": {
          "_": 3486,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        },
        "keys": {
          "_": 3487,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "array": {
              "core": "string",
              "isFuture": false
            }
          },
          "isStatic": false
        },
        "match": {
          "_": 3488,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Response",
            "generics": []
          },
          "isStatic": false
        },
        "open": {
          "_": 3489,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Cache",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The storage for Cache objects.\nAvailable only in secure contexts."
    },
    "CanvasCaptureMediaStreamTrack": {
      "indexes": [],
      "props": {
        "canvas": {
          "_": 3498,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCanvasElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "requestFrame": {
          "_": 3499,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 3501,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 3503,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasCompositing": {
      "indexes": [],
      "props": {
        "globalAlpha": {
          "_": 3512,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "globalCompositeOperation": {
          "_": 3513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GlobalCompositeOperation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasDrawImage": {
      "indexes": [],
      "props": {
        "drawImage": {
          "_": 3519,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasDrawPath": {
      "indexes": [],
      "props": {
        "beginPath": {
          "_": 3523,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clip": {
          "_": 3525,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 3527,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "isPointInPath": {
          "_": 3529,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isPointInStroke": {
          "_": 3531,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "stroke": {
          "_": 3533,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasFillStrokeStyles": {
      "indexes": [],
      "props": {
        "fillStyle": {
          "_": 3537,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeStyle": {
          "_": 3538,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "createConicGradient": {
          "_": 3539,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "CanvasGradient",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createLinearGradient": {
          "_": 3540,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "CanvasGradient",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createPattern": {
          "_": 3541,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "CanvasPattern",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createRadialGradient": {
          "_": 3542,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "CanvasGradient",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasFilters": {
      "indexes": [],
      "props": {
        "filter": {
          "_": 3546,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasGradient": {
      "indexes": [],
      "props": {
        "addColorStop": {
          "_": 3556,
          "doc": "Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.\n\nThrows an \"IndexSizeError\" DOMException if the offset is out of range. Throws a \"SyntaxError\" DOMException if the color cannot be parsed.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.createLinearGradient() or CanvasRenderingContext2D.createRadialGradient()."
    },
    "CanvasImageData": {
      "indexes": [],
      "props": {
        "createImageData": {
          "_": 3566,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ImageData",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getImageData": {
          "_": 3567,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ImageData",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "putImageData": {
          "_": 3569,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasImageSmoothing": {
      "indexes": [],
      "props": {
        "imageSmoothingEnabled": {
          "_": 3573,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "imageSmoothingQuality": {
          "_": 3574,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ImageSmoothingQuality",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasPath": {
      "indexes": [],
      "props": {
        "arc": {
          "_": 3578,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "arcTo": {
          "_": 3579,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bezierCurveTo": {
          "_": 3580,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "closePath": {
          "_": 3581,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "ellipse": {
          "_": 3582,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "lineTo": {
          "_": 3583,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "moveTo": {
          "_": 3584,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "quadraticCurveTo": {
          "_": 3585,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "rect": {
          "_": 3586,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "roundRect": {
          "_": 3587,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasPathDrawingStyles": {
      "indexes": [],
      "props": {
        "lineCap": {
          "_": 3591,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CanvasLineCap",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lineDashOffset": {
          "_": 3592,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "lineJoin": {
          "_": 3593,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CanvasLineJoin",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lineWidth": {
          "_": 3594,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "miterLimit": {
          "_": 3595,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getLineDash": {
          "_": 3596,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "core": "number",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "setLineDash": {
          "_": 3597,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasPattern": {
      "indexes": [],
      "props": {
        "setTransform": {
          "_": 3603,
          "doc": "Sets the transformation matrix that will be used when rendering the pattern during a fill or stroke painting operation.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.createPattern() method."
    },
    "CanvasRect": {
      "indexes": [],
      "props": {
        "clearRect": {
          "_": 3612,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "fillRect": {
          "_": 3613,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeRect": {
          "_": 3614,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasRenderingContext2D": {
      "indexes": [],
      "props": {
        "canvas": {
          "_": 3619,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCanvasElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getContextAttributes": {
          "_": 3620,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "CanvasRenderingContext2DSettings",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a <canvas> element. It is used for drawing shapes, text, images, and other objects."
    },
    "CanvasShadowStyles": {
      "indexes": [],
      "props": {
        "shadowBlur": {
          "_": 3629,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "shadowColor": {
          "_": 3630,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "shadowOffsetX": {
          "_": 3631,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "shadowOffsetY": {
          "_": 3632,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasState": {
      "indexes": [],
      "props": {
        "restore": {
          "_": 3636,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "save": {
          "_": 3637,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasText": {
      "indexes": [],
      "props": {
        "fillText": {
          "_": 3641,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "measureText": {
          "_": 3642,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "TextMetrics",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "strokeText": {
          "_": 3643,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasTextDrawingStyles": {
      "indexes": [],
      "props": {
        "direction": {
          "_": 3647,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CanvasDirection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "font": {
          "_": 3648,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontKerning": {
          "_": 3649,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CanvasFontKerning",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "textAlign": {
          "_": 3650,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CanvasTextAlign",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "textBaseline": {
          "_": 3651,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CanvasTextBaseline",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasTransform": {
      "indexes": [],
      "props": {
        "getTransform": {
          "_": 3655,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "resetTransform": {
          "_": 3656,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "rotate": {
          "_": 3657,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "scale": {
          "_": 3658,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setTransform": {
          "_": 3660,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "transform": {
          "_": 3661,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "translate": {
          "_": 3662,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CanvasUserInterface": {
      "indexes": [],
      "props": {
        "drawFocusIfNeeded": {
          "_": 3667,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ChannelMergerNode": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The ChannelMergerNode interface, often used in conjunction with its opposite, ChannelSplitterNode, reunites different mono inputs into a single output. Each input is used to fill a channel of the output. This is useful for accessing each channels separately, e.g. for performing channel mixing where gain must be separately controlled on each channel."
    },
    "ChannelSplitterNode": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The ChannelSplitterNode interface, often used in conjunction with its opposite, ChannelMergerNode, separates the different channels of an audio source into a set of mono outputs. This is useful for accessing each channel separately, e.g. for performing channel mixing where gain must be separately controlled on each channel."
    },
    "CharacterData": {
      "indexes": [],
      "props": {
        "data": {
          "_": 3690,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 3691,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerDocument": {
          "_": 3692,
          "doc": "Returns the node document. Returns null for documents.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "appendData": {
          "_": 3693,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteData": {
          "_": 3694,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertData": {
          "_": 3695,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceData": {
          "_": 3696,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "substringData": {
          "_": 3697,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any object of type CharacterData: it is implemented by other interfaces, like Text, Comment, or ProcessingInstruction which aren't abstract."
    },
    "ChildNode": {
      "indexes": [],
      "props": {
        "after": {
          "_": 3711,
          "doc": "Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "before": {
          "_": 3717,
          "doc": "Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "remove": {
          "_": 3719,
          "doc": "Removes node.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceWith": {
          "_": 3725,
          "doc": "Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ClientRect": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Clipboard": {
      "indexes": [],
      "props": {
        "read": {
          "_": 3734,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ClipboardItems",
            "generics": []
          },
          "isStatic": false
        },
        "readText": {
          "_": 3735,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "string"
          },
          "isStatic": false
        },
        "write": {
          "_": 3736,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "writeText": {
          "_": 3737,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "ClipboardEvent": {
      "indexes": [],
      "props": {
        "clipboardData": {
          "_": 3747,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DataTransfer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events providing information related to modification of the clipboard, that is cut, copy, and paste events."
    },
    "ClipboardItem": {
      "indexes": [],
      "props": {
        "types": {
          "_": 3757,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getType": {
          "_": 3758,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Blob",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "CloseEvent": {
      "indexes": [],
      "props": {
        "code": {
          "_": 3769,
          "doc": "Returns the WebSocket connection close code provided by the server.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "reason": {
          "_": 3771,
          "doc": "Returns the WebSocket connection close reason provided by the server.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "wasClean": {
          "_": 3773,
          "doc": "Returns true if the connection closed cleanly; false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object's onclose attribute."
    },
    "Comment": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view."
    },
    "CompositionEvent": {
      "indexes": [],
      "props": {
        "data": {
          "_": 3792,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "initCompositionEvent": {
          "_": 3794,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The DOM CompositionEvent represents events that occur due to the user indirectly entering text."
    },
    "ConstantSourceNode": {
      "indexes": [],
      "props": {
        "offset": {
          "_": 3803,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 3805,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 3807,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ConvolverNode": {
      "indexes": [],
      "props": {
        "buffer": {
          "_": 3817,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "normalize": {
          "_": 3818,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An AudioNode that performs a Linear Convolution on a given AudioBuffer, often used to achieve a reverb effect. A ConvolverNode always has exactly one input and one output."
    },
    "CountQueuingStrategy": {
      "indexes": [],
      "props": {
        "highWaterMark": {
          "_": 3828,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "size": {
          "_": 3829,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "QueuingStrategySize",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Streams API interface provides a built-in byte length queuing strategy that can be used when constructing streams."
    },
    "Credential": {
      "indexes": [],
      "props": {
        "id": {
          "_": 3839,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 3840,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "CredentialsContainer": {
      "indexes": [],
      "props": {
        "create": {
          "_": 3850,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Credential",
            "generics": []
          },
          "isStatic": false
        },
        "get": {
          "_": 3851,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Credential",
            "generics": []
          },
          "isStatic": false
        },
        "preventSilentAccess": {
          "_": 3852,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "store": {
          "_": 3853,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Credential",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "Crypto": {
      "indexes": [],
      "props": {
        "subtle": {
          "_": 3864,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SubtleCrypto",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getRandomValues": {
          "_": 3865,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "randomUUID": {
          "_": 3867,
          "doc": "Available only in secure contexts.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Basic cryptography features available in the current context. It allows access to a cryptographically strong random number generator and to cryptographic primitives."
    },
    "CryptoKey": {
      "indexes": [],
      "props": {
        "algorithm": {
          "_": 3880,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "KeyAlgorithm",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "extractable": {
          "_": 3881,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 3882,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "KeyType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "usages": {
          "_": 3883,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "KeyUsage",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The CryptoKey dictionary of the Web Crypto API represents a cryptographic key.\nAvailable only in secure contexts."
    },
    "CustomElementRegistry": {
      "indexes": [],
      "props": {
        "define": {
          "_": 3892,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "get": {
          "_": 3893,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "CustomElementConstructor",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "upgrade": {
          "_": 3894,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "whenDefined": {
          "_": 3895,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "CustomElementConstructor",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CustomEvent": {
      "indexes": [],
      "props": {
        "detail": {
          "_": 3905,
          "doc": "Returns any custom data event was created with. Typically used for synthetic events.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initCustomEvent": {
          "_": 3907,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "DOMException": {
      "indexes": [],
      "props": {
        "code": {
          "_": 3918,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "message": {
          "_": 3919,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 3920,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ABORT_ERR": {
          "_": 3921,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DATA_CLONE_ERR": {
          "_": 3922,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOMSTRING_SIZE_ERR": {
          "_": 3923,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "HIERARCHY_REQUEST_ERR": {
          "_": 3924,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "INDEX_SIZE_ERR": {
          "_": 3925,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "INUSE_ATTRIBUTE_ERR": {
          "_": 3926,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_ACCESS_ERR": {
          "_": 3927,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_CHARACTER_ERR": {
          "_": 3928,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_MODIFICATION_ERR": {
          "_": 3929,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_NODE_TYPE_ERR": {
          "_": 3930,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_STATE_ERR": {
          "_": 3931,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NAMESPACE_ERR": {
          "_": 3932,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NETWORK_ERR": {
          "_": 3933,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NOT_FOUND_ERR": {
          "_": 3934,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NOT_SUPPORTED_ERR": {
          "_": 3935,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NO_DATA_ALLOWED_ERR": {
          "_": 3936,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NO_MODIFICATION_ALLOWED_ERR": {
          "_": 3937,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "QUOTA_EXCEEDED_ERR": {
          "_": 3938,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SECURITY_ERR": {
          "_": 3939,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SYNTAX_ERR": {
          "_": 3940,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TIMEOUT_ERR": {
          "_": 3941,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TYPE_MISMATCH_ERR": {
          "_": 3942,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "URL_MISMATCH_ERR": {
          "_": 3943,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "VALIDATION_ERR": {
          "_": 3944,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "WRONG_DOCUMENT_ERR": {
          "_": 3945,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."
    },
    "DOMImplementation": {
      "indexes": [],
      "props": {
        "createDocument": {
          "_": 3980,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "XMLDocument",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createDocumentType": {
          "_": 3981,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DocumentType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createHTMLDocument": {
          "_": 3982,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "hasFeature": {
          "_": 3984,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "true",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An object providing methods which are not dependent on any particular document. Such an object is returned by the Document.implementation property."
    },
    "DOMMatrix": {
      "indexes": [],
      "props": {
        "a": {
          "_": 3993,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "b": {
          "_": 3994,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "c": {
          "_": 3995,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "d": {
          "_": 3996,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "e": {
          "_": 3997,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "f": {
          "_": 3998,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m11": {
          "_": 3999,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m12": {
          "_": 4000,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m13": {
          "_": 4001,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m14": {
          "_": 4002,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m21": {
          "_": 4003,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m22": {
          "_": 4004,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m23": {
          "_": 4005,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m24": {
          "_": 4006,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m31": {
          "_": 4007,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m32": {
          "_": 4008,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m33": {
          "_": 4009,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m34": {
          "_": 4010,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m41": {
          "_": 4011,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m42": {
          "_": 4012,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m43": {
          "_": 4013,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m44": {
          "_": 4014,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "invertSelf": {
          "_": 4015,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "multiplySelf": {
          "_": 4016,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "preMultiplySelf": {
          "_": 4017,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rotateAxisAngleSelf": {
          "_": 4018,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rotateFromVectorSelf": {
          "_": 4019,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rotateSelf": {
          "_": 4020,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scale3dSelf": {
          "_": 4021,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scaleSelf": {
          "_": 4022,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setMatrixValue": {
          "_": 4023,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "skewXSelf": {
          "_": 4024,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "skewYSelf": {
          "_": 4025,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "translateSelf": {
          "_": 4026,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMMatrixReadOnly": {
      "indexes": [],
      "props": {
        "a": {
          "_": 4044,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "b": {
          "_": 4045,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "c": {
          "_": 4046,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "d": {
          "_": 4047,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "e": {
          "_": 4048,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "f": {
          "_": 4049,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "is2D": {
          "_": 4050,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isIdentity": {
          "_": 4051,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "m11": {
          "_": 4052,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m12": {
          "_": 4053,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m13": {
          "_": 4054,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m14": {
          "_": 4055,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m21": {
          "_": 4056,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m22": {
          "_": 4057,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m23": {
          "_": 4058,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m24": {
          "_": 4059,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m31": {
          "_": 4060,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m32": {
          "_": 4061,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m33": {
          "_": 4062,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m34": {
          "_": 4063,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m41": {
          "_": 4064,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m42": {
          "_": 4065,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m43": {
          "_": 4066,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "m44": {
          "_": 4067,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "flipX": {
          "_": 4068,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "flipY": {
          "_": 4069,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "inverse": {
          "_": 4070,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "multiply": {
          "_": 4071,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rotate": {
          "_": 4072,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rotateAxisAngle": {
          "_": 4073,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rotateFromVector": {
          "_": 4074,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scale": {
          "_": 4075,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scale3d": {
          "_": 4076,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scaleNonUniform": {
          "_": 4078,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "skewX": {
          "_": 4079,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "skewY": {
          "_": 4080,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toFloat32Array": {
          "_": 4081,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toFloat64Array": {
          "_": 4082,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 4083,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "transformPoint": {
          "_": 4084,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "translate": {
          "_": 4085,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 4086,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMParser": {
      "indexes": [],
      "props": {
        "parseFromString": {
          "_": 4109,
          "doc": "Parses string using either the HTML or XML parser, according to type, and returns the resulting Document. type can be \"text/html\" (which will invoke the HTML parser), or any of \"text/xml\", \"application/xml\", \"application/xhtml+xml\", or \"image/svg+xml\" (which will invoke the XML parser).\n\nFor the XML parser, if string cannot be parsed, then the returned Document will contain elements describing the resulting error.\n\nNote that script elements are not evaluated during parsing, and the resulting document's encoding will always be UTF-8.\n\nValues other than the above for type will cause a TypeError exception to be thrown.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides the ability to parse XML or HTML source code from a string into a DOM Document."
    },
    "DOMPoint": {
      "indexes": [],
      "props": {
        "w": {
          "_": 4118,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 4119,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 4120,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "z": {
          "_": 4121,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMPointReadOnly": {
      "indexes": [],
      "props": {
        "w": {
          "_": 4134,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 4135,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 4136,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "z": {
          "_": 4137,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "matrixTransform": {
          "_": 4138,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 4139,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMQuad": {
      "indexes": [],
      "props": {
        "p1": {
          "_": 4149,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "p2": {
          "_": 4150,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "p3": {
          "_": 4151,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "p4": {
          "_": 4152,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getBounds": {
          "_": 4153,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMRect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 4154,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMRect": {
      "indexes": [],
      "props": {
        "height": {
          "_": 4165,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 4166,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 4167,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 4168,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMRectList": {
      "indexes": [
        {
          "_": 4183,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "DOMRect",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 4181,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 4182,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "DOMRect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMRectReadOnly": {
      "indexes": [],
      "props": {
        "bottom": {
          "_": 4192,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 4193,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "left": {
          "_": 4194,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "right": {
          "_": 4195,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "top": {
          "_": 4196,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 4197,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 4198,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 4199,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 4200,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DOMStringList": {
      "indexes": [
        {
          "_": 4217,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "string",
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 4212,
          "doc": "Returns the number of strings in strings.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "contains": {
          "_": 4214,
          "doc": "Returns true if strings contains string, and false otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 4216,
          "doc": "Returns the string with index index from strings.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A type returned by some APIs which contains a list of DOMString (strings)."
    },
    "DOMStringMap": {
      "indexes": [
        {
          "_": 4227,
          "key": {
            "core": "string",
            "isFuture": false
          },
          "value": {
            "core": "string",
            "isFuture": false
          }
        }
      ],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Used by the dataset HTML attribute to represent data for custom attributes added to elements."
    },
    "DOMTokenList": {
      "indexes": [
        {
          "_": 4293,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "string",
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 4238,
          "doc": "Returns the number of tokens.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 4244,
          "doc": "Returns the associated set as string.\n\nCan be set, to change the associated attribute.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 4245,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "add": {
          "_": 4253,
          "doc": "Adds all arguments passed, except those already present.\n\nThrows a \"SyntaxError\" DOMException if one of the arguments is the empty string.\n\nThrows an \"InvalidCharacterError\" DOMException if one of the arguments contains any ASCII whitespace.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "contains": {
          "_": 4255,
          "doc": "Returns true if token is present, and false otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 4257,
          "doc": "Returns the token with index index.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "remove": {
          "_": 4265,
          "doc": "Removes arguments passed, if they are present.\n\nThrows a \"SyntaxError\" DOMException if one of the arguments is the empty string.\n\nThrows an \"InvalidCharacterError\" DOMException if one of the arguments contains any ASCII whitespace.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "replace": {
          "_": 4275,
          "doc": "Replaces token with newToken.\n\nReturns true if token was replaced with newToken, and false otherwise.\n\nThrows a \"SyntaxError\" DOMException if one of the arguments is the empty string.\n\nThrows an \"InvalidCharacterError\" DOMException if one of the arguments contains any ASCII whitespace.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "supports": {
          "_": 4281,
          "doc": "Returns true if token is in the associated attribute's supported tokens. Returns false otherwise.\n\nThrows a TypeError if the associated attribute has no supported tokens defined.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "toggle": {
          "_": 4291,
          "doc": "If force is not given, \"toggles\" token, removing it if it's present and adding it if it's not present. If force is true, adds token (same as add()). If force is false, removes token (same as remove()).\n\nReturns true if token is now present, and false otherwise.\n\nThrows a \"SyntaxError\" DOMException if token is empty.\n\nThrows an \"InvalidCharacterError\" DOMException if token contains any spaces.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 4292,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive."
    },
    "DataTransfer": {
      "indexes": [],
      "props": {
        "dropEffect": {
          "_": 4310,
          "doc": "Returns the kind of operation that is currently selected. If the kind of operation isn't one of those that is allowed by the effectAllowed attribute, then the operation will fail.\n\nCan be set, to change the selected operation.\n\nThe possible values are \"none\", \"copy\", \"link\", and \"move\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "effectAllowed": {
          "_": 4318,
          "doc": "Returns the kinds of operations that are to be allowed.\n\nCan be set (during the dragstart event), to change the allowed operations.\n\nThe possible values are \"none\", \"copy\", \"copyLink\", \"copyMove\", \"link\", \"linkMove\", \"move\", \"all\", and \"uninitialized\",",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "files": {
          "_": 4320,
          "doc": "Returns a FileList of the files being dragged, if any.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FileList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "items": {
          "_": 4322,
          "doc": "Returns a DataTransferItemList object, with the drag data.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DataTransferItemList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "types": {
          "_": 4324,
          "doc": "Returns a frozen array listing the formats that were set in the dragstart event. In addition, if any files are being dragged, then one of the types will be the string \"Files\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "clearData": {
          "_": 4326,
          "doc": "Removes the data of the specified formats. Removes all data if the argument is omitted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getData": {
          "_": 4328,
          "doc": "Returns the specified data. If there is no such data, returns the empty string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "setData": {
          "_": 4330,
          "doc": "Adds the specified data.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setDragImage": {
          "_": 4332,
          "doc": "Uses the given element to update the drag feedback, replacing any previously specified feedback.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API."
    },
    "DataTransferItem": {
      "indexes": [],
      "props": {
        "kind": {
          "_": 4343,
          "doc": "Returns the drag data item kind, one of: \"string\", \"file\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 4345,
          "doc": "Returns the drag data item type string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getAsFile": {
          "_": 4347,
          "doc": "Returns a File object, if the drag data item kind is File.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "File",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAsString": {
          "_": 4349,
          "doc": "Invokes the callback with the string data as the argument, if the drag data item kind is text.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitGetAsEntry": {
          "_": 4350,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "FileSystemEntry",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "One drag data item. During a drag operation, each drag event has a dataTransfer property which contains a list of drag data items. Each item in the list is a DataTransferItem object."
    },
    "DataTransferItemList": {
      "indexes": [
        {
          "_": 4369,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "DataTransferItem",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 4361,
          "doc": "Returns the number of items in the drag data store.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "add": {
          "_": 4364,
          "doc": "Adds a new entry for the given data to the drag data store. If the data is plain text then a type string has to be provided also.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "DataTransferItem",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 4366,
          "doc": "Removes all the entries in the drag data store.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "remove": {
          "_": 4368,
          "doc": "Removes the indexth entry in the drag data store.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A list of DataTransferItem objects representing items being dragged. During a drag operation, each DragEvent has a dataTransfer property and that property is a DataTransferItemList."
    },
    "DelayNode": {
      "indexes": [],
      "props": {
        "delayTime": {
          "_": 4379,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A delay-line; an AudioNode audio-processing module that causes a delay between the arrival of an input data and its propagation to the output."
    },
    "DeviceMotionEvent": {
      "indexes": [],
      "props": {
        "acceleration": {
          "_": 4392,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DeviceMotionEventAcceleration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "accelerationIncludingGravity": {
          "_": 4393,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DeviceMotionEventAcceleration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "interval": {
          "_": 4394,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "rotationRate": {
          "_": 4395,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DeviceMotionEventRotationRate",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The DeviceMotionEvent provides web developers with information about the speed of changes for the device's position and orientation.\nAvailable only in secure contexts."
    },
    "DeviceMotionEventAcceleration": {
      "indexes": [],
      "props": {
        "x": {
          "_": 4405,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 4406,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "z": {
          "_": 4407,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "DeviceMotionEventRotationRate": {
      "indexes": [],
      "props": {
        "alpha": {
          "_": 4412,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "beta": {
          "_": 4413,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "gamma": {
          "_": 4414,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "DeviceOrientationEvent": {
      "indexes": [],
      "props": {
        "absolute": {
          "_": 4422,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "alpha": {
          "_": 4423,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "beta": {
          "_": 4424,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "gamma": {
          "_": 4425,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The DeviceOrientationEvent provides web developers with information from the physical orientation of the device running the web page.\nAvailable only in secure contexts."
    },
    "DocumentEventMap": {
      "indexes": [],
      "props": {
        "\"DOMContentLoaded\"": {
          "_": 4434,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"fullscreenchange\"": {
          "_": 4435,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"fullscreenerror\"": {
          "_": 4436,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointerlockchange\"": {
          "_": 4437,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointerlockerror\"": {
          "_": 4438,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"readystatechange\"": {
          "_": 4439,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"visibilitychange\"": {
          "_": 4440,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Document": {
      "indexes": [],
      "props": {
        "URL": {
          "_": 4446,
          "doc": "Sets or gets the URL for the current document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "alinkColor": {
          "_": 4451,
          "doc": "Sets or gets the color of all active links in the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "all": {
          "_": 4456,
          "doc": "Returns a reference to the collection of elements contained by the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLAllCollection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "anchors": {
          "_": 4461,
          "doc": "Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLAnchorElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "applets": {
          "_": 4466,
          "doc": "Retrieves a collection of all applet objects in the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "bgColor": {
          "_": 4471,
          "doc": "Deprecated. Sets or retrieves a value that indicates the background color behind the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "body": {
          "_": 4473,
          "doc": "Specifies the beginning and end of the document body.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "characterSet": {
          "_": 4475,
          "doc": "Returns document's encoding.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "charset": {
          "_": 4480,
          "doc": "Gets or sets the character set used to encode the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "compatMode": {
          "_": 4482,
          "doc": "Gets a value that indicates whether standards-compliant mode is switched on for the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "contentType": {
          "_": 4484,
          "doc": "Returns document's content type.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "cookie": {
          "_": 4492,
          "doc": "Returns the HTTP cookies that apply to the Document. If there are no cookies or cookies can't be applied to this resource, the empty string will be returned.\n\nCan be set, to add a new cookie to the element's set of HTTP cookies.\n\nIf the contents are sandboxed into a unique origin (e.g. in an iframe with the sandbox attribute), a \"SecurityError\" DOMException will be thrown on getting and setting.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "currentScript": {
          "_": 4498,
          "doc": "Returns the script element, or the SVG script element, that is currently executing, as long as the element represents a classic script. In the case of reentrant script execution, returns the one that most recently started executing amongst those that have not yet finished executing.\n\nReturns null if the Document is not currently executing a script or SVG script element (e.g., because the running script is an event handler, or a timeout), or if the currently executing script or SVG script element represents a module script.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLOrSVGScriptElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "defaultView": {
          "_": 4500,
          "doc": "Returns the Window object of the active document.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "intersect": [
              {
                "ref": "WindowProxy",
                "generics": [],
                "isFuture": false
              },
              {
                "core": "any",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "designMode": {
          "_": 4502,
          "doc": "Sets or gets a value that indicates whether the document can be edited.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dir": {
          "_": 4504,
          "doc": "Sets or retrieves a value that indicates the reading order of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "doctype": {
          "_": 4506,
          "doc": "Gets an object representing the document type declaration associated with the current document.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DocumentType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "documentElement": {
          "_": 4508,
          "doc": "Gets a reference to the root node of the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "documentURI": {
          "_": 4510,
          "doc": "Returns document's URL.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "domain": {
          "_": 4515,
          "doc": "Sets or gets the security domain of the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "embeds": {
          "_": 4517,
          "doc": "Retrieves a collection of all embed objects in the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLEmbedElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "fgColor": {
          "_": 4522,
          "doc": "Sets or gets the foreground (text) color of the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "forms": {
          "_": 4524,
          "doc": "Retrieves a collection, in source order, of all form objects in the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLFormElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "fullscreen": {
          "_": 4526,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fullscreenEnabled": {
          "_": 4528,
          "doc": "Returns true if document has the ability to display elements fullscreen and fullscreen is supported, or false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "head": {
          "_": 4530,
          "doc": "Returns the head element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHeadElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "hidden": {
          "_": 4531,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "images": {
          "_": 4533,
          "doc": "Retrieves a collection, in source order, of img objects in the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLImageElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "implementation": {
          "_": 4535,
          "doc": "Gets the implementation object of the current document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMImplementation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "inputEncoding": {
          "_": 4540,
          "doc": "Returns the character encoding used to create the webpage that is loaded into the document object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastModified": {
          "_": 4542,
          "doc": "Gets the date that the page was last modified, if the page supplies one.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "linkColor": {
          "_": 4547,
          "doc": "Sets or gets the color of the document links.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "links": {
          "_": 4549,
          "doc": "Retrieves a collection of all a objects that specify the href property and all area objects in the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "core": "any",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "get location": {
          "_": 4551,
          "doc": "Contains information about the current URL.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Location",
            "generics": [],
            "isFuture": false
          }
        },
        "set location": {
          "_": 4552,
          "doc": "Contains information about the current URL.",
          "isMethod": true,
          "isNullable": false,
          "isStatic": false
        },
        "onfullscreenchange": {
          "_": 4553,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Document",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onfullscreenerror": {
          "_": 4554,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Document",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointerlockchange": {
          "_": 4555,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Document",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointerlockerror": {
          "_": 4556,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Document",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onreadystatechange": {
          "_": 4561,
          "doc": "Fires when the state of the object has changed.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Document",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onvisibilitychange": {
          "_": 4562,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Document",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerDocument": {
          "_": 4563,
          "doc": "Returns the node document. Returns null for documents.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "null",
            "isFuture": false
          },
          "isStatic": false
        },
        "pictureInPictureEnabled": {
          "_": 4564,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "plugins": {
          "_": 4566,
          "doc": "Return an HTMLCollection of the embed elements in the Document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLEmbedElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 4568,
          "doc": "Retrieves a value that indicates the current state of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DocumentReadyState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "referrer": {
          "_": 4570,
          "doc": "Gets the URL of the location that referred the user to the current page.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rootElement": {
          "_": 4572,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "SVGSVGElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scripts": {
          "_": 4574,
          "doc": "Retrieves a collection of all script objects in the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLScriptElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollingElement": {
          "_": 4575,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timeline": {
          "_": 4576,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DocumentTimeline",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "title": {
          "_": 4578,
          "doc": "Contains the title of the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "visibilityState": {
          "_": 4579,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DocumentVisibilityState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "vlinkColor": {
          "_": 4584,
          "doc": "Sets or gets the color of the links that the user has visited.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "adoptNode": {
          "_": 4590,
          "doc": "Moves node from another document and returns it.\n\nIf node is a document, throws a \"NotSupportedError\" DOMException or, if node is a shadow root, throws a \"HierarchyRequestError\" DOMException.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "captureEvents": {
          "_": 4592,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "caretRangeFromPoint": {
          "_": 4594,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Range",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 4596,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 4598,
          "doc": "Closes an output stream and forces the sent data to display.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "createAttribute": {
          "_": 4603,
          "doc": "Creates an attribute object with a specified name.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createAttributeNS": {
          "_": 4604,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createCDATASection": {
          "_": 4606,
          "doc": "Returns a CDATASection node whose data is data.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "CDATASection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createComment": {
          "_": 4611,
          "doc": "Creates a comment object with the specified data.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Comment",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createDocumentFragment": {
          "_": 4613,
          "doc": "Creates a new document.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DocumentFragment",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createElement": {
          "_": 4624,
          "doc": "Creates an instance of the element for the specified tag.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createElementNS": {
          "_": 4644,
          "doc": "Returns an element with namespace namespace. Its namespace prefix will be everything before \":\" (U+003E) in qualifiedName or null. Its local name will be everything after \":\" (U+003E) in qualifiedName or qualifiedName.\n\nIf localName does not match the Name production an \"InvalidCharacterError\" DOMException will be thrown.\n\nIf one of the following conditions is true a \"NamespaceError\" DOMException will be thrown:\n\nlocalName does not match the QName production.\nNamespace prefix is not null and namespace is the empty string.\nNamespace prefix is \"xml\" and namespace is not the XML namespace.\nqualifiedName or namespace prefix is \"xmlns\" and namespace is not the XMLNS namespace.\nnamespace is the XMLNS namespace and neither qualifiedName nor namespace prefix is \"xmlns\".\n\nWhen supplied, options's is can be used to create a customized built-in element.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createEvent": {
          "_": 4704,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createNodeIterator": {
          "_": 4711,
          "doc": "Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "NodeIterator",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createProcessingInstruction": {
          "_": 4713,
          "doc": "Returns a ProcessingInstruction node whose target is target and data is data. If target does not match the Name production an \"InvalidCharacterError\" DOMException will be thrown. If data contains \"?>\" an \"InvalidCharacterError\" DOMException will be thrown.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ProcessingInstruction",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createRange": {
          "_": 4715,
          "doc": "Returns an empty range object that has both of its boundary points positioned at the beginning of the document.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Range",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createTextNode": {
          "_": 4720,
          "doc": "Creates a text string from the specified value.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Text",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createTreeWalker": {
          "_": 4727,
          "doc": "Creates a TreeWalker object that you can use to traverse filtered lists of nodes or elements in a document.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "TreeWalker",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "execCommand": {
          "_": 4735,
          "doc": "Executes a command on the current document, current selection, or the given range.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "exitFullscreen": {
          "_": 4737,
          "doc": "Stops document's fullscreen element from being displayed fullscreen and resolves promise when done.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "exitPictureInPicture": {
          "_": 4738,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "exitPointerLock": {
          "_": 4739,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementById": {
          "_": 4744,
          "doc": "Returns a reference to the first object with the specified value of the ID attribute.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementsByClassName": {
          "_": 4746,
          "doc": "Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "Element",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementsByName": {
          "_": 4751,
          "doc": "Gets a collection of objects based on the value of the NAME or ID attribute.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "HTMLElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementsByTagName": {
          "_": 4758,
          "doc": "Retrieves a collection of objects based on the specified element name.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "Element",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementsByTagNameNS": {
          "_": 4770,
          "doc": "If namespace and localName are \"*\" returns a HTMLCollection of all descendant elements.\n\nIf only namespace is \"*\" returns a HTMLCollection of all descendant elements whose local name is localName.\n\nIf only localName is \"*\" returns a HTMLCollection of all descendant elements whose namespace is namespace.\n\nOtherwise, returns a HTMLCollection of all descendant elements whose namespace is namespace and local name is localName.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "Element",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getSelection": {
          "_": 4772,
          "doc": "Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Selection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "hasFocus": {
          "_": 4774,
          "doc": "Gets a value indicating whether the object currently has focus.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "hasStorageAccess": {
          "_": 4775,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        },
        "importNode": {
          "_": 4781,
          "doc": "Returns a copy of node. If deep is true, the copy also includes the node's descendants.\n\nIf node is a document or a shadow root, throws a \"NotSupportedError\" DOMException.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "open": {
          "_": 4790,
          "doc": "Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WindowProxy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "queryCommandEnabled": {
          "_": 4796,
          "doc": "Returns a Boolean value that indicates whether a specified command can be successfully executed using execCommand, given the current state of the document.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "queryCommandIndeterm": {
          "_": 4802,
          "doc": "Returns a Boolean value that indicates whether the specified command is in the indeterminate state.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "queryCommandState": {
          "_": 4808,
          "doc": "Returns a Boolean value that indicates the current state of the command.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "queryCommandSupported": {
          "_": 4814,
          "doc": "Returns a Boolean value that indicates whether the current command is supported on the current range.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "queryCommandValue": {
          "_": 4820,
          "doc": "Returns the current value of the document, range, or current selection for the given command.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "releaseEvents": {
          "_": 4822,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "requestStorageAccess": {
          "_": 4823,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "write": {
          "_": 4828,
          "doc": "Writes one or more HTML expressions to a document in the specified window.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "writeln": {
          "_": 4833,
          "doc": "Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 4835,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 4837,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree."
    },
    "DocumentAndElementEventHandlersEventMap": {
      "indexes": [],
      "props": {
        "\"copy\"": {
          "_": 4846,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ClipboardEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"cut\"": {
          "_": 4847,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ClipboardEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"paste\"": {
          "_": 4848,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ClipboardEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DocumentAndElementEventHandlers": {
      "indexes": [],
      "props": {
        "oncopy": {
          "_": 4852,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "DocumentAndElementEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ClipboardEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncut": {
          "_": 4853,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "DocumentAndElementEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ClipboardEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpaste": {
          "_": 4854,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "DocumentAndElementEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ClipboardEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 4856,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 4858,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DocumentFragment": {
      "indexes": [],
      "props": {
        "ownerDocument": {
          "_": 4863,
          "doc": "Returns the node document. Returns null for documents.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementById": {
          "_": 4864,
          "doc": "Returns the first element within node's descendants whose ID is elementId.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document. The key difference is that because the document fragment isn't part of the active document tree structure, changes made to the fragment don't affect the document, cause reflow, or incur any performance impact that can occur when changes are made."
    },
    "DocumentOrShadowRoot": {
      "indexes": [],
      "props": {
        "activeElement": {
          "_": 4880,
          "doc": "Returns the deepest element in the document through which or to which key events are being routed. This is, roughly speaking, the focused element in the document.\n\nFor the purposes of this API, when a child browsing context is focused, its container is focused in the parent browsing context. For example, if the user moves the focus to a text control in an iframe, the iframe is the element returned by the activeElement API in the iframe's node document.\n\nSimilarly, when the focused element is in a different node tree than documentOrShadowRoot, the element returned will be the host that's located in the same node tree as documentOrShadowRoot if documentOrShadowRoot is a shadow-including inclusive ancestor of the focused element, and null if not.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "adoptedStyleSheets": {
          "_": 4881,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "CSSStyleSheet",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "fullscreenElement": {
          "_": 4883,
          "doc": "Returns document's fullscreen element.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pictureInPictureElement": {
          "_": 4884,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pointerLockElement": {
          "_": 4885,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "styleSheets": {
          "_": 4887,
          "doc": "Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "StyleSheetList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "elementFromPoint": {
          "_": 4893,
          "doc": "Returns the element for the specified x coordinate and the specified y coordinate.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "elementsFromPoint": {
          "_": 4894,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Element",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getAnimations": {
          "_": 4895,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Animation",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DocumentTimeline": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DocumentType": {
      "indexes": [],
      "props": {
        "name": {
          "_": 4908,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerDocument": {
          "_": 4909,
          "doc": "Returns the node document. Returns null for documents.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "publicId": {
          "_": 4910,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "systemId": {
          "_": 4911,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A Node containing a doctype."
    },
    "DragEvent": {
      "indexes": [],
      "props": {
        "dataTransfer": {
          "_": 4922,
          "doc": "Returns the DataTransfer object for the event.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DataTransfer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A DOM event that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way."
    },
    "DynamicsCompressorNode": {
      "indexes": [],
      "props": {
        "attack": {
          "_": 4932,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "knee": {
          "_": 4933,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ratio": {
          "_": 4934,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduction": {
          "_": 4935,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "release": {
          "_": 4936,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "threshold": {
          "_": 4937,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Inherits properties from its parent, AudioNode."
    },
    "EXT_blend_minmax": {
      "indexes": [],
      "props": {
        "MAX_EXT": {
          "_": 4946,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MIN_EXT": {
          "_": 4947,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EXT_color_buffer_float": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EXT_color_buffer_half_float": {
      "indexes": [],
      "props": {
        "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT": {
          "_": 4954,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB16F_EXT": {
          "_": 4955,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA16F_EXT": {
          "_": 4956,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_NORMALIZED_EXT": {
          "_": 4957,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EXT_float_blend": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EXT_frag_depth": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The EXT_frag_depth extension is part of the WebGL API and enables to set a depth value of a fragment from within the fragment shader."
    },
    "EXT_sRGB": {
      "indexes": [],
      "props": {
        "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT": {
          "_": 4968,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SRGB8_ALPHA8_EXT": {
          "_": 4969,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SRGB_ALPHA_EXT": {
          "_": 4970,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SRGB_EXT": {
          "_": 4971,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EXT_shader_texture_lod": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EXT_texture_compression_bptc": {
      "indexes": [],
      "props": {
        "COMPRESSED_RGBA_BPTC_UNORM_EXT": {
          "_": 4978,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT": {
          "_": 4979,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT": {
          "_": 4980,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT": {
          "_": 4981,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EXT_texture_compression_rgtc": {
      "indexes": [],
      "props": {
        "COMPRESSED_RED_GREEN_RGTC2_EXT": {
          "_": 4985,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RED_RGTC1_EXT": {
          "_": 4986,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT": {
          "_": 4987,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SIGNED_RED_RGTC1_EXT": {
          "_": 4988,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EXT_texture_filter_anisotropic": {
      "indexes": [],
      "props": {
        "MAX_TEXTURE_MAX_ANISOTROPY_EXT": {
          "_": 4993,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_MAX_ANISOTROPY_EXT": {
          "_": 4994,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The EXT_texture_filter_anisotropic extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF)."
    },
    "EXT_texture_norm16": {
      "indexes": [],
      "props": {
        "R16_EXT": {
          "_": 4998,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R16_SNORM_EXT": {
          "_": 4999,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG16_EXT": {
          "_": 5000,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG16_SNORM_EXT": {
          "_": 5001,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB16_EXT": {
          "_": 5002,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB16_SNORM_EXT": {
          "_": 5003,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA16_EXT": {
          "_": 5004,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA16_SNORM_EXT": {
          "_": 5005,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ElementEventMap": {
      "indexes": [],
      "props": {
        "\"fullscreenchange\"": {
          "_": 5009,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"fullscreenerror\"": {
          "_": 5010,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Element": {
      "indexes": [],
      "props": {
        "attributes": {
          "_": 5015,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NamedNodeMap",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "classList": {
          "_": 5017,
          "doc": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMTokenList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "className": {
          "_": 5019,
          "doc": "Returns the value of element's class content attribute. Can be set to change it.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientHeight": {
          "_": 5020,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientLeft": {
          "_": 5021,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientTop": {
          "_": 5022,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientWidth": {
          "_": 5023,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "id": {
          "_": 5025,
          "doc": "Returns the value of element's id content attribute. Can be set to change it.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "localName": {
          "_": 5027,
          "doc": "Returns the local name.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "namespaceURI": {
          "_": 5029,
          "doc": "Returns the namespace.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onfullscreenchange": {
          "_": 5030,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Element",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onfullscreenerror": {
          "_": 5031,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Element",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "outerHTML": {
          "_": 5032,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerDocument": {
          "_": 5033,
          "doc": "Returns the node document. Returns null for documents.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "part": {
          "_": 5034,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMTokenList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prefix": {
          "_": 5036,
          "doc": "Returns the namespace prefix.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollHeight": {
          "_": 5037,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollLeft": {
          "_": 5038,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollTop": {
          "_": 5039,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollWidth": {
          "_": 5040,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "shadowRoot": {
          "_": 5042,
          "doc": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ShadowRoot",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "slot": {
          "_": 5044,
          "doc": "Returns the value of element's slot content attribute. Can be set to change it.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "tagName": {
          "_": 5046,
          "doc": "Returns the HTML-uppercased qualified name.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "attachShadow": {
          "_": 5048,
          "doc": "Creates a shadow root for element and returns it.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ShadowRoot",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "closest": {
          "_": 5052,
          "doc": "Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "E",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAttribute": {
          "_": 5054,
          "doc": "Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getAttributeNS": {
          "_": 5056,
          "doc": "Returns element's attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getAttributeNames": {
          "_": 5058,
          "doc": "Returns the qualified names of all element's attributes. Can contain duplicates.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getAttributeNode": {
          "_": 5059,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAttributeNodeNS": {
          "_": 5060,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getBoundingClientRect": {
          "_": 5061,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMRect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getClientRects": {
          "_": 5062,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMRectList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementsByClassName": {
          "_": 5064,
          "doc": "Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "Element",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementsByTagName": {
          "_": 5067,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "Element",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementsByTagNameNS": {
          "_": 5070,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "Element",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "hasAttribute": {
          "_": 5072,
          "doc": "Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "hasAttributeNS": {
          "_": 5074,
          "doc": "Returns true if element has an attribute whose namespace is namespace and local name is localName.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "hasAttributes": {
          "_": 5076,
          "doc": "Returns true if element has attributes, and false otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "hasPointerCapture": {
          "_": 5077,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertAdjacentElement": {
          "_": 5078,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "insertAdjacentHTML": {
          "_": 5079,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertAdjacentText": {
          "_": 5080,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "matches": {
          "_": 5082,
          "doc": "Returns true if matching selectors against element's root yields element, and false otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "releasePointerCapture": {
          "_": 5083,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeAttribute": {
          "_": 5085,
          "doc": "Removes element's first attribute whose qualified name is qualifiedName.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeAttributeNS": {
          "_": 5087,
          "doc": "Removes element's attribute whose namespace is namespace and local name is localName.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeAttributeNode": {
          "_": 5088,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "requestFullscreen": {
          "_": 5094,
          "doc": "Displays element fullscreen and resolves promise when done.\n\nWhen supplied, options's navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to \"show\", navigation simplicity is preferred over screen space, and if set to \"hide\", more screen space is preferred. User agents are always free to honor user preference over the application's. The default value \"auto\" indicates no application preference.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "requestPointerLock": {
          "_": 5095,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "scroll": {
          "_": 5097,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollBy": {
          "_": 5099,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollIntoView": {
          "_": 5100,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollTo": {
          "_": 5102,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setAttribute": {
          "_": 5104,
          "doc": "Sets the value of element's first attribute whose qualified name is qualifiedName to value.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setAttributeNS": {
          "_": 5106,
          "doc": "Sets the value of element's attribute whose namespace is namespace and local name is localName to value.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setAttributeNode": {
          "_": 5107,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setAttributeNodeNS": {
          "_": 5108,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setPointerCapture": {
          "_": 5109,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "toggleAttribute": {
          "_": 5115,
          "doc": "If force is not given, \"toggles\" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.\n\nReturns true if qualifiedName is now present, and false otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitMatchesSelector": {
          "_": 5117,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 5119,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 5121,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element."
    },
    "ElementCSSInlineStyle": {
      "indexes": [],
      "props": {
        "style": {
          "_": 5130,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CSSStyleDeclaration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ElementContentEditable": {
      "indexes": [],
      "props": {
        "contentEditable": {
          "_": 5134,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "enterKeyHint": {
          "_": 5135,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "inputMode": {
          "_": 5136,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "isContentEditable": {
          "_": 5137,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ElementInternals": {
      "indexes": [],
      "props": {
        "form": {
          "_": 5142,
          "doc": "Returns the form owner of internals's target element.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "labels": {
          "_": 5144,
          "doc": "Returns a NodeList of all the label elements that internals's target element is associated with.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "shadowRoot": {
          "_": 5146,
          "doc": "Returns the ShadowRoot for internals's target element, if the target element is a shadow host, or null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ShadowRoot",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "validationMessage": {
          "_": 5148,
          "doc": "Returns the error message that would be shown to the user if internals's target element was to be checked for validity.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validity": {
          "_": 5150,
          "doc": "Returns the ValidityState object for internals's target element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ValidityState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "willValidate": {
          "_": 5152,
          "doc": "Returns true if internals's target element will be validated when the form is submitted; false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkValidity": {
          "_": 5154,
          "doc": "Returns true if internals's target element has no validity problems; false otherwise. Fires an invalid event at the element in the latter case.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "reportValidity": {
          "_": 5156,
          "doc": "Returns true if internals's target element has no validity problems; otherwise, returns false, fires an invalid event at the element, and (if the event isn't canceled) reports the problem to the user.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "setFormValue": {
          "_": 5162,
          "doc": "Sets both the state and submission value of internals's target element to value.\n\nIf value is null, the element won't participate in form submission.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setValidity": {
          "_": 5164,
          "doc": "Marks internals's target element as suffering from the constraints indicated by the flags argument, and sets the element's validation message to message. If anchor is specified, the user agent might use it to indicate problems with the constraints of internals's target element when the form owner is validated interactively or reportValidity() is called.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ErrorEvent": {
      "indexes": [],
      "props": {
        "colno": {
          "_": 5174,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "error": {
          "_": 5175,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "filename": {
          "_": 5176,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lineno": {
          "_": 5177,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "message": {
          "_": 5178,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events providing information related to errors in scripts or in files."
    },
    "Event": {
      "indexes": [],
      "props": {
        "bubbles": {
          "_": 5189,
          "doc": "Returns true or false depending on how event was initialized. True if event goes through its target's ancestors in reverse tree order, and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancelBubble": {
          "_": 5191,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancelable": {
          "_": 5193,
          "doc": "Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "composed": {
          "_": 5195,
          "doc": "Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "currentTarget": {
          "_": 5197,
          "doc": "Returns the object whose event listener's callback is currently being invoked.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "defaultPrevented": {
          "_": 5199,
          "doc": "Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "eventPhase": {
          "_": 5201,
          "doc": "Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "isTrusted": {
          "_": 5203,
          "doc": "Returns true if event was dispatched by the user agent, and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "returnValue": {
          "_": 5205,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "srcElement": {
          "_": 5207,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 5209,
          "doc": "Returns the object to which event is dispatched (its target).",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timeStamp": {
          "_": 5211,
          "doc": "Returns the event's timestamp as the number of milliseconds measured relative to the time origin.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 5213,
          "doc": "Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "composedPath": {
          "_": 5215,
          "doc": "Returns the invocation target objects of event's path (objects on which listeners will be invoked), except for any nodes in shadow trees of which the shadow root's mode is \"closed\" that are not reachable from event's currentTarget.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "EventTarget",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "initEvent": {
          "_": 5217,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "preventDefault": {
          "_": 5219,
          "doc": "If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stopImmediatePropagation": {
          "_": 5221,
          "doc": "Invoking this method prevents event from reaching any registered event listeners after the current one finishes running and, when dispatched in a tree, also prevents event from reaching any other objects.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stopPropagation": {
          "_": 5223,
          "doc": "When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "AT_TARGET": {
          "_": 5224,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "BUBBLING_PHASE": {
          "_": 5225,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "CAPTURING_PHASE": {
          "_": 5226,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NONE": {
          "_": 5227,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An event which takes place in the DOM."
    },
    "EventCounts": {
      "indexes": [],
      "props": {
        "forEach": {
          "_": 5240,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EventListener": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 5249,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EventListenerObject": {
      "indexes": [],
      "props": {
        "handleEvent": {
          "_": 5253,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EventSourceEventMap": {
      "indexes": [],
      "props": {
        "\"error\"": {
          "_": 5257,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"message\"": {
          "_": 5258,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"open\"": {
          "_": 5259,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EventSource": {
      "indexes": [],
      "props": {
        "onerror": {
          "_": 5263,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "EventSource",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessage": {
          "_": 5264,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "EventSource",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onopen": {
          "_": 5265,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "EventSource",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 5267,
          "doc": "Returns the state of this EventSource object's connection. It can have the values described below.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 5269,
          "doc": "Returns the URL providing the event stream.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "withCredentials": {
          "_": 5271,
          "doc": "Returns true if the credentials mode for connection requests to the URL providing the event stream is set to \"include\", and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 5273,
          "doc": "Aborts any instances of the fetch algorithm started for this EventSource object, and sets the readyState attribute to CLOSED.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "CLOSED": {
          "_": 5274,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "CONNECTING": {
          "_": 5275,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "OPEN": {
          "_": 5276,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 5279,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 5282,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EventTarget": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 5310,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "dispatchEvent": {
          "_": 5312,
          "doc": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 5314,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.\nEventTarget is a DOM interface implemented by objects that can\nreceive events and may have listeners for them."
    },
    "External": {
      "indexes": [],
      "props": {
        "AddSearchProvider": {
          "_": 5325,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "IsSearchProviderInstalled": {
          "_": 5327,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "File": {
      "indexes": [],
      "props": {
        "lastModified": {
          "_": 5338,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 5339,
          "doc": "Returns the name of the function. Function names are read-only and can not be changed.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitRelativePath": {
          "_": 5340,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides information about files and allows JavaScript in a web page to access their content."
    },
    "FileList": {
      "indexes": [
        {
          "_": 5352,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "File",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 5350,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 5351,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "File",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An object of this type is returned by the files property of the HTML <input> element; this lets you access the list of files selected with the <input type=\"file\"> element. It's also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage."
    },
    "FileReaderEventMap": {
      "indexes": [],
      "props": {
        "\"abort\"": {
          "_": 5361,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "FileReader",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 5362,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "FileReader",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"load\"": {
          "_": 5363,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "FileReader",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"loadend\"": {
          "_": 5364,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "FileReader",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"loadstart\"": {
          "_": 5365,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "FileReader",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"progress\"": {
          "_": 5366,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "FileReader",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileReader": {
      "indexes": [],
      "props": {
        "error": {
          "_": 5371,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DOMException",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onabort": {
          "_": 5372,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "FileReader",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [
                    {
                      "ref": "FileReader",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 5373,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "FileReader",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [
                    {
                      "ref": "FileReader",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onload": {
          "_": 5374,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "FileReader",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [
                    {
                      "ref": "FileReader",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onloadend": {
          "_": 5375,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "FileReader",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [
                    {
                      "ref": "FileReader",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onloadstart": {
          "_": 5376,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "FileReader",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [
                    {
                      "ref": "FileReader",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onprogress": {
          "_": 5377,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "FileReader",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [
                    {
                      "ref": "FileReader",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 5378,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "result": {
          "_": 5379,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "abort": {
          "_": 5380,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "readAsArrayBuffer": {
          "_": 5381,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "readAsBinaryString": {
          "_": 5382,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "readAsDataURL": {
          "_": 5383,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "readAsText": {
          "_": 5384,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "DONE": {
          "_": 5385,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "EMPTY": {
          "_": 5386,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LOADING": {
          "_": 5387,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 5389,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 5391,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read."
    },
    "FileSystem": {
      "indexes": [],
      "props": {
        "name": {
          "_": 5403,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "root": {
          "_": 5404,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FileSystemDirectoryEntry",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemDirectoryEntry": {
      "indexes": [],
      "props": {
        "createReader": {
          "_": 5413,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "FileSystemDirectoryReader",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getDirectory": {
          "_": 5414,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getFile": {
          "_": 5415,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemDirectoryHandle": {
      "indexes": [],
      "props": {
        "kind": {
          "_": 5425,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "\"directory\"",
            "isFuture": false
          },
          "isStatic": false
        },
        "getDirectoryHandle": {
          "_": 5426,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "FileSystemDirectoryHandle",
            "generics": []
          },
          "isStatic": false
        },
        "getFileHandle": {
          "_": 5427,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "FileSystemFileHandle",
            "generics": []
          },
          "isStatic": false
        },
        "removeEntry": {
          "_": 5428,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "resolve": {
          "_": 5429,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "array": {
              "core": "string",
              "isFuture": false
            }
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "FileSystemDirectoryReader": {
      "indexes": [],
      "props": {
        "readEntries": {
          "_": 5438,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemEntry": {
      "indexes": [],
      "props": {
        "filesystem": {
          "_": 5447,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FileSystem",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "fullPath": {
          "_": 5448,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "isDirectory": {
          "_": 5449,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isFile": {
          "_": 5450,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 5451,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getParent": {
          "_": 5452,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemFileEntry": {
      "indexes": [],
      "props": {
        "file": {
          "_": 5461,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemFileHandle": {
      "indexes": [],
      "props": {
        "kind": {
          "_": 5471,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "\"file\"",
            "isFuture": false
          },
          "isStatic": false
        },
        "getFile": {
          "_": 5472,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "File",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "FileSystemHandle": {
      "indexes": [],
      "props": {
        "kind": {
          "_": 5482,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FileSystemHandleKind",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 5483,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "isSameEntry": {
          "_": 5484,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "FocusEvent": {
      "indexes": [],
      "props": {
        "relatedTarget": {
          "_": 5494,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Focus-related events like focus, blur, focusin, or focusout."
    },
    "FontFace": {
      "indexes": [],
      "props": {
        "ascentOverride": {
          "_": 5503,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "descentOverride": {
          "_": 5504,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "display": {
          "_": 5505,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "family": {
          "_": 5506,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "featureSettings": {
          "_": 5507,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lineGapOverride": {
          "_": 5508,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "loaded": {
          "_": 5509,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "FontFace",
            "generics": []
          },
          "isStatic": false
        },
        "status": {
          "_": 5510,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FontFaceLoadStatus",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "stretch": {
          "_": 5511,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "style": {
          "_": 5512,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "unicodeRange": {
          "_": 5513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "variant": {
          "_": 5514,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "variationSettings": {
          "_": 5515,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "weight": {
          "_": 5516,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "load": {
          "_": 5517,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "FontFace",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FontFaceSetEventMap": {
      "indexes": [],
      "props": {
        "\"loading\"": {
          "_": 5526,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"loadingdone\"": {
          "_": 5527,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"loadingerror\"": {
          "_": 5528,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FontFaceSet": {
      "indexes": [],
      "props": {
        "onloading": {
          "_": 5532,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "FontFaceSet",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onloadingdone": {
          "_": 5533,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "FontFaceSet",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onloadingerror": {
          "_": 5534,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "FontFaceSet",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ready": {
          "_": 5535,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "FontFaceSet",
            "generics": []
          },
          "isStatic": false
        },
        "status": {
          "_": 5536,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FontFaceSetLoadStatus",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "check": {
          "_": 5537,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "load": {
          "_": 5538,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "array": {
              "ref": "FontFace",
              "generics": [],
              "isFuture": false
            }
          },
          "isStatic": false
        },
        "forEach": {
          "_": 5539,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 5541,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 5543,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FontFaceSetLoadEvent": {
      "indexes": [],
      "props": {
        "fontfaces": {
          "_": 5552,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "FontFace",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FontFaceSource": {
      "indexes": [],
      "props": {
        "fonts": {
          "_": 5561,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FontFaceSet",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FormData": {
      "indexes": [],
      "props": {
        "append": {
          "_": 5566,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "delete": {
          "_": 5567,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "get": {
          "_": 5568,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "FormDataEntryValue",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAll": {
          "_": 5569,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "FormDataEntryValue",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "has": {
          "_": 5570,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 5571,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 5572,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the XMLHttpRequest.send() method. It uses the same format a form would use if the encoding type were set to \"multipart/form-data\"."
    },
    "FormDataEvent": {
      "indexes": [],
      "props": {
        "formData": {
          "_": 5582,
          "doc": "Returns a FormData object representing names and values of elements associated to the target form. Operations on the FormData object will affect form data to be submitted.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FormData",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "GainNode": {
      "indexes": [],
      "props": {
        "gain": {
          "_": 5592,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A change in volume. It is an AudioNode audio-processing module that causes a given gain to be applied to the input data before its propagation to the output. A GainNode always has exactly one input and one output, both with the same number of channels."
    },
    "Gamepad": {
      "indexes": [],
      "props": {
        "axes": {
          "_": 5605,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "core": "number",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "buttons": {
          "_": 5606,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "GamepadButton",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "connected": {
          "_": 5607,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "hapticActuators": {
          "_": 5608,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "GamepadHapticActuator",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "id": {
          "_": 5609,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "index": {
          "_": 5610,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "mapping": {
          "_": 5611,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GamepadMappingType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timestamp": {
          "_": 5612,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Gamepad API interface defines an individual gamepad or other controller, allowing access to information such as button presses, axis positions, and id.\nAvailable only in secure contexts."
    },
    "GamepadButton": {
      "indexes": [],
      "props": {
        "pressed": {
          "_": 5625,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "touched": {
          "_": 5626,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 5627,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An individual button of a gamepad or other controller, allowing access to the current state of different types of buttons available on the control device.\nAvailable only in secure contexts."
    },
    "GamepadEvent": {
      "indexes": [],
      "props": {
        "gamepad": {
          "_": 5640,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Gamepad",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Gamepad API interface contains references to gamepads connected to the system, which is what the gamepad events Window.gamepadconnected and Window.gamepaddisconnected are fired in response to.\nAvailable only in secure contexts."
    },
    "GamepadHapticActuator": {
      "indexes": [],
      "props": {
        "type": {
          "_": 5650,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GamepadHapticActuatorType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Gamepad API interface represents hardware in the controller designed to provide haptic feedback to the user (if available), most commonly vibration hardware."
    },
    "GenericTransformStream": {
      "indexes": [],
      "props": {
        "readable": {
          "_": 5659,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadableStream",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "writable": {
          "_": 5660,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WritableStream",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Geolocation": {
      "indexes": [],
      "props": {
        "clearWatch": {
          "_": 5665,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getCurrentPosition": {
          "_": 5666,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "watchPosition": {
          "_": 5667,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An object able to programmatically obtain the position of the device. It gives Web content access to the location of the device. This allows a Web site or app to offer customized results based on the user's location."
    },
    "GeolocationCoordinates": {
      "indexes": [],
      "props": {
        "accuracy": {
          "_": 5677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "altitude": {
          "_": 5678,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "altitudeAccuracy": {
          "_": 5679,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "heading": {
          "_": 5680,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "latitude": {
          "_": 5681,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "longitude": {
          "_": 5682,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "speed": {
          "_": 5683,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "GeolocationPosition": {
      "indexes": [],
      "props": {
        "coords": {
          "_": 5693,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GeolocationCoordinates",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timestamp": {
          "_": 5694,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "EpochTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "GeolocationPositionError": {
      "indexes": [],
      "props": {
        "code": {
          "_": 5703,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "message": {
          "_": 5704,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "PERMISSION_DENIED": {
          "_": 5705,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "POSITION_UNAVAILABLE": {
          "_": 5706,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TIMEOUT": {
          "_": 5707,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "GlobalEventHandlersEventMap": {
      "indexes": [],
      "props": {
        "\"abort\"": {
          "_": 5719,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UIEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"animationcancel\"": {
          "_": 5720,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AnimationEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"animationend\"": {
          "_": 5721,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AnimationEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"animationiteration\"": {
          "_": 5722,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AnimationEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"animationstart\"": {
          "_": 5723,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AnimationEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"auxclick\"": {
          "_": 5724,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"beforeinput\"": {
          "_": 5725,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "InputEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"blur\"": {
          "_": 5726,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FocusEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"cancel\"": {
          "_": 5727,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"canplay\"": {
          "_": 5728,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"canplaythrough\"": {
          "_": 5729,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"change\"": {
          "_": 5730,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"click\"": {
          "_": 5731,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"close\"": {
          "_": 5732,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"compositionend\"": {
          "_": 5733,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CompositionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"compositionstart\"": {
          "_": 5734,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CompositionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"compositionupdate\"": {
          "_": 5735,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CompositionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"contextmenu\"": {
          "_": 5736,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"cuechange\"": {
          "_": 5737,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dblclick\"": {
          "_": 5738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"drag\"": {
          "_": 5739,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DragEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dragend\"": {
          "_": 5740,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DragEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dragenter\"": {
          "_": 5741,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DragEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dragleave\"": {
          "_": 5742,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DragEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dragover\"": {
          "_": 5743,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DragEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dragstart\"": {
          "_": 5744,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DragEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"drop\"": {
          "_": 5745,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DragEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"durationchange\"": {
          "_": 5746,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"emptied\"": {
          "_": 5747,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"ended\"": {
          "_": 5748,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 5749,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ErrorEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"focus\"": {
          "_": 5750,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FocusEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"focusin\"": {
          "_": 5751,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FocusEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"focusout\"": {
          "_": 5752,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FocusEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"formdata\"": {
          "_": 5753,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "FormDataEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"gotpointercapture\"": {
          "_": 5754,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"input\"": {
          "_": 5755,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"invalid\"": {
          "_": 5756,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"keydown\"": {
          "_": 5757,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "KeyboardEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"keypress\"": {
          "_": 5758,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "KeyboardEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"keyup\"": {
          "_": 5759,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "KeyboardEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"load\"": {
          "_": 5760,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"loadeddata\"": {
          "_": 5761,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"loadedmetadata\"": {
          "_": 5762,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"loadstart\"": {
          "_": 5763,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"lostpointercapture\"": {
          "_": 5764,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mousedown\"": {
          "_": 5765,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mouseenter\"": {
          "_": 5766,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mouseleave\"": {
          "_": 5767,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mousemove\"": {
          "_": 5768,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mouseout\"": {
          "_": 5769,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mouseover\"": {
          "_": 5770,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mouseup\"": {
          "_": 5771,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MouseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pause\"": {
          "_": 5772,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"play\"": {
          "_": 5773,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"playing\"": {
          "_": 5774,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointercancel\"": {
          "_": 5775,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointerdown\"": {
          "_": 5776,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointerenter\"": {
          "_": 5777,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointerleave\"": {
          "_": 5778,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointermove\"": {
          "_": 5779,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointerout\"": {
          "_": 5780,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointerover\"": {
          "_": 5781,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pointerup\"": {
          "_": 5782,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PointerEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"progress\"": {
          "_": 5783,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"ratechange\"": {
          "_": 5784,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"reset\"": {
          "_": 5785,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"resize\"": {
          "_": 5786,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "UIEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"scroll\"": {
          "_": 5787,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"securitypolicyviolation\"": {
          "_": 5788,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SecurityPolicyViolationEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"seeked\"": {
          "_": 5789,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"seeking\"": {
          "_": 5790,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"select\"": {
          "_": 5791,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"selectionchange\"": {
          "_": 5792,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"selectstart\"": {
          "_": 5793,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"slotchange\"": {
          "_": 5794,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"stalled\"": {
          "_": 5795,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"submit\"": {
          "_": 5796,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SubmitEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"suspend\"": {
          "_": 5797,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"timeupdate\"": {
          "_": 5798,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"toggle\"": {
          "_": 5799,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"touchcancel\"": {
          "_": 5800,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TouchEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"touchend\"": {
          "_": 5801,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TouchEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"touchmove\"": {
          "_": 5802,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TouchEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"touchstart\"": {
          "_": 5803,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TouchEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"transitioncancel\"": {
          "_": 5804,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TransitionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"transitionend\"": {
          "_": 5805,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TransitionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"transitionrun\"": {
          "_": 5806,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TransitionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"transitionstart\"": {
          "_": 5807,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TransitionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"volumechange\"": {
          "_": 5808,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"waiting\"": {
          "_": 5809,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"webkitanimationend\"": {
          "_": 5810,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"webkitanimationiteration\"": {
          "_": 5811,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"webkitanimationstart\"": {
          "_": 5812,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"webkittransitionend\"": {
          "_": 5813,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"wheel\"": {
          "_": 5814,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WheelEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "GlobalEventHandlers": {
      "indexes": [],
      "props": {
        "onabort": {
          "_": 5822,
          "doc": "Fires when the user aborts the download.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "UIEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onanimationcancel": {
          "_": 5823,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "AnimationEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onanimationend": {
          "_": 5824,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "AnimationEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onanimationiteration": {
          "_": 5825,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "AnimationEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onanimationstart": {
          "_": 5826,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "AnimationEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onauxclick": {
          "_": 5827,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onbeforeinput": {
          "_": 5828,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "InputEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onblur": {
          "_": 5833,
          "doc": "Fires when the object loses the input focus.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "FocusEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncancel": {
          "_": 5834,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncanplay": {
          "_": 5839,
          "doc": "Occurs when playback is possible, but would require further buffering.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncanplaythrough": {
          "_": 5840,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onchange": {
          "_": 5845,
          "doc": "Fires when the contents of the object or selection have changed.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onclick": {
          "_": 5850,
          "doc": "Fires when the user clicks the left mouse button on the object",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onclose": {
          "_": 5851,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncontextmenu": {
          "_": 5856,
          "doc": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncuechange": {
          "_": 5857,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondblclick": {
          "_": 5862,
          "doc": "Fires when the user double-clicks the object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondrag": {
          "_": 5867,
          "doc": "Fires on the source object continuously during a drag operation.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "DragEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondragend": {
          "_": 5872,
          "doc": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "DragEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondragenter": {
          "_": 5877,
          "doc": "Fires on the target element when the user drags the object to a valid drop target.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "DragEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondragleave": {
          "_": 5882,
          "doc": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "DragEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondragover": {
          "_": 5887,
          "doc": "Fires on the target element continuously while the user drags the object over a valid drop target.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "DragEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondragstart": {
          "_": 5892,
          "doc": "Fires on the source object when the user starts to drag a text selection or selected object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "DragEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondrop": {
          "_": 5893,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "DragEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondurationchange": {
          "_": 5898,
          "doc": "Occurs when the duration attribute is updated.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onemptied": {
          "_": 5903,
          "doc": "Occurs when the media element is reset to its initial state.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onended": {
          "_": 5908,
          "doc": "Occurs when the end of playback is reached.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 5913,
          "doc": "Fires when an error occurs during object loading.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "OnErrorEventHandler",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onfocus": {
          "_": 5918,
          "doc": "Fires when the object receives focus.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "FocusEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onformdata": {
          "_": 5919,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "FormDataEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ongotpointercapture": {
          "_": 5920,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oninput": {
          "_": 5921,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oninvalid": {
          "_": 5922,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onkeydown": {
          "_": 5927,
          "doc": "Fires when the user presses a key.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "KeyboardEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onkeypress": {
          "_": 5933,
          "doc": "Fires when the user presses an alphanumeric key.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "KeyboardEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onkeyup": {
          "_": 5938,
          "doc": "Fires when the user releases a key.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "KeyboardEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onload": {
          "_": 5943,
          "doc": "Fires immediately after the browser loads the object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onloadeddata": {
          "_": 5948,
          "doc": "Occurs when media data is loaded at the current playback position.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onloadedmetadata": {
          "_": 5953,
          "doc": "Occurs when the duration and dimensions of the media have been determined.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onloadstart": {
          "_": 5958,
          "doc": "Occurs when Internet Explorer begins looking for media data.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onlostpointercapture": {
          "_": 5959,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmousedown": {
          "_": 5964,
          "doc": "Fires when the user clicks the object with either mouse button.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmouseenter": {
          "_": 5965,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmouseleave": {
          "_": 5966,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmousemove": {
          "_": 5971,
          "doc": "Fires when the user moves the mouse over the object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmouseout": {
          "_": 5976,
          "doc": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmouseover": {
          "_": 5981,
          "doc": "Fires when the user moves the mouse pointer into the object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmouseup": {
          "_": 5986,
          "doc": "Fires when the user releases a mouse button while the mouse is over the object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MouseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpause": {
          "_": 5991,
          "doc": "Occurs when playback is paused.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onplay": {
          "_": 5996,
          "doc": "Occurs when the play method is requested.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onplaying": {
          "_": 6001,
          "doc": "Occurs when the audio or video has started playing.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointercancel": {
          "_": 6002,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointerdown": {
          "_": 6003,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointerenter": {
          "_": 6004,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointerleave": {
          "_": 6005,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointermove": {
          "_": 6006,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointerout": {
          "_": 6007,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointerover": {
          "_": 6008,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpointerup": {
          "_": 6009,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PointerEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onprogress": {
          "_": 6014,
          "doc": "Occurs to indicate progress while downloading media data.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onratechange": {
          "_": 6019,
          "doc": "Occurs when the playback rate is increased or decreased.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onreset": {
          "_": 6024,
          "doc": "Fires when the user resets a form.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onresize": {
          "_": 6025,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "UIEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onscroll": {
          "_": 6030,
          "doc": "Fires when the user repositions the scroll box in the scroll bar on the object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onsecuritypolicyviolation": {
          "_": 6031,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "SecurityPolicyViolationEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onseeked": {
          "_": 6036,
          "doc": "Occurs when the seek operation ends.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onseeking": {
          "_": 6041,
          "doc": "Occurs when the current playback position is moved.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onselect": {
          "_": 6046,
          "doc": "Fires when the current selection changes.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onselectionchange": {
          "_": 6047,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onselectstart": {
          "_": 6048,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onslotchange": {
          "_": 6049,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onstalled": {
          "_": 6054,
          "doc": "Occurs when the download has stopped.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onsubmit": {
          "_": 6055,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "SubmitEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onsuspend": {
          "_": 6060,
          "doc": "Occurs if the load operation has been intentionally halted.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontimeupdate": {
          "_": 6065,
          "doc": "Occurs to indicate the current playback position.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontoggle": {
          "_": 6066,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontouchcancel": {
          "_": 6067,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TouchEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontouchend": {
          "_": 6068,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TouchEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontouchmove": {
          "_": 6069,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TouchEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontouchstart": {
          "_": 6070,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TouchEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontransitioncancel": {
          "_": 6071,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TransitionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontransitionend": {
          "_": 6072,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TransitionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontransitionrun": {
          "_": 6073,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TransitionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontransitionstart": {
          "_": 6074,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TransitionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onvolumechange": {
          "_": 6079,
          "doc": "Occurs when the volume is changed, or playback is muted or unmuted.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onwaiting": {
          "_": 6084,
          "doc": "Occurs when playback stops because the next frame of a video resource is not available.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onwebkitanimationend": {
          "_": 6086,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onwebkitanimationiteration": {
          "_": 6088,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onwebkitanimationstart": {
          "_": 6090,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onwebkittransitionend": {
          "_": 6092,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onwheel": {
          "_": 6093,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "GlobalEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "WheelEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6095,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6097,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLAllCollection": {
      "indexes": [
        {
          "_": 6113,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 6102,
          "doc": "Returns the number of elements in the collection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 6104,
          "doc": "Returns the item with index index from the collection (determined by tree order).",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "namedItem": {
          "_": 6112,
          "doc": "Returns the item with ID or name name from the collection.\n\nIf there are multiple matching items, then an HTMLCollection object containing all those elements is returned.\n\nOnly button, form, iframe, input, map, meta, object, select, and textarea elements can have a name for the purpose of this method; their name is given by the value of their name attribute.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLAnchorElement": {
      "indexes": [],
      "props": {
        "charset": {
          "_": 6127,
          "doc": "Sets or retrieves the character set used to encode the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "coords": {
          "_": 6132,
          "doc": "Sets or retrieves the coordinates of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "download": {
          "_": 6133,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "hreflang": {
          "_": 6135,
          "doc": "Sets or retrieves the language code of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 6140,
          "doc": "Sets or retrieves the shape of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ping": {
          "_": 6141,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrerPolicy": {
          "_": 6142,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rel": {
          "_": 6144,
          "doc": "Sets or retrieves the relationship between the object and the destination of the link.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "relList": {
          "_": 6145,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMTokenList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rev": {
          "_": 6150,
          "doc": "Sets or retrieves the relationship between the object and the destination of the link.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "shape": {
          "_": 6155,
          "doc": "Sets or retrieves the shape of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 6157,
          "doc": "Sets or retrieves the window or frame at which to target content.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "text": {
          "_": 6159,
          "doc": "Retrieves or sets the text of the object as a string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 6160,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6162,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6164,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface that they inherit from) for manipulating the layout and presentation of such elements."
    },
    "HTMLAreaElement": {
      "indexes": [],
      "props": {
        "alt": {
          "_": 6175,
          "doc": "Sets or retrieves a text alternative to the graphic.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "coords": {
          "_": 6177,
          "doc": "Sets or retrieves the coordinates of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "download": {
          "_": 6178,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "noHref": {
          "_": 6183,
          "doc": "Sets or gets whether clicks in this region cause action.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ping": {
          "_": 6184,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrerPolicy": {
          "_": 6185,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rel": {
          "_": 6186,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "relList": {
          "_": 6187,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMTokenList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "shape": {
          "_": 6189,
          "doc": "Sets or retrieves the shape of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 6191,
          "doc": "Sets or retrieves the window or frame at which to target content.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6193,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6195,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <area> elements."
    },
    "HTMLAudioElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 6206,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6208,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <audio> elements, as well as methods to manipulate them. It derives from the HTMLMediaElement interface."
    },
    "HTMLBRElement": {
      "indexes": [],
      "props": {
        "clear": {
          "_": 6222,
          "doc": "Sets or retrieves the side on which floating objects are not to be positioned when any IHTMLBlockElement is inserted into the document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6224,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6226,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A HTML line break element (<br>). It inherits from HTMLElement."
    },
    "HTMLBaseElement": {
      "indexes": [],
      "props": {
        "href": {
          "_": 6237,
          "doc": "Gets or sets the baseline URL on which relative links are based.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 6239,
          "doc": "Sets or retrieves the window or frame at which to target content.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6241,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6243,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Contains the base URI for a document. This object inherits all of the properties and methods as described in the HTMLElement interface."
    },
    "HTMLBodyElementEventMap": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLBodyElement": {
      "indexes": [],
      "props": {
        "aLink": {
          "_": 6257,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "background": {
          "_": 6259,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "bgColor": {
          "_": 6261,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "link": {
          "_": 6263,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "text": {
          "_": 6265,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "vLink": {
          "_": 6267,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6269,
          "doc": "\n\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6271,
          "doc": "\n\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond those inherited from the regular HTMLElement interface) for manipulating <body> elements."
    },
    "HTMLButtonElement": {
      "indexes": [],
      "props": {
        "disabled": {
          "_": 6281,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 6283,
          "doc": "Retrieves a reference to the form that the object is embedded in.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "formAction": {
          "_": 6285,
          "doc": "Overrides the action attribute (where the data on a form is sent) on the parent form element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "formEnctype": {
          "_": 6287,
          "doc": "Used to override the encoding (formEnctype attribute) specified on the form element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "formMethod": {
          "_": 6289,
          "doc": "Overrides the submit method attribute previously specified on a form element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "formNoValidate": {
          "_": 6291,
          "doc": "Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \"save draft\"-type submit option.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "formTarget": {
          "_": 6293,
          "doc": "Overrides the target attribute on a form element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "labels": {
          "_": 6294,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "HTMLLabelElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 6296,
          "doc": "Sets or retrieves the name of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 6298,
          "doc": "Gets the classification and default behavior of the button.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validationMessage": {
          "_": 6300,
          "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validity": {
          "_": 6302,
          "doc": "Returns a  ValidityState object that represents the validity states of an element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ValidityState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 6304,
          "doc": "Sets or retrieves the default or selected value of the control.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "willValidate": {
          "_": 6306,
          "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkValidity": {
          "_": 6308,
          "doc": "Returns whether a form will validate when it is submitted, without having to submit it.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "reportValidity": {
          "_": 6309,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "setCustomValidity": {
          "_": 6314,
          "doc": "Sets a custom error message that is displayed when a form is submitted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6316,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6318,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <button> elements."
    },
    "HTMLCanvasElement": {
      "indexes": [],
      "props": {
        "height": {
          "_": 6329,
          "doc": "Gets or sets the height of a canvas element on a document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 6331,
          "doc": "Gets or sets the width of a canvas element on a document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "captureStream": {
          "_": 6332,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaStream",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getContext": {
          "_": 6341,
          "doc": "Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "RenderingContext",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toBlob": {
          "_": 6342,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "toDataURL": {
          "_": 6347,
          "doc": "Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transferControlToOffscreen": {
          "_": 6348,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "OffscreenCanvas",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6350,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6352,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides properties and methods for manipulating the layout and presentation of <canvas> elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface."
    },
    "HTMLCollectionBase": {
      "indexes": [
        {
          "_": 6366,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 6363,
          "doc": "Sets or retrieves the number of objects in a collection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 6365,
          "doc": "Retrieves an object from various collections.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list."
    },
    "HTMLCollection": {
      "indexes": [],
      "props": {
        "namedItem": {
          "_": 6371,
          "doc": "Retrieves a select object or an object from an options collection.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLCollectionOf": {
      "indexes": [
        {
          "_": 6382,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "item": {
          "_": 6380,
          "doc": "Retrieves an object from various collections.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "namedItem": {
          "_": 6381,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "HTMLDListElement": {
      "indexes": [],
      "props": {
        "compact": {
          "_": 6388,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6390,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6392,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond those of the regular HTMLElement interface it also has available to it by inheritance) for manipulating definition list (<dl>) elements."
    },
    "HTMLDataElement": {
      "indexes": [],
      "props": {
        "value": {
          "_": 6402,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6404,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6406,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <data> elements."
    },
    "HTMLDataListElement": {
      "indexes": [],
      "props": {
        "options": {
          "_": 6417,
          "doc": "Returns an HTMLCollection of the option elements of the datalist element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLOptionElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6419,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6421,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond the HTMLElement object interface it also has available to it by inheritance) to manipulate <datalist> elements and their content."
    },
    "HTMLDetailsElement": {
      "indexes": [],
      "props": {
        "open": {
          "_": 6430,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6432,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6434,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLDialogElement": {
      "indexes": [],
      "props": {
        "open": {
          "_": 6443,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "returnValue": {
          "_": 6444,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 6450,
          "doc": "Closes the dialog element.\n\nThe argument, if provided, provides a return value.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "show": {
          "_": 6452,
          "doc": "Displays the dialog element.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "showModal": {
          "_": 6453,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6455,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6457,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLDirectoryElement": {
      "indexes": [],
      "props": {
        "compact": {
          "_": 6468,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6470,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6472,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLDivElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 6487,
          "doc": "Sets or retrieves how the object is aligned with adjacent text.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6489,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6491,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <div> elements."
    },
    "HTMLDocument": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 6502,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6504,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLElementEventMap": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLElement": {
      "indexes": [],
      "props": {
        "accessKey": {
          "_": 6518,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "accessKeyLabel": {
          "_": 6519,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "autocapitalize": {
          "_": 6520,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dir": {
          "_": 6521,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "draggable": {
          "_": 6522,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "hidden": {
          "_": 6523,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "inert": {
          "_": 6524,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "innerText": {
          "_": 6525,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lang": {
          "_": 6526,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetHeight": {
          "_": 6527,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetLeft": {
          "_": 6528,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetParent": {
          "_": 6529,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetTop": {
          "_": 6530,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetWidth": {
          "_": 6531,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "outerText": {
          "_": 6532,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "spellcheck": {
          "_": 6533,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "title": {
          "_": 6534,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "translate": {
          "_": 6535,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "attachInternals": {
          "_": 6536,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ElementInternals",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "click": {
          "_": 6537,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6539,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6541,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it."
    },
    "HTMLEmbedElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 6552,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 6554,
          "doc": "Sets or retrieves the height of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 6559,
          "doc": "Sets or retrieves the name of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 6561,
          "doc": "Sets or retrieves a URL to be loaded by the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 6562,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 6564,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getSVGDocument": {
          "_": 6565,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6567,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6569,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <embed> elements."
    },
    "HTMLFieldSetElement": {
      "indexes": [],
      "props": {
        "disabled": {
          "_": 6579,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "elements": {
          "_": 6581,
          "doc": "Returns an HTMLCollection of the form controls in the element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 6583,
          "doc": "Retrieves a reference to the form that the object is embedded in.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 6584,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 6586,
          "doc": "Returns the string \"fieldset\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validationMessage": {
          "_": 6588,
          "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validity": {
          "_": 6590,
          "doc": "Returns a  ValidityState object that represents the validity states of an element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ValidityState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "willValidate": {
          "_": 6592,
          "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkValidity": {
          "_": 6594,
          "doc": "Returns whether a form will validate when it is submitted, without having to submit it.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "reportValidity": {
          "_": 6595,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "setCustomValidity": {
          "_": 6600,
          "doc": "Sets a custom error message that is displayed when a form is submitted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6602,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6604,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <fieldset> elements."
    },
    "HTMLFontElement": {
      "indexes": [],
      "props": {
        "color": {
          "_": 6618,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "face": {
          "_": 6623,
          "doc": "Sets or retrieves the current typeface family.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "size": {
          "_": 6625,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6627,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6629,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Implements the document object model (DOM) representation of the font element. The HTML Font Element <font> defines the font size, font face and color of text."
    },
    "HTMLFormControlsCollection": {
      "indexes": [],
      "props": {
        "namedItem": {
          "_": 6645,
          "doc": "Returns the item with ID or name name from the collection.\n\nIf there are multiple matching items, then a RadioNodeList object containing all those elements is returned.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A collection of HTML form control elements."
    },
    "HTMLFormElement": {
      "indexes": [
        {
          "_": 6689,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          }
        },
        {
          "_": 6690,
          "key": {
            "core": "string",
            "isFuture": false
          },
          "value": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "props": {
        "acceptCharset": {
          "_": 6656,
          "doc": "Sets or retrieves a list of character encodings for input data that must be accepted by the server processing the form.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "action": {
          "_": 6658,
          "doc": "Sets or retrieves the URL to which the form content is sent for processing.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "autocomplete": {
          "_": 6660,
          "doc": "Specifies whether autocomplete is applied to an editable text field.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "elements": {
          "_": 6662,
          "doc": "Retrieves a collection, in source order, of all controls in a given form.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLFormControlsCollection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "encoding": {
          "_": 6664,
          "doc": "Sets or retrieves the MIME encoding for the form.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "enctype": {
          "_": 6666,
          "doc": "Sets or retrieves the encoding type for the form.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 6668,
          "doc": "Sets or retrieves the number of objects in a collection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "method": {
          "_": 6670,
          "doc": "Sets or retrieves how to send the form data to the server.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 6672,
          "doc": "Sets or retrieves the name of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "noValidate": {
          "_": 6674,
          "doc": "Designates a form that is not validated when submitted.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 6676,
          "doc": "Sets or retrieves the window or frame at which to target content.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkValidity": {
          "_": 6678,
          "doc": "Returns whether a form will validate when it is submitted, without having to submit it.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "reportValidity": {
          "_": 6679,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "requestSubmit": {
          "_": 6680,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "reset": {
          "_": 6682,
          "doc": "Fires when the user resets a form.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "submit": {
          "_": 6684,
          "doc": "Fires when a FORM is about to be submitted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6686,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6688,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements."
    },
    "HTMLFrameElement": {
      "indexes": [],
      "props": {
        "contentDocument": {
          "_": 6704,
          "doc": "Retrieves the document object of the page or frame.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "contentWindow": {
          "_": 6709,
          "doc": "Retrieves the object of the specified.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "WindowProxy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "frameBorder": {
          "_": 6714,
          "doc": "Sets or retrieves whether to display a border for the frame.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "longDesc": {
          "_": 6719,
          "doc": "Sets or retrieves a URI to a long description of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginHeight": {
          "_": 6724,
          "doc": "Sets or retrieves the top and bottom margin heights before displaying the text in a frame.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginWidth": {
          "_": 6729,
          "doc": "Sets or retrieves the left and right margin widths before displaying the text in a frame.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 6734,
          "doc": "Sets or retrieves the frame name.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "noResize": {
          "_": 6739,
          "doc": "Sets or retrieves whether the user can resize the frame.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrolling": {
          "_": 6744,
          "doc": "Sets or retrieves whether the frame can be scrolled.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 6749,
          "doc": "Sets or retrieves a URL to be loaded by the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6751,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6753,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLFrameSetElementEventMap": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLFrameSetElement": {
      "indexes": [],
      "props": {
        "cols": {
          "_": 6774,
          "doc": "Sets or retrieves the frame widths of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rows": {
          "_": 6779,
          "doc": "Sets or retrieves the frame heights of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6781,
          "doc": "\n\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6783,
          "doc": "\n\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating <frameset> elements."
    },
    "HTMLHRElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 6798,
          "doc": "Sets or retrieves how the object is aligned with adjacent text.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "color": {
          "_": 6800,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "noShade": {
          "_": 6805,
          "doc": "Sets or retrieves whether the horizontal rule is drawn with 3-D shading.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "size": {
          "_": 6807,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 6812,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6814,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6816,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating <hr> elements."
    },
    "HTMLHeadElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 6827,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6829,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface."
    },
    "HTMLHeadingElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 6843,
          "doc": "Sets or retrieves a value that indicates the table alignment.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6845,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6847,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The different heading elements. It inherits methods and properties from the HTMLElement interface."
    },
    "HTMLHtmlElement": {
      "indexes": [],
      "props": {
        "version": {
          "_": 6861,
          "doc": "Sets or retrieves the DTD version that governs the current document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6863,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6865,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Serves as the root node for a given HTML document. This object inherits the properties and methods described in the HTMLElement interface."
    },
    "HTMLHyperlinkElementUtils": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 6879,
          "doc": "Returns the hyperlink's URL's fragment (includes leading \"#\" if non-empty).\n\nCan be set, to change the URL's fragment (ignores leading \"#\").",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "host": {
          "_": 6885,
          "doc": "Returns the hyperlink's URL's host and port (if different from the default port for the scheme).\n\nCan be set, to change the URL's host and port.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "hostname": {
          "_": 6891,
          "doc": "Returns the hyperlink's URL's host.\n\nCan be set, to change the URL's host.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "href": {
          "_": 6897,
          "doc": "Returns the hyperlink's URL.\n\nCan be set, to change the URL.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 6898,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "origin": {
          "_": 6900,
          "doc": "Returns the hyperlink's URL's origin.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "password": {
          "_": 6906,
          "doc": "Returns the hyperlink's URL's password.\n\nCan be set, to change the URL's password.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pathname": {
          "_": 6912,
          "doc": "Returns the hyperlink's URL's path.\n\nCan be set, to change the URL's path.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "port": {
          "_": 6918,
          "doc": "Returns the hyperlink's URL's port.\n\nCan be set, to change the URL's port.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "protocol": {
          "_": 6924,
          "doc": "Returns the hyperlink's URL's scheme.\n\nCan be set, to change the URL's scheme.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "search": {
          "_": 6930,
          "doc": "Returns the hyperlink's URL's query (includes leading \"?\" if non-empty).\n\nCan be set, to change the URL's query (ignores leading \"?\").",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "username": {
          "_": 6936,
          "doc": "Returns the hyperlink's URL's username.\n\nCan be set, to change the URL's username.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLIFrameElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 6945,
          "doc": "Sets or retrieves how the object is aligned with adjacent text.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "allow": {
          "_": 6946,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "allowFullscreen": {
          "_": 6947,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "contentDocument": {
          "_": 6949,
          "doc": "Retrieves the document object of the page or frame.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "contentWindow": {
          "_": 6951,
          "doc": "Retrieves the object of the specified.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "WindowProxy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "frameBorder": {
          "_": 6956,
          "doc": "Sets or retrieves whether to display a border for the frame.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 6958,
          "doc": "Sets or retrieves the height of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "longDesc": {
          "_": 6963,
          "doc": "Sets or retrieves a URI to a long description of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginHeight": {
          "_": 6968,
          "doc": "Sets or retrieves the top and bottom margin heights before displaying the text in a frame.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "marginWidth": {
          "_": 6973,
          "doc": "Sets or retrieves the left and right margin widths before displaying the text in a frame.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 6975,
          "doc": "Sets or retrieves the frame name.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrerPolicy": {
          "_": 6976,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReferrerPolicy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "sandbox": {
          "_": 6977,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMTokenList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scrolling": {
          "_": 6982,
          "doc": "Sets or retrieves whether the frame can be scrolled.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 6984,
          "doc": "Sets or retrieves a URL to be loaded by the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "srcdoc": {
          "_": 6986,
          "doc": "Sets or retrives the content of the page that is to contain.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 6988,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getSVGDocument": {
          "_": 6989,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 6991,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 6993,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements."
    },
    "HTMLImageElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 7007,
          "doc": "Sets or retrieves how the object is aligned with adjacent text.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "alt": {
          "_": 7009,
          "doc": "Sets or retrieves a text alternative to the graphic.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "border": {
          "_": 7014,
          "doc": "Specifies the properties of a border drawn around an object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "complete": {
          "_": 7016,
          "doc": "Retrieves whether the object is fully loaded.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "crossOrigin": {
          "_": 7017,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "currentSrc": {
          "_": 7018,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "decoding": {
          "_": 7019,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 7021,
          "doc": "Sets or retrieves the height of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "hspace": {
          "_": 7026,
          "doc": "Sets or retrieves the width of the border to draw around the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "isMap": {
          "_": 7028,
          "doc": "Sets or retrieves whether the image is a server-side image map.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "loading": {
          "_": 7030,
          "doc": "Sets or retrieves the policy for loading image elements that are outside the viewport.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "longDesc": {
          "_": 7035,
          "doc": "Sets or retrieves a Uniform Resource Identifier (URI) to a long description of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lowsrc": {
          "_": 7037,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 7042,
          "doc": "Sets or retrieves the name of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "naturalHeight": {
          "_": 7044,
          "doc": "The original height of the image resource before sizing.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "naturalWidth": {
          "_": 7046,
          "doc": "The original width of the image resource before sizing.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrerPolicy": {
          "_": 7047,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "sizes": {
          "_": 7048,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 7050,
          "doc": "The address or URL of the a media resource that is to be considered.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "srcset": {
          "_": 7051,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "useMap": {
          "_": 7053,
          "doc": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "vspace": {
          "_": 7058,
          "doc": "Sets or retrieves the vertical margin for the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 7060,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 7061,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 7062,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "decode": {
          "_": 7063,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7065,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7067,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods for manipulating <img> elements."
    },
    "HTMLInputElement": {
      "indexes": [],
      "props": {
        "accept": {
          "_": 7078,
          "doc": "Sets or retrieves a comma-separated list of content types.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "align": {
          "_": 7083,
          "doc": "Sets or retrieves how the object is aligned with adjacent text.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "alt": {
          "_": 7085,
          "doc": "Sets or retrieves a text alternative to the graphic.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "autocomplete": {
          "_": 7087,
          "doc": "Specifies whether autocomplete is applied to an editable text field.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "capture": {
          "_": 7088,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "checked": {
          "_": 7090,
          "doc": "Sets or retrieves the state of the check box or radio button.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "defaultChecked": {
          "_": 7092,
          "doc": "Sets or retrieves the state of the check box or radio button.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "defaultValue": {
          "_": 7094,
          "doc": "Sets or retrieves the initial contents of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dirName": {
          "_": 7095,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "disabled": {
          "_": 7096,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "files": {
          "_": 7098,
          "doc": "Returns a FileList object on a file type input object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "FileList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 7100,
          "doc": "Retrieves a reference to the form that the object is embedded in.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "formAction": {
          "_": 7102,
          "doc": "Overrides the action attribute (where the data on a form is sent) on the parent form element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "formEnctype": {
          "_": 7104,
          "doc": "Used to override the encoding (formEnctype attribute) specified on the form element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "formMethod": {
          "_": 7106,
          "doc": "Overrides the submit method attribute previously specified on a form element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "formNoValidate": {
          "_": 7108,
          "doc": "Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \"save draft\"-type submit option.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "formTarget": {
          "_": 7110,
          "doc": "Overrides the target attribute on a form element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 7112,
          "doc": "Sets or retrieves the height of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "indeterminate": {
          "_": 7114,
          "doc": "When set, overrides the rendering of checkbox controls so that the current value is not visible.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "labels": {
          "_": 7115,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "HTMLLabelElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "list": {
          "_": 7117,
          "doc": "Specifies the ID of a pre-defined datalist of options for an input element.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "max": {
          "_": 7119,
          "doc": "Defines the maximum acceptable value for an input element with type=\"number\".When used with the min and step attributes, lets you control the range and increment (such as only even numbers) that the user can enter into an input field.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxLength": {
          "_": 7121,
          "doc": "Sets or retrieves the maximum number of characters that the user can enter in a text control.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "min": {
          "_": 7123,
          "doc": "Defines the minimum acceptable value for an input element with type=\"number\". When used with the max and step attributes, lets you control the range and increment (such as even numbers only) that the user can enter into an input field.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "minLength": {
          "_": 7124,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "multiple": {
          "_": 7126,
          "doc": "Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 7128,
          "doc": "Sets or retrieves the name of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pattern": {
          "_": 7130,
          "doc": "Gets or sets a string containing a regular expression that the user's input must match.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "placeholder": {
          "_": 7132,
          "doc": "Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "readOnly": {
          "_": 7133,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "required": {
          "_": 7135,
          "doc": "When present, marks an element that can't be submitted without a value.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectionDirection": {
          "_": 7136,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectionEnd": {
          "_": 7138,
          "doc": "Gets or sets the end position or offset of a text selection.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectionStart": {
          "_": 7140,
          "doc": "Gets or sets the starting position or offset of a text selection.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "size": {
          "_": 7141,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 7143,
          "doc": "The address or URL of the a media resource that is to be considered.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "step": {
          "_": 7145,
          "doc": "Defines an increment or jump between values that you want to allow the user to enter. When used with the max and min attributes, lets you control the range and increment (for example, allow only even numbers) that the user can enter into an input field.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 7147,
          "doc": "Returns the content type of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "useMap": {
          "_": 7152,
          "doc": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validationMessage": {
          "_": 7154,
          "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validity": {
          "_": 7156,
          "doc": "Returns a  ValidityState object that represents the validity states of an element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ValidityState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 7158,
          "doc": "Returns the value of the data at the cursor's current position.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueAsDate": {
          "_": 7160,
          "doc": "Returns a Date object representing the form control's value, if applicable; otherwise, returns null. Can be set, to change the value. Throws an \"InvalidStateError\" DOMException if the control isn't date- or time-based.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Date",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "valueAsNumber": {
          "_": 7162,
          "doc": "Returns the input field value as a number.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitEntries": {
          "_": 7163,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "FileSystemEntry",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "webkitdirectory": {
          "_": 7164,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 7166,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "willValidate": {
          "_": 7168,
          "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkValidity": {
          "_": 7170,
          "doc": "Returns whether a form will validate when it is submitted, without having to submit it.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "reportValidity": {
          "_": 7171,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "select": {
          "_": 7173,
          "doc": "Makes the selection equal to the current object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setCustomValidity": {
          "_": 7178,
          "doc": "Sets a custom error message that is displayed when a form is submitted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setRangeText": {
          "_": 7180,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setSelectionRange": {
          "_": 7187,
          "doc": "Sets the start and end positions of a selection in a text field.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "showPicker": {
          "_": 7188,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stepDown": {
          "_": 7193,
          "doc": "Decrements a range input control's value by the value given by the Step attribute. If the optional parameter is used, it will decrement the input control's step value multiplied by the parameter's value.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stepUp": {
          "_": 7198,
          "doc": "Increments a range input control's value by the value given by the Step attribute. If the optional parameter is used, will increment the input control's value by that value.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7200,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7202,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods for manipulating the options, layout, and presentation of <input> elements."
    },
    "HTMLLIElement": {
      "indexes": [],
      "props": {
        "type": {
          "_": 7213,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 7215,
          "doc": "Sets or retrieves the value of a list item.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7217,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7219,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Exposes specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating list elements."
    },
    "HTMLLabelElement": {
      "indexes": [],
      "props": {
        "control": {
          "_": 7230,
          "doc": "Returns the form control that is associated with this element.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 7232,
          "doc": "Retrieves a reference to the form that the object is embedded in.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "htmlFor": {
          "_": 7234,
          "doc": "Sets or retrieves the object to which the given label object is assigned.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7236,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7238,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Gives access to properties specific to <label> elements. It inherits methods and properties from the base HTMLElement interface."
    },
    "HTMLLegendElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 7249,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 7251,
          "doc": "Retrieves a reference to the form that the object is embedded in.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7253,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7255,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The HTMLLegendElement is an interface allowing to access properties of the <legend> elements. It inherits properties and methods from the HTMLElement interface."
    },
    "HTMLLinkElement": {
      "indexes": [],
      "props": {
        "as": {
          "_": 7265,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "charset": {
          "_": 7270,
          "doc": "Sets or retrieves the character set used to encode the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "crossOrigin": {
          "_": 7271,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "disabled": {
          "_": 7272,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "href": {
          "_": 7274,
          "doc": "Sets or retrieves a destination URL or an anchor point.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "hreflang": {
          "_": 7276,
          "doc": "Sets or retrieves the language code of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "imageSizes": {
          "_": 7277,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "imageSrcset": {
          "_": 7278,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "integrity": {
          "_": 7279,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 7281,
          "doc": "Sets or retrieves the media type.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrerPolicy": {
          "_": 7282,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rel": {
          "_": 7284,
          "doc": "Sets or retrieves the relationship between the object and the destination of the link.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "relList": {
          "_": 7285,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMTokenList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rev": {
          "_": 7290,
          "doc": "Sets or retrieves the relationship between the object and the destination of the link.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "sizes": {
          "_": 7291,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMTokenList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 7296,
          "doc": "Sets or retrieves the window or frame at which to target content.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 7298,
          "doc": "Sets or retrieves the MIME type of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7300,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7302,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Reference information for external resources and the relationship of those resources to a document and vice-versa. This object inherits all of the properties and methods of the HTMLElement interface."
    },
    "HTMLMapElement": {
      "indexes": [],
      "props": {
        "areas": {
          "_": 7313,
          "doc": "Retrieves a collection of the area objects defined for the given map object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 7315,
          "doc": "Sets or retrieves the name of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7317,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7319,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements."
    },
    "HTMLMarqueeElement": {
      "indexes": [],
      "props": {
        "behavior": {
          "_": 7333,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "bgColor": {
          "_": 7335,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "direction": {
          "_": 7337,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 7339,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "hspace": {
          "_": 7341,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "loop": {
          "_": 7343,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollAmount": {
          "_": 7345,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollDelay": {
          "_": 7347,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "trueSpeed": {
          "_": 7349,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "vspace": {
          "_": 7351,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 7353,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 7355,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stop": {
          "_": 7357,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7359,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7361,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides methods to manipulate <marquee> elements."
    },
    "HTMLMediaElementEventMap": {
      "indexes": [],
      "props": {
        "\"encrypted\"": {
          "_": 7371,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaEncryptedEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"waitingforkey\"": {
          "_": 7372,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLMediaElement": {
      "indexes": [],
      "props": {
        "autoplay": {
          "_": 7378,
          "doc": "Gets or sets a value that indicates whether to start playing the media automatically.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffered": {
          "_": 7380,
          "doc": "Gets a collection of buffered time ranges.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TimeRanges",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "controls": {
          "_": 7382,
          "doc": "Gets or sets a flag that indicates whether the client provides a set of controls for the media (in case the developer does not include controls for the player).",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "crossOrigin": {
          "_": 7383,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "currentSrc": {
          "_": 7385,
          "doc": "Gets the address or URL of the current media resource that is selected by IHTMLMediaElement.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "currentTime": {
          "_": 7387,
          "doc": "Gets or sets the current playback position, in seconds.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "defaultMuted": {
          "_": 7388,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "defaultPlaybackRate": {
          "_": 7390,
          "doc": "Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "disableRemotePlayback": {
          "_": 7391,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "duration": {
          "_": 7393,
          "doc": "Returns the duration in seconds of the current media resource. A NaN value is returned if duration is not available, or Infinity if the media resource is streaming.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ended": {
          "_": 7395,
          "doc": "Gets information about whether the playback has ended or not.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "error": {
          "_": 7397,
          "doc": "Returns an object representing the current error state of the audio or video element.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "MediaError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "loop": {
          "_": 7399,
          "doc": "Gets or sets a flag to specify whether playback should restart after it completes.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "mediaKeys": {
          "_": 7401,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "MediaKeys",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "muted": {
          "_": 7403,
          "doc": "Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "networkState": {
          "_": 7405,
          "doc": "Gets the current network activity for the element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onencrypted": {
          "_": 7406,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "HTMLMediaElement",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MediaEncryptedEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onwaitingforkey": {
          "_": 7407,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "HTMLMediaElement",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "paused": {
          "_": 7409,
          "doc": "Gets a flag that specifies whether playback is paused.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackRate": {
          "_": 7411,
          "doc": "Gets or sets the current rate of speed for the media resource to play. This speed is expressed as a multiple of the normal speed of the media resource.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "played": {
          "_": 7413,
          "doc": "Gets TimeRanges for the current media resource that has been played.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TimeRanges",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "preload": {
          "_": 7415,
          "doc": "Gets or sets a value indicating what data should be preloaded, if any.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "preservesPitch": {
          "_": 7416,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 7417,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "remote": {
          "_": 7418,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RemotePlayback",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "seekable": {
          "_": 7420,
          "doc": "Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TimeRanges",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "seeking": {
          "_": 7422,
          "doc": "Gets a flag that indicates whether the client is currently moving to a new playback position in the media resource.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 7424,
          "doc": "The address or URL of the a media resource that is to be considered.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "srcObject": {
          "_": 7425,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "MediaProvider",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "textTracks": {
          "_": 7426,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TextTrackList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "volume": {
          "_": 7428,
          "doc": "Gets or sets the volume level for audio portions of the media element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addTextTrack": {
          "_": 7429,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "TextTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "canPlayType": {
          "_": 7431,
          "doc": "Returns a string that specifies whether the client can play a given media resource type.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "CanPlayTypeResult",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "fastSeek": {
          "_": 7432,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "load": {
          "_": 7434,
          "doc": "Resets the audio or video object and loads a new media resource.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "pause": {
          "_": 7436,
          "doc": "Pauses the current playback and sets paused to TRUE. This can be used to test whether the media is playing or paused. You can also use the pause or play events to tell whether the media is playing or not.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "play": {
          "_": 7438,
          "doc": "Loads and starts playback of a media resource.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "setMediaKeys": {
          "_": 7440,
          "doc": "Available only in secure contexts.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "HAVE_CURRENT_DATA": {
          "_": 7441,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "HAVE_ENOUGH_DATA": {
          "_": 7442,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "HAVE_FUTURE_DATA": {
          "_": 7443,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "HAVE_METADATA": {
          "_": 7444,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "HAVE_NOTHING": {
          "_": 7445,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NETWORK_EMPTY": {
          "_": 7446,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NETWORK_IDLE": {
          "_": 7447,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NETWORK_LOADING": {
          "_": 7448,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NETWORK_NO_SOURCE": {
          "_": 7449,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7451,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7453,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video."
    },
    "HTMLMenuElement": {
      "indexes": [],
      "props": {
        "compact": {
          "_": 7472,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7474,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7476,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLMetaElement": {
      "indexes": [],
      "props": {
        "content": {
          "_": 7487,
          "doc": "Gets or sets meta-information to associate with httpEquiv or name.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "httpEquiv": {
          "_": 7489,
          "doc": "Gets or sets information used to bind the value of a content attribute of a meta element to an HTTP response header.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 7490,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 7492,
          "doc": "Sets or retrieves the value specified in the content attribute of the meta object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "scheme": {
          "_": 7497,
          "doc": "Sets or retrieves a scheme to be used in interpreting the value of a property specified for the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7499,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7501,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Contains descriptive metadata about a document. It inherits all of the properties and methods described in the HTMLElement interface."
    },
    "HTMLMeterElement": {
      "indexes": [],
      "props": {
        "high": {
          "_": 7511,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "labels": {
          "_": 7512,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "HTMLLabelElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "low": {
          "_": 7513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "max": {
          "_": 7514,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "min": {
          "_": 7515,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "optimum": {
          "_": 7516,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 7517,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7519,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7521,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The HTML <meter> elements expose the HTMLMeterElement interface, which provides special properties and methods (beyond the HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of <meter> elements."
    },
    "HTMLModElement": {
      "indexes": [],
      "props": {
        "cite": {
          "_": 7532,
          "doc": "Sets or retrieves reference information about the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dateTime": {
          "_": 7534,
          "doc": "Sets or retrieves the date and time of a modification to the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7536,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7538,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond the regular methods and properties available through the HTMLElement interface they also have available to them by inheritance) for manipulating modification elements, that is <del> and <ins>."
    },
    "HTMLOListElement": {
      "indexes": [],
      "props": {
        "compact": {
          "_": 7549,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "reversed": {
          "_": 7550,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 7552,
          "doc": "The starting number.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 7553,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7555,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7557,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating ordered list elements."
    },
    "HTMLObjectElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 7568,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "archive": {
          "_": 7573,
          "doc": "Sets or retrieves a character string that can be used to implement your own archive functionality for the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "border": {
          "_": 7575,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "code": {
          "_": 7580,
          "doc": "Sets or retrieves the URL of the file containing the compiled Java class.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "codeBase": {
          "_": 7585,
          "doc": "Sets or retrieves the URL of the component.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "codeType": {
          "_": 7590,
          "doc": "Sets or retrieves the Internet media type for the code associated with the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "contentDocument": {
          "_": 7592,
          "doc": "Retrieves the document object of the page or frame.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "contentWindow": {
          "_": 7593,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "WindowProxy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "data": {
          "_": 7595,
          "doc": "Sets or retrieves the URL that references the data of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "declare": {
          "_": 7597,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 7599,
          "doc": "Retrieves a reference to the form that the object is embedded in.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 7601,
          "doc": "Sets or retrieves the height of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "hspace": {
          "_": 7603,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 7605,
          "doc": "Sets or retrieves the name of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "standby": {
          "_": 7610,
          "doc": "Sets or retrieves a message to be displayed while an object is loading.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 7612,
          "doc": "Sets or retrieves the MIME type of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "useMap": {
          "_": 7614,
          "doc": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validationMessage": {
          "_": 7616,
          "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validity": {
          "_": 7618,
          "doc": "Returns a  ValidityState object that represents the validity states of an element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ValidityState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "vspace": {
          "_": 7620,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 7622,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "willValidate": {
          "_": 7624,
          "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkValidity": {
          "_": 7626,
          "doc": "Returns whether a form will validate when it is submitted, without having to submit it.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "getSVGDocument": {
          "_": 7627,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reportValidity": {
          "_": 7628,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "setCustomValidity": {
          "_": 7633,
          "doc": "Sets a custom error message that is displayed when a form is submitted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7635,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7637,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <object> element, representing external resources."
    },
    "HTMLOptGroupElement": {
      "indexes": [],
      "props": {
        "disabled": {
          "_": 7647,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "label": {
          "_": 7649,
          "doc": "Sets or retrieves a value that you can use to implement your own label functionality for the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7651,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7653,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of <optgroup> elements."
    },
    "HTMLOptionElement": {
      "indexes": [],
      "props": {
        "defaultSelected": {
          "_": 7664,
          "doc": "Sets or retrieves the status of an option.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "disabled": {
          "_": 7665,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 7667,
          "doc": "Retrieves a reference to the form that the object is embedded in.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "index": {
          "_": 7669,
          "doc": "Sets or retrieves the ordinal position of an option in a list box.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "label": {
          "_": 7671,
          "doc": "Sets or retrieves a value that you can use to implement your own label functionality for the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "selected": {
          "_": 7673,
          "doc": "Sets or retrieves whether the option in the list box is the default item.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "text": {
          "_": 7675,
          "doc": "Sets or retrieves the text string specified by the option tag.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 7677,
          "doc": "Sets or retrieves the value which is returned to the server when the form control is submitted.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7679,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7681,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "<option> elements and inherits all classes and methods of the HTMLElement interface."
    },
    "HTMLOptionsCollection": {
      "indexes": [],
      "props": {
        "length": {
          "_": 7698,
          "doc": "Returns the number of elements in the collection.\n\nWhen set to a smaller number, truncates the number of option elements in the corresponding container.\n\nWhen set to a greater number, adds new blank option elements to that container.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectedIndex": {
          "_": 7704,
          "doc": "Returns the index of the first selected item, if any, or −1 if there is no selected item.\n\nCan be set, to change the selection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "add": {
          "_": 7714,
          "doc": "Inserts element before the node given by before.\n\nThe before argument can be a number, in which case element is inserted before the item with that number, or an element from the collection, in which case element is inserted before that element.\n\nIf before is omitted, null, or a number out of range, then element will be added at the end of the list.\n\nThis method will throw a \"HierarchyRequestError\" DOMException if element is an ancestor of the element into which it is to be inserted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "remove": {
          "_": 7716,
          "doc": "Removes the item with index index from the collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "HTMLOptionsCollection is an interface representing a collection of HTML option elements (in document order) and offers methods and properties for traversing the list as well as optionally altering its items. This type is returned solely by the \"options\" property of select."
    },
    "HTMLOrSVGElement": {
      "indexes": [],
      "props": {
        "autofocus": {
          "_": 7725,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "dataset": {
          "_": 7726,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMStringMap",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "nonce": {
          "_": 7727,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "tabIndex": {
          "_": 7728,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "blur": {
          "_": 7729,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "focus": {
          "_": 7730,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLOutputElement": {
      "indexes": [],
      "props": {
        "defaultValue": {
          "_": 7735,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 7736,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "htmlFor": {
          "_": 7737,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMTokenList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "labels": {
          "_": 7738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "HTMLLabelElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 7739,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 7741,
          "doc": "Returns the string \"output\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validationMessage": {
          "_": 7742,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validity": {
          "_": 7743,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ValidityState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 7749,
          "doc": "Returns the element's current value.\n\nCan be set, to change the value.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "willValidate": {
          "_": 7750,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkValidity": {
          "_": 7751,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "reportValidity": {
          "_": 7752,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "setCustomValidity": {
          "_": 7753,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7755,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7757,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides properties and methods (beyond those inherited from HTMLElement) for manipulating the layout and presentation of <output> elements."
    },
    "HTMLParagraphElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 7771,
          "doc": "Sets or retrieves how the object is aligned with adjacent text.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7773,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7775,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating <p> elements."
    },
    "HTMLParamElement": {
      "indexes": [],
      "props": {
        "name": {
          "_": 7792,
          "doc": "Sets or retrieves the name of an input parameter for an element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 7797,
          "doc": "Sets or retrieves the content type of the resource designated by the value attribute.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 7802,
          "doc": "Sets or retrieves the value of an input parameter for an element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueType": {
          "_": 7807,
          "doc": "Sets or retrieves the data type of the value attribute.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7809,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7811,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating <param> elements, representing a pair of a key and a value that acts as a parameter for an <object> element."
    },
    "HTMLPictureElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 7823,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7825,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A <picture> HTML element. It doesn't implement specific properties or methods."
    },
    "HTMLPreElement": {
      "indexes": [],
      "props": {
        "width": {
          "_": 7839,
          "doc": "Sets or gets a value that you can use to implement your own width functionality for the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7841,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7843,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Exposes specific properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating a block of preformatted text (<pre>)."
    },
    "HTMLProgressElement": {
      "indexes": [],
      "props": {
        "labels": {
          "_": 7853,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "HTMLLabelElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "max": {
          "_": 7855,
          "doc": "Defines the maximum, or \"done\" value for a progress element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "position": {
          "_": 7857,
          "doc": "Returns the quotient of value/max when the value attribute is set (determinate progress bar), or -1 when the value attribute is missing (indeterminate progress bar).",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 7859,
          "doc": "Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7861,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7863,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <progress> elements."
    },
    "HTMLQuoteElement": {
      "indexes": [],
      "props": {
        "cite": {
          "_": 7874,
          "doc": "Sets or retrieves reference information about the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7876,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7878,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating quoting elements, like <blockquote> and <q>, but not the <cite> element."
    },
    "HTMLScriptElement": {
      "indexes": [],
      "props": {
        "async": {
          "_": 7888,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "charset": {
          "_": 7893,
          "doc": "Sets or retrieves the character set used to encode the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "crossOrigin": {
          "_": 7894,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "defer": {
          "_": 7896,
          "doc": "Sets or retrieves the status of the script.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "event": {
          "_": 7901,
          "doc": "Sets or retrieves the event for which the script is written.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "htmlFor": {
          "_": 7906,
          "doc": "Sets or retrieves the object that is bound to the event script.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "integrity": {
          "_": 7907,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "noModule": {
          "_": 7908,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrerPolicy": {
          "_": 7909,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 7911,
          "doc": "Retrieves the URL to an external file that contains the source code or data.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "text": {
          "_": 7913,
          "doc": "Retrieves or sets the text of the object as a string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 7915,
          "doc": "Sets or retrieves the MIME type for the associated scripting engine.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7917,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7919,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "HTML <script> elements expose the HTMLScriptElement interface, which provides special properties and methods for manipulating the behavior and execution of <script> elements (beyond the inherited HTMLElement interface)."
    },
    "HTMLSelectElement": {
      "indexes": [
        {
          "_": 7995,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "props": {
        "autocomplete": {
          "_": 7930,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "disabled": {
          "_": 7931,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 7933,
          "doc": "Retrieves a reference to the form that the object is embedded in.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "labels": {
          "_": 7934,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "HTMLLabelElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 7936,
          "doc": "Sets or retrieves the number of objects in a collection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "multiple": {
          "_": 7938,
          "doc": "Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 7940,
          "doc": "Sets or retrieves the name of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "options": {
          "_": 7942,
          "doc": "Returns an HTMLOptionsCollection of the list of options.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLOptionsCollection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "required": {
          "_": 7944,
          "doc": "When present, marks an element that can't be submitted without a value.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectedIndex": {
          "_": 7946,
          "doc": "Sets or retrieves the index of the selected option in a select object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectedOptions": {
          "_": 7947,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLOptionElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "size": {
          "_": 7949,
          "doc": "Sets or retrieves the number of rows in the list box.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 7951,
          "doc": "Retrieves the type of select control based on the value of the MULTIPLE attribute.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validationMessage": {
          "_": 7953,
          "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validity": {
          "_": 7955,
          "doc": "Returns a  ValidityState object that represents the validity states of an element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ValidityState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 7957,
          "doc": "Sets or retrieves the value which is returned to the server when the form control is submitted.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "willValidate": {
          "_": 7959,
          "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "add": {
          "_": 7965,
          "doc": "Adds an element to the areas, controlRange, or options collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkValidity": {
          "_": 7967,
          "doc": "Returns whether a form will validate when it is submitted, without having to submit it.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 7973,
          "doc": "Retrieves a select object or an object from an options collection.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "HTMLOptionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "namedItem": {
          "_": 7978,
          "doc": "Retrieves a select object or an object from an options collection.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "HTMLOptionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "remove": {
          "_": 7984,
          "doc": "Removes an element from the collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "reportValidity": {
          "_": 7985,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "setCustomValidity": {
          "_": 7990,
          "doc": "Sets a custom error message that is displayed when a form is submitted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 7992,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 7994,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A <select> HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface."
    },
    "HTMLSlotElement": {
      "indexes": [],
      "props": {
        "name": {
          "_": 8004,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "assign": {
          "_": 8005,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "assignedElements": {
          "_": 8006,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Element",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "assignedNodes": {
          "_": 8007,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Node",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8009,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8011,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLSourceElement": {
      "indexes": [],
      "props": {
        "height": {
          "_": 8021,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 8023,
          "doc": "Gets or sets the intended media type of the media source.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "sizes": {
          "_": 8024,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 8026,
          "doc": "The address or URL of the a media resource that is to be considered.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "srcset": {
          "_": 8027,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 8029,
          "doc": "Gets or sets the MIME type of a media resource.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 8030,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8032,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8034,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating <source> elements."
    },
    "HTMLSpanElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 8045,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8047,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A <span> element and derives from the HTMLElement interface, but without implementing any additional properties or methods."
    },
    "HTMLStyleElement": {
      "indexes": [],
      "props": {
        "disabled": {
          "_": 8058,
          "doc": "Enables or disables the style sheet.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 8060,
          "doc": "Sets or retrieves the media type.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 8065,
          "doc": "Retrieves the CSS language in which the style sheet is written.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8067,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8069,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A <style> element. It inherits properties and methods from its parent, HTMLElement, and from LinkStyle."
    },
    "HTMLTableCaptionElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 8083,
          "doc": "Sets or retrieves the alignment of the caption or legend.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8085,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8087,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table caption elements."
    },
    "HTMLTableCellElement": {
      "indexes": [],
      "props": {
        "abbr": {
          "_": 8098,
          "doc": "Sets or retrieves abbreviated text for the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "align": {
          "_": 8103,
          "doc": "Sets or retrieves how the object is aligned with adjacent text.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "axis": {
          "_": 8108,
          "doc": "Sets or retrieves a comma-delimited list of conceptual categories associated with the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "bgColor": {
          "_": 8110,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "cellIndex": {
          "_": 8112,
          "doc": "Retrieves the position of the object in the cells collection of a row.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ch": {
          "_": 8114,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "chOff": {
          "_": 8116,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "colSpan": {
          "_": 8118,
          "doc": "Sets or retrieves the number columns in the table that the object should span.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "headers": {
          "_": 8120,
          "doc": "Sets or retrieves a list of header cells that provide information for the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 8125,
          "doc": "Sets or retrieves the height of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "noWrap": {
          "_": 8130,
          "doc": "Sets or retrieves whether the browser automatically performs wordwrap.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "rowSpan": {
          "_": 8132,
          "doc": "Sets or retrieves how many rows in a table the cell should span.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scope": {
          "_": 8134,
          "doc": "Sets or retrieves the group of cells in a table to which the object's information applies.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "vAlign": {
          "_": 8136,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 8141,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8143,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8145,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header or data cells, in an HTML document."
    },
    "HTMLTableColElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 8159,
          "doc": "Sets or retrieves the alignment of the object relative to the display or table.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ch": {
          "_": 8161,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "chOff": {
          "_": 8163,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "span": {
          "_": 8165,
          "doc": "Sets or retrieves the number of columns in the group.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "vAlign": {
          "_": 8167,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 8172,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8174,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8176,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond the HTMLElement interface it also has available to it inheritance) for manipulating single or grouped table column elements."
    },
    "HTMLTableDataCellElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 8187,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8189,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLTableElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 8198,
          "doc": "Sets or retrieves a value that indicates the table alignment.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "bgColor": {
          "_": 8200,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "border": {
          "_": 8205,
          "doc": "Sets or retrieves the width of the border to draw around the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "caption": {
          "_": 8207,
          "doc": "Retrieves the caption object of a table.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLTableCaptionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cellPadding": {
          "_": 8212,
          "doc": "Sets or retrieves the amount of space between the border of the cell and the content of the cell.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "cellSpacing": {
          "_": 8217,
          "doc": "Sets or retrieves the amount of space between cells in a table.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "frame": {
          "_": 8222,
          "doc": "Sets or retrieves the way the border frame around the table is displayed.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rows": {
          "_": 8224,
          "doc": "Sets or retrieves the number of horizontal rows contained in the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLTableRowElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "rules": {
          "_": 8229,
          "doc": "Sets or retrieves which dividing lines (inner borders) are displayed.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "summary": {
          "_": 8234,
          "doc": "Sets or retrieves a description and/or structure of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "tBodies": {
          "_": 8236,
          "doc": "Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLTableSectionElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "tFoot": {
          "_": 8238,
          "doc": "Retrieves the tFoot object of the table.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLTableSectionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "tHead": {
          "_": 8240,
          "doc": "Retrieves the tHead object of the table.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLTableSectionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 8245,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "createCaption": {
          "_": 8247,
          "doc": "Creates an empty caption element in the table.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableCaptionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createTBody": {
          "_": 8249,
          "doc": "Creates an empty tBody element in the table.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableSectionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createTFoot": {
          "_": 8251,
          "doc": "Creates an empty tFoot element in the table.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableSectionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createTHead": {
          "_": 8253,
          "doc": "Returns the tHead element object if successful, or null otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableSectionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteCaption": {
          "_": 8255,
          "doc": "Deletes the caption element and its contents from the table.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteRow": {
          "_": 8260,
          "doc": "Removes the specified row (tr) from the element and from the rows collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteTFoot": {
          "_": 8262,
          "doc": "Deletes the tFoot element and its contents from the table.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteTHead": {
          "_": 8264,
          "doc": "Deletes the tHead element and its contents from the table.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertRow": {
          "_": 8269,
          "doc": "Creates a new row (tr) in the table, and adds the row to the rows collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableRowElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8271,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8273,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document."
    },
    "HTMLTableHeaderCellElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 8284,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8286,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLTableRowElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 8295,
          "doc": "Sets or retrieves how the object is aligned with adjacent text.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "bgColor": {
          "_": 8297,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "cells": {
          "_": 8299,
          "doc": "Retrieves a collection of all cells in the table row.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLTableCellElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ch": {
          "_": 8301,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "chOff": {
          "_": 8303,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rowIndex": {
          "_": 8305,
          "doc": "Retrieves the position of the object in the rows collection for the table.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sectionRowIndex": {
          "_": 8307,
          "doc": "Retrieves the position of the object in the collection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "vAlign": {
          "_": 8309,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteCell": {
          "_": 8314,
          "doc": "Removes the specified cell from the table row, as well as from the cells collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertCell": {
          "_": 8319,
          "doc": "Creates a new cell in the table row, and adds the cell to the cells collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableCellElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8321,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8323,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table."
    },
    "HTMLTableSectionElement": {
      "indexes": [],
      "props": {
        "align": {
          "_": 8337,
          "doc": "Sets or retrieves a value that indicates the table alignment.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ch": {
          "_": 8339,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "chOff": {
          "_": 8341,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rows": {
          "_": 8343,
          "doc": "Sets or retrieves the number of horizontal rows contained in the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollectionOf",
            "generics": [
              {
                "ref": "HTMLTableRowElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "vAlign": {
          "_": 8345,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteRow": {
          "_": 8350,
          "doc": "Removes the specified row (tr) from the element and from the rows collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertRow": {
          "_": 8355,
          "doc": "Creates a new row (tr) in the table, and adds the row to the rows collection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableRowElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8357,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8359,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table."
    },
    "HTMLTemplateElement": {
      "indexes": [],
      "props": {
        "content": {
          "_": 8370,
          "doc": "Returns the template contents (a DocumentFragment).",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DocumentFragment",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8372,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8374,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Enables access to the contents of an HTML <template> element."
    },
    "HTMLTextAreaElement": {
      "indexes": [],
      "props": {
        "autocomplete": {
          "_": 8384,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "cols": {
          "_": 8386,
          "doc": "Sets or retrieves the width of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "defaultValue": {
          "_": 8388,
          "doc": "Sets or retrieves the initial contents of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dirName": {
          "_": 8389,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "disabled": {
          "_": 8390,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "form": {
          "_": 8392,
          "doc": "Retrieves a reference to the form that the object is embedded in.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "labels": {
          "_": 8393,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "HTMLLabelElement",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "maxLength": {
          "_": 8395,
          "doc": "Sets or retrieves the maximum number of characters that the user can enter in a text control.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "minLength": {
          "_": 8396,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 8398,
          "doc": "Sets or retrieves the name of the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "placeholder": {
          "_": 8400,
          "doc": "Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "readOnly": {
          "_": 8402,
          "doc": "Sets or retrieves the value indicated whether the content of the object is read-only.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "required": {
          "_": 8404,
          "doc": "When present, marks an element that can't be submitted without a value.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "rows": {
          "_": 8406,
          "doc": "Sets or retrieves the number of horizontal rows contained in the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectionDirection": {
          "_": 8407,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectionEnd": {
          "_": 8409,
          "doc": "Gets or sets the end position or offset of a text selection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectionStart": {
          "_": 8411,
          "doc": "Gets or sets the starting position or offset of a text selection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "textLength": {
          "_": 8412,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 8414,
          "doc": "Retrieves the type of control.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validationMessage": {
          "_": 8416,
          "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "validity": {
          "_": 8418,
          "doc": "Returns a  ValidityState object that represents the validity states of an element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ValidityState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 8420,
          "doc": "Retrieves or sets the text in the entry field of the textArea element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "willValidate": {
          "_": 8422,
          "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "wrap": {
          "_": 8424,
          "doc": "Sets or retrieves how to handle wordwrapping in the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkValidity": {
          "_": 8426,
          "doc": "Returns whether a form will validate when it is submitted, without having to submit it.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "reportValidity": {
          "_": 8427,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "select": {
          "_": 8429,
          "doc": "Highlights the input area of a form element.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setCustomValidity": {
          "_": 8434,
          "doc": "Sets a custom error message that is displayed when a form is submitted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setRangeText": {
          "_": 8436,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setSelectionRange": {
          "_": 8443,
          "doc": "Sets the start and end positions of a selection in a text field.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8445,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8447,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods for manipulating the layout and presentation of <textarea> elements."
    },
    "HTMLTimeElement": {
      "indexes": [],
      "props": {
        "dateTime": {
          "_": 8457,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8459,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8461,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <time> elements."
    },
    "HTMLTitleElement": {
      "indexes": [],
      "props": {
        "text": {
          "_": 8472,
          "doc": "Retrieves or sets the text of the object as a string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8474,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8476,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Contains the title for a document. This element inherits all of the properties and methods of the HTMLElement interface."
    },
    "HTMLTrackElement": {
      "indexes": [],
      "props": {
        "default": {
          "_": 8486,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "kind": {
          "_": 8487,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "label": {
          "_": 8488,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 8489,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "src": {
          "_": 8490,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "srclang": {
          "_": 8491,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "track": {
          "_": 8493,
          "doc": "Returns the TextTrack object corresponding to the text track of the track element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TextTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ERROR": {
          "_": 8494,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LOADED": {
          "_": 8495,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LOADING": {
          "_": 8496,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NONE": {
          "_": 8497,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8499,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8501,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The HTMLTrackElement"
    },
    "HTMLUListElement": {
      "indexes": [],
      "props": {
        "compact": {
          "_": 8516,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 8518,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8520,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8522,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating unordered list elements."
    },
    "HTMLUnknownElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 8533,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8535,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods."
    },
    "HTMLVideoElementEventMap": {
      "indexes": [],
      "props": {
        "\"enterpictureinpicture\"": {
          "_": 8544,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"leavepictureinpicture\"": {
          "_": 8545,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLVideoElement": {
      "indexes": [],
      "props": {
        "disablePictureInPicture": {
          "_": 8550,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 8552,
          "doc": "Gets or sets the height of the video element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onenterpictureinpicture": {
          "_": 8553,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "HTMLVideoElement",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onleavepictureinpicture": {
          "_": 8554,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "HTMLVideoElement",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "playsInline": {
          "_": 8556,
          "doc": "Gets or sets the playsinline of the video element. for example, On iPhone, video elements will now be allowed to play inline, and will not automatically enter fullscreen mode when playback begins.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "poster": {
          "_": 8558,
          "doc": "Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "videoHeight": {
          "_": 8560,
          "doc": "Gets the intrinsic height of a video in CSS pixels, or zero if the dimensions are not known.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "videoWidth": {
          "_": 8562,
          "doc": "Gets the intrinsic width of a video in CSS pixels, or zero if the dimensions are not known.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 8564,
          "doc": "Gets or sets the width of the video element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancelVideoFrameCallback": {
          "_": 8565,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getVideoPlaybackQuality": {
          "_": 8566,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "VideoPlaybackQuality",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "requestPictureInPicture": {
          "_": 8567,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "PictureInPictureWindow",
            "generics": []
          },
          "isStatic": false
        },
        "requestVideoFrameCallback": {
          "_": 8568,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8570,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8572,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides special properties and methods for manipulating video objects. It also inherits properties and methods of HTMLMediaElement and HTMLElement."
    },
    "HashChangeEvent": {
      "indexes": [],
      "props": {
        "newURL": {
          "_": 8583,
          "doc": "Returns the URL of the session history entry that is now current.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "oldURL": {
          "_": 8585,
          "doc": "Returns the URL of the session history entry that was previously current.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events that fire when the fragment identifier of the URL has changed."
    },
    "Headers": {
      "indexes": [],
      "props": {
        "append": {
          "_": 8595,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "delete": {
          "_": 8596,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "get": {
          "_": 8597,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "has": {
          "_": 8598,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 8599,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 8600,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Fetch API interface allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing. A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.  You can add to this using methods like append() (see Examples.) In all methods of this interface, header names are matched by case-insensitive byte sequence."
    },
    "History": {
      "indexes": [],
      "props": {
        "length": {
          "_": 8610,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollRestoration": {
          "_": 8611,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ScrollRestoration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 8612,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "back": {
          "_": 8613,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "forward": {
          "_": 8614,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "go": {
          "_": 8615,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "pushState": {
          "_": 8616,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceState": {
          "_": 8617,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Allows manipulation of the browser session history, that is the pages visited in the tab or frame that the current page is loaded in."
    },
    "IDBCursor": {
      "indexes": [],
      "props": {
        "direction": {
          "_": 8628,
          "doc": "Returns the direction (\"next\", \"nextunique\", \"prev\" or \"prevunique\") of the cursor.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBCursorDirection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "key": {
          "_": 8630,
          "doc": "Returns the key of the cursor. Throws a \"InvalidStateError\" DOMException if the cursor is advancing or is finished.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBValidKey",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "primaryKey": {
          "_": 8632,
          "doc": "Returns the effective key of the cursor. Throws a \"InvalidStateError\" DOMException if the cursor is advancing or is finished.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBValidKey",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "request": {
          "_": 8633,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "source": {
          "_": 8635,
          "doc": "Returns the IDBObjectStore or IDBIndex the cursor was opened from.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "advance": {
          "_": 8637,
          "doc": "Advances the cursor through the next count records in range.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "continue": {
          "_": 8639,
          "doc": "Advances the cursor to the next record in range.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "continuePrimaryKey": {
          "_": 8641,
          "doc": "Advances the cursor to the next record in range matching or after key and primaryKey. Throws an \"InvalidAccessError\" DOMException if the source is not an index.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "delete": {
          "_": 8647,
          "doc": "Delete the record pointed at by the cursor with a new value.\n\nIf successful, request's result will be undefined.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "core": "undefined",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "update": {
          "_": 8655,
          "doc": "Updated the record pointed at by the cursor with a new value.\n\nThrows a \"DataError\" DOMException if the effective object store uses in-line keys and the key would have changed.\n\nIf successful, request's result will be the record's key.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "ref": "IDBValidKey",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database."
    },
    "IDBCursorWithValue": {
      "indexes": [],
      "props": {
        "value": {
          "_": 8666,
          "doc": "Returns the cursor's current value.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database. It is the same as the IDBCursor, except that it includes the value property."
    },
    "IDBDatabaseEventMap": {
      "indexes": [],
      "props": {
        "\"abort\"": {
          "_": 8675,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"close\"": {
          "_": 8676,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 8677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"versionchange\"": {
          "_": 8678,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBVersionChangeEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBDatabase": {
      "indexes": [],
      "props": {
        "name": {
          "_": 8684,
          "doc": "Returns the name of the database.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "objectStoreNames": {
          "_": 8686,
          "doc": "Returns a list of the names of object stores in the database.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMStringList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onabort": {
          "_": 8687,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBDatabase",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onclose": {
          "_": 8688,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBDatabase",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 8689,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBDatabase",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onversionchange": {
          "_": 8690,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBDatabase",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "IDBVersionChangeEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "version": {
          "_": 8692,
          "doc": "Returns the version of the database.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 8694,
          "doc": "Closes the connection once all running transactions have finished.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "createObjectStore": {
          "_": 8700,
          "doc": "Creates a new object store with the given name and options and returns a new IDBObjectStore.\n\nThrows a \"InvalidStateError\" DOMException if not called within an upgrade transaction.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBObjectStore",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteObjectStore": {
          "_": 8706,
          "doc": "Deletes the object store with the given name.\n\nThrows a \"InvalidStateError\" DOMException if not called within an upgrade transaction.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "transaction": {
          "_": 8708,
          "doc": "Returns a new transaction with the given mode (\"readonly\" or \"readwrite\") and scope which can be a single object store name or an array of names.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBTransaction",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8710,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8712,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This IndexedDB API interface provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database."
    },
    "IDBFactory": {
      "indexes": [],
      "props": {
        "cmp": {
          "_": 8727,
          "doc": "Compares two values as keys. Returns -1 if key1 precedes key2, 1 if key2 precedes key1, and 0 if the keys are equal.\n\nThrows a \"DataError\" DOMException if either input is not a valid key.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "databases": {
          "_": 8728,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "array": {
              "ref": "IDBDatabaseInfo",
              "generics": [],
              "isFuture": false
            }
          },
          "isStatic": false
        },
        "deleteDatabase": {
          "_": 8730,
          "doc": "Attempts to delete the named database. If the database already exists and there are open connections that don't close in response to a versionchange event, the request will be blocked until all they close. If the request is successful request's result will be null.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBOpenDBRequest",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "open": {
          "_": 8732,
          "doc": "Attempts to open a connection to the named database with the current version, or 1 if it does not already exist. If the request is successful request's result will be the connection.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBOpenDBRequest",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our To-do Notifications app (view example live.)"
    },
    "IDBIndex": {
      "indexes": [],
      "props": {
        "keyPath": {
          "_": 8742,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "multiEntry": {
          "_": 8743,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 8745,
          "doc": "Returns the name of the index.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "objectStore": {
          "_": 8747,
          "doc": "Returns the IDBObjectStore the index belongs to.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBObjectStore",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "unique": {
          "_": 8748,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "count": {
          "_": 8754,
          "doc": "Retrieves the number of records matching the given key or key range in query.\n\nIf successful, request's result will be the count.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "core": "number",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "get": {
          "_": 8760,
          "doc": "Retrieves the value of the first record matching the given key or key range in query.\n\nIf successful, request's result will be the value, or undefined if there was no matching record.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "core": "any",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAll": {
          "_": 8766,
          "doc": "Retrieves the values of the records matching the given key or key range in query (up to count if given).\n\nIf successful, request's result will be an Array of the values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "array": {
                  "core": "any",
                  "isFuture": false
                },
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAllKeys": {
          "_": 8772,
          "doc": "Retrieves the keys of records matching the given key or key range in query (up to count if given).\n\nIf successful, request's result will be an Array of the keys.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "array": {
                  "ref": "IDBValidKey",
                  "generics": [],
                  "isFuture": false
                },
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getKey": {
          "_": 8778,
          "doc": "Retrieves the key of the first record matching the given key or key range in query.\n\nIf successful, request's result will be the key, or undefined if there was no matching record.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "ref": "IDBValidKey",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "openCursor": {
          "_": 8784,
          "doc": "Opens a cursor over the records matching query, ordered by direction. If query is null, all records in index are matched.\n\nIf successful, request's result will be an IDBCursorWithValue, or null if there were no matching records.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "ref": "IDBCursorWithValue",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "openKeyCursor": {
          "_": 8790,
          "doc": "Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in index are matched.\n\nIf successful, request's result will be an IDBCursor, or null if there were no matching records.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "ref": "IDBCursor",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "IDBIndex interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data."
    },
    "IDBKeyRange": {
      "indexes": [],
      "props": {
        "lower": {
          "_": 8801,
          "doc": "Returns lower bound, or undefined if none.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "lowerOpen": {
          "_": 8803,
          "doc": "Returns true if the lower open flag is set, and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "upper": {
          "_": 8805,
          "doc": "Returns upper bound, or undefined if none.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "upperOpen": {
          "_": 8807,
          "doc": "Returns true if the upper open flag is set, and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "includes": {
          "_": 8809,
          "doc": "Returns true if key is included in the range, and false otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A key range can be a single value or a range with upper and lower bounds or endpoints. If the key range has both upper and lower bounds, then it is bounded; if it has no bounds, it is unbounded. A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included). To retrieve all keys within a certain range, you can use the following code constructs:"
    },
    "IDBObjectStore": {
      "indexes": [],
      "props": {
        "autoIncrement": {
          "_": 8828,
          "doc": "Returns true if the store has a key generator, and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexNames": {
          "_": 8830,
          "doc": "Returns a list of the names of indexes in the store.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMStringList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "keyPath": {
          "_": 8832,
          "doc": "Returns the key path of the store, or null if none.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 8834,
          "doc": "Returns the name of the store.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "transaction": {
          "_": 8836,
          "doc": "Returns the associated transaction.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBTransaction",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "add": {
          "_": 8846,
          "doc": "Adds or updates a record in store with the given value and key.\n\nIf the store uses in-line keys and key is specified a \"DataError\" DOMException will be thrown.\n\nIf put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request's error set to a \"ConstraintError\" DOMException.\n\nIf successful, request's result will be the record's key.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "ref": "IDBValidKey",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 8852,
          "doc": "Deletes all records in store.\n\nIf successful, request's result will be undefined.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "core": "undefined",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "count": {
          "_": 8858,
          "doc": "Retrieves the number of records matching the given key or key range in query.\n\nIf successful, request's result will be the count.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "core": "number",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "createIndex": {
          "_": 8864,
          "doc": "Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a \"ConstraintError\" DOMException.\n\nThrows an \"InvalidStateError\" DOMException if not called within an upgrade transaction.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBIndex",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "delete": {
          "_": 8870,
          "doc": "Deletes records in store with the given key or in the given key range in query.\n\nIf successful, request's result will be undefined.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "core": "undefined",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteIndex": {
          "_": 8876,
          "doc": "Deletes the index in store with the given name.\n\nThrows an \"InvalidStateError\" DOMException if not called within an upgrade transaction.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "get": {
          "_": 8882,
          "doc": "Retrieves the value of the first record matching the given key or key range in query.\n\nIf successful, request's result will be the value, or undefined if there was no matching record.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "core": "any",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAll": {
          "_": 8888,
          "doc": "Retrieves the values of the records matching the given key or key range in query (up to count if given).\n\nIf successful, request's result will be an Array of the values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "array": {
                  "core": "any",
                  "isFuture": false
                },
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAllKeys": {
          "_": 8894,
          "doc": "Retrieves the keys of records matching the given key or key range in query (up to count if given).\n\nIf successful, request's result will be an Array of the keys.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "array": {
                  "ref": "IDBValidKey",
                  "generics": [],
                  "isFuture": false
                },
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getKey": {
          "_": 8900,
          "doc": "Retrieves the key of the first record matching the given key or key range in query.\n\nIf successful, request's result will be the key, or undefined if there was no matching record.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "ref": "IDBValidKey",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "index": {
          "_": 8901,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBIndex",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "openCursor": {
          "_": 8907,
          "doc": "Opens a cursor over the records matching query, ordered by direction. If query is null, all records in store are matched.\n\nIf successful, request's result will be an IDBCursorWithValue pointing at the first matching record, or null if there were no matching records.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "ref": "IDBCursorWithValue",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "openKeyCursor": {
          "_": 8913,
          "doc": "Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in store are matched.\n\nIf successful, request's result will be an IDBCursor pointing at the first matching record, or null if there were no matching records.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "ref": "IDBCursor",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "put": {
          "_": 8923,
          "doc": "Adds or updates a record in store with the given value and key.\n\nIf the store uses in-line keys and key is specified a \"DataError\" DOMException will be thrown.\n\nIf put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request's error set to a \"ConstraintError\" DOMException.\n\nIf successful, request's result will be the record's key.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBRequest",
            "generics": [
              {
                "ref": "IDBValidKey",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This example shows a variety of different uses of object stores, from updating the data structure with IDBObjectStore.createIndex inside an onupgradeneeded function, to adding a new item to our object store with IDBObjectStore.add. For a full working example, see our To-do Notifications app (view example live.)"
    },
    "IDBOpenDBRequestEventMap": {
      "indexes": [],
      "props": {
        "\"blocked\"": {
          "_": 8932,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBVersionChangeEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"upgradeneeded\"": {
          "_": 8933,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBVersionChangeEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBOpenDBRequest": {
      "indexes": [],
      "props": {
        "onblocked": {
          "_": 8938,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBOpenDBRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "IDBVersionChangeEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onupgradeneeded": {
          "_": 8939,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBOpenDBRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "IDBVersionChangeEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8941,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8943,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Also inherits methods from its parents IDBRequest and EventTarget."
    },
    "IDBRequestEventMap": {
      "indexes": [],
      "props": {
        "\"error\"": {
          "_": 8952,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"success\"": {
          "_": 8953,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBRequest": {
      "indexes": [],
      "props": {
        "error": {
          "_": 8959,
          "doc": "When a request is completed, returns the error (a DOMException), or null if the request succeeded. Throws a \"InvalidStateError\" DOMException if the request is still pending.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DOMException",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 8960,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBRequest",
                  "generics": [
                    {
                      "ref": "T",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onsuccess": {
          "_": 8961,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBRequest",
                  "generics": [
                    {
                      "ref": "T",
                      "generics": [],
                      "isFuture": false
                    }
                  ],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 8963,
          "doc": "Returns \"pending\" until a request is complete, then returns \"done\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBRequestReadyState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "result": {
          "_": 8965,
          "doc": "When a request is completed, returns the result, or undefined if the request failed. Throws a \"InvalidStateError\" DOMException if the request is still pending.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "source": {
          "_": 8967,
          "doc": "Returns the IDBObjectStore, IDBIndex, or IDBCursor the request was made against, or null if is was an open request.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "transaction": {
          "_": 8969,
          "doc": "Returns the IDBTransaction the request was made within. If this as an open request, then it returns an upgrade transaction while it is running, or null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "IDBTransaction",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 8971,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 8973,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": "The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the IDBRequest instance."
    },
    "IDBTransactionEventMap": {
      "indexes": [],
      "props": {
        "\"abort\"": {
          "_": 8982,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"complete\"": {
          "_": 8983,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 8984,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBTransaction": {
      "indexes": [],
      "props": {
        "db": {
          "_": 8989,
          "doc": "Returns the transaction's connection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBDatabase",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "durability": {
          "_": 8990,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBTransactionDurability",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "error": {
          "_": 8992,
          "doc": "If the transaction was aborted, returns the error (a DOMException) providing the reason.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DOMException",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 8994,
          "doc": "Returns the mode the transaction was created with (\"readonly\" or \"readwrite\"), or \"versionchange\" for an upgrade transaction.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBTransactionMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "objectStoreNames": {
          "_": 8996,
          "doc": "Returns a list of the names of object stores in the transaction's scope. For an upgrade transaction this is all object stores in the database.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMStringList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onabort": {
          "_": 8997,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBTransaction",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncomplete": {
          "_": 8998,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBTransaction",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 8999,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "IDBTransaction",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "abort": {
          "_": 9001,
          "doc": "Aborts the transaction. All pending requests will fail with a \"AbortError\" DOMException and all changes made to the database will be reverted.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "commit": {
          "_": 9002,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "objectStore": {
          "_": 9004,
          "doc": "Returns an IDBObjectStore in the transaction's scope.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "IDBObjectStore",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 9006,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9008,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IDBVersionChangeEvent": {
      "indexes": [],
      "props": {
        "newVersion": {
          "_": 9018,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "oldVersion": {
          "_": 9019,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This IndexedDB API interface indicates that the version of the database has changed, as the result of an IDBOpenDBRequest.onupgradeneeded event handler function."
    },
    "IIRFilterNode": {
      "indexes": [],
      "props": {
        "getFrequencyResponse": {
          "_": 9029,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The IIRFilterNode interface of the Web Audio API is a AudioNode processor which implements a general infinite impulse response (IIR)  filter; this type of filter can be used to implement tone control devices and graphic equalizers as well. It lets the parameters of the filter response be specified, so that it can be tuned as needed."
    },
    "IdleDeadline": {
      "indexes": [],
      "props": {
        "didTimeout": {
          "_": 9038,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "timeRemaining": {
          "_": 9039,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ImageBitmap": {
      "indexes": [],
      "props": {
        "height": {
          "_": 9049,
          "doc": "Returns the intrinsic height of the image, in CSS pixels.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 9051,
          "doc": "Returns the intrinsic width of the image, in CSS pixels.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 9053,
          "doc": "Releases imageBitmap's underlying bitmap data.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ImageBitmapRenderingContext": {
      "indexes": [],
      "props": {
        "canvas": {
          "_": 9063,
          "doc": "Returns the canvas element that the context is bound to.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "transferFromImageBitmap": {
          "_": 9065,
          "doc": "Transfers the underlying bitmap data from imageBitmap to context, and the bitmap becomes the contents of the canvas element to which context is bound.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ImageData": {
      "indexes": [],
      "props": {
        "colorSpace": {
          "_": 9075,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PredefinedColorSpace",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "data": {
          "_": 9077,
          "doc": "Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 9079,
          "doc": "Returns the actual dimensions of the data in the ImageData object, in pixels.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 9081,
          "doc": "Returns the actual dimensions of the data in the ImageData object, in pixels.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The underlying pixel data of an area of a <canvas> element. It is created using the ImageData() constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: createImageData() and getImageData(). It can also be used to set a part of the canvas by using putImageData()."
    },
    "InnerHTML": {
      "indexes": [],
      "props": {
        "innerHTML": {
          "_": 9091,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "InputDeviceInfo": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "InputEvent": {
      "indexes": [],
      "props": {
        "data": {
          "_": 9104,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "dataTransfer": {
          "_": 9105,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DataTransfer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "inputType": {
          "_": 9106,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "isComposing": {
          "_": 9107,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "getTargetRanges": {
          "_": 9108,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "StaticRange",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IntersectionObserver": {
      "indexes": [],
      "props": {
        "root": {
          "_": 9118,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "rootMargin": {
          "_": 9119,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "thresholds": {
          "_": 9120,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "core": "number",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "disconnect": {
          "_": 9121,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "observe": {
          "_": 9122,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "takeRecords": {
          "_": 9123,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "IntersectionObserverEntry",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "unobserve": {
          "_": 9124,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport."
    },
    "IntersectionObserverEntry": {
      "indexes": [],
      "props": {
        "boundingClientRect": {
          "_": 9134,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMRectReadOnly",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "intersectionRatio": {
          "_": 9135,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "intersectionRect": {
          "_": 9136,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMRectReadOnly",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isIntersecting": {
          "_": 9137,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "rootBounds": {
          "_": 9138,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "DOMRectReadOnly",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 9139,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "time": {
          "_": 9140,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Intersection Observer API interface describes the intersection between the target element and its root container at a specific moment of transition."
    },
    "KHR_parallel_shader_compile": {
      "indexes": [],
      "props": {
        "COMPLETION_STATUS_KHR": {
          "_": 9149,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "KeyboardEvent": {
      "indexes": [],
      "props": {
        "altKey": {
          "_": 9154,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "charCode": {
          "_": 9156,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "code": {
          "_": 9157,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ctrlKey": {
          "_": 9158,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isComposing": {
          "_": 9159,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "key": {
          "_": 9160,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "keyCode": {
          "_": 9162,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "location": {
          "_": 9163,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "metaKey": {
          "_": 9164,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "repeat": {
          "_": 9165,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "shiftKey": {
          "_": 9166,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "getModifierState": {
          "_": 9167,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "initKeyboardEvent": {
          "_": 9169,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOM_KEY_LOCATION_LEFT": {
          "_": 9170,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOM_KEY_LOCATION_NUMPAD": {
          "_": 9171,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOM_KEY_LOCATION_RIGHT": {
          "_": 9172,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOM_KEY_LOCATION_STANDARD": {
          "_": 9173,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "KeyboardEvent objects describe a user interaction with the keyboard; each event describes a single interaction between the user and a key (or combination of a key with modifier keys) on the keyboard."
    },
    "KeyframeEffect": {
      "indexes": [],
      "props": {
        "composite": {
          "_": 9186,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CompositeOperation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "iterationComposite": {
          "_": 9187,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IterationCompositeOperation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pseudoElement": {
          "_": 9188,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 9189,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getKeyframes": {
          "_": 9190,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "ComputedKeyframe",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "setKeyframes": {
          "_": 9191,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "LinkStyle": {
      "indexes": [],
      "props": {
        "sheet": {
          "_": 9201,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSStyleSheet",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Location": {
      "indexes": [],
      "props": {
        "ancestorOrigins": {
          "_": 9207,
          "doc": "Returns a DOMStringList object listing the origins of the ancestor browsing contexts, from the parent browsing context to the top-level browsing context.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMStringList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "hash": {
          "_": 9213,
          "doc": "Returns the Location object's URL's fragment (includes leading \"#\" if non-empty).\n\nCan be set, to navigate to the same URL with a changed fragment (ignores leading \"#\").",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "host": {
          "_": 9219,
          "doc": "Returns the Location object's URL's host and port (if different from the default port for the scheme).\n\nCan be set, to navigate to the same URL with a changed host and port.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "hostname": {
          "_": 9225,
          "doc": "Returns the Location object's URL's host.\n\nCan be set, to navigate to the same URL with a changed host.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "href": {
          "_": 9231,
          "doc": "Returns the Location object's URL.\n\nCan be set, to navigate to the given URL.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 9232,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "origin": {
          "_": 9234,
          "doc": "Returns the Location object's URL's origin.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pathname": {
          "_": 9240,
          "doc": "Returns the Location object's URL's path.\n\nCan be set, to navigate to the same URL with a changed path.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "port": {
          "_": 9246,
          "doc": "Returns the Location object's URL's port.\n\nCan be set, to navigate to the same URL with a changed port.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "protocol": {
          "_": 9252,
          "doc": "Returns the Location object's URL's scheme.\n\nCan be set, to navigate to the same URL with a changed scheme.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "search": {
          "_": 9258,
          "doc": "Returns the Location object's URL's query (includes leading \"?\" if non-empty).\n\nCan be set, to navigate to the same URL with a changed query (ignores leading \"?\").",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "assign": {
          "_": 9260,
          "doc": "Navigates to the given URL.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "reload": {
          "_": 9262,
          "doc": "Reloads the current page.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "replace": {
          "_": 9264,
          "doc": "Removes the current page from the session history and navigates to the given URL.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the Document and Window interface have such a linked Location, accessible via Document.location and Window.location respectively."
    },
    "Lock": {
      "indexes": [],
      "props": {
        "mode": {
          "_": 9274,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "LockMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 9275,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "LockManager": {
      "indexes": [],
      "props": {
        "query": {
          "_": 9285,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "LockManagerSnapshot",
            "generics": []
          },
          "isStatic": false
        },
        "request": {
          "_": 9287,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "any"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "MathMLElementEventMap": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MathMLElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 9300,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9302,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaCapabilities": {
      "indexes": [],
      "props": {
        "decodingInfo": {
          "_": 9311,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "MediaCapabilitiesDecodingInfo",
            "generics": []
          },
          "isStatic": false
        },
        "encodingInfo": {
          "_": 9312,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "MediaCapabilitiesEncodingInfo",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaDeviceInfo": {
      "indexes": [],
      "props": {
        "deviceId": {
          "_": 9325,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "groupId": {
          "_": 9326,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "kind": {
          "_": 9327,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaDeviceKind",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "label": {
          "_": 9328,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 9329,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The MediaDevicesInfo interface contains information that describes a single media input or output device.\nAvailable only in secure contexts."
    },
    "MediaDevicesEventMap": {
      "indexes": [],
      "props": {
        "\"devicechange\"": {
          "_": 9338,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaDevices": {
      "indexes": [],
      "props": {
        "ondevicechange": {
          "_": 9346,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaDevices",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "enumerateDevices": {
          "_": 9347,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "array": {
              "ref": "MediaDeviceInfo",
              "generics": [],
              "isFuture": false
            }
          },
          "isStatic": false
        },
        "getDisplayMedia": {
          "_": 9348,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "MediaStream",
            "generics": []
          },
          "isStatic": false
        },
        "getSupportedConstraints": {
          "_": 9349,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaTrackSupportedConstraints",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getUserMedia": {
          "_": 9350,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "MediaStream",
            "generics": []
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 9352,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9354,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data.\nAvailable only in secure contexts."
    },
    "MediaElementAudioSourceNode": {
      "indexes": [],
      "props": {
        "mediaElement": {
          "_": 9364,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLMediaElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A MediaElementSourceNode has no inputs and exactly one output, and is created using the AudioContext.createMediaElementSource method. The amount of channels in the output equals the number of channels of the audio referenced by the HTMLMediaElement used in the creation of the node, or is 1 if the HTMLMediaElement has no audio."
    },
    "MediaEncryptedEvent": {
      "indexes": [],
      "props": {
        "initData": {
          "_": 9373,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initDataType": {
          "_": 9374,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaError": {
      "indexes": [],
      "props": {
        "code": {
          "_": 9384,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "message": {
          "_": 9385,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "MEDIA_ERR_ABORTED": {
          "_": 9386,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "MEDIA_ERR_DECODE": {
          "_": 9387,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "MEDIA_ERR_NETWORK": {
          "_": 9388,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "MEDIA_ERR_SRC_NOT_SUPPORTED": {
          "_": 9389,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An error which occurred while handling media in an HTML media element based on HTMLMediaElement, such as <audio> or <video>."
    },
    "MediaKeyMessageEvent": {
      "indexes": [],
      "props": {
        "message": {
          "_": 9406,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "messageType": {
          "_": 9407,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaKeyMessageType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This EncryptedMediaExtensions API interface contains the content and related data when the content decryption module generates a message for the session.\nAvailable only in secure contexts."
    },
    "MediaKeySessionEventMap": {
      "indexes": [],
      "props": {
        "\"keystatuseschange\"": {
          "_": 9416,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"message\"": {
          "_": 9417,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaKeyMessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaKeySession": {
      "indexes": [],
      "props": {
        "closed": {
          "_": 9425,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "MediaKeySessionClosedReason",
            "generics": []
          },
          "isStatic": false
        },
        "expiration": {
          "_": 9426,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "keyStatuses": {
          "_": 9427,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaKeyStatusMap",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onkeystatuseschange": {
          "_": 9428,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaKeySession",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessage": {
          "_": 9429,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaKeySession",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MediaKeyMessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "sessionId": {
          "_": 9430,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 9431,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "generateRequest": {
          "_": 9432,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "load": {
          "_": 9433,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        },
        "remove": {
          "_": 9434,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "update": {
          "_": 9435,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 9437,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9439,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This EncryptedMediaExtensions API interface represents a context for message exchange with a content decryption module (CDM).\nAvailable only in secure contexts."
    },
    "MediaKeyStatusMap": {
      "indexes": [],
      "props": {
        "size": {
          "_": 9452,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "get": {
          "_": 9453,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "MediaKeyStatus",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "has": {
          "_": 9454,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 9455,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This EncryptedMediaExtensions API interface is a read-only map of media key statuses by key IDs.\nAvailable only in secure contexts."
    },
    "MediaKeySystemAccess": {
      "indexes": [],
      "props": {
        "keySystem": {
          "_": 9468,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "createMediaKeys": {
          "_": 9469,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "MediaKeys",
            "generics": []
          },
          "isStatic": false
        },
        "getConfiguration": {
          "_": 9470,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaKeySystemConfiguration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This EncryptedMediaExtensions API interface provides access to a Key System for decryption and/or a content protection provider. You can request an instance of this object using the Navigator.requestMediaKeySystemAccess method.\nAvailable only in secure contexts."
    },
    "MediaKeys": {
      "indexes": [],
      "props": {
        "createSession": {
          "_": 9483,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaKeySession",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setServerCertificate": {
          "_": 9484,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This EncryptedMediaExtensions API interface the represents a set of keys that an associated HTMLMediaElement can use for decryption of media data during playback.\nAvailable only in secure contexts."
    },
    "MediaList": {
      "indexes": [
        {
          "_": 9499,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "string",
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 9493,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "mediaText": {
          "_": 9494,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 9495,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendMedium": {
          "_": 9496,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteMedium": {
          "_": 9497,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 9498,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaMetadata": {
      "indexes": [],
      "props": {
        "album": {
          "_": 9508,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "artist": {
          "_": 9509,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "artwork": {
          "_": 9510,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "MediaImage",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "title": {
          "_": 9511,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaQueryListEventMap": {
      "indexes": [],
      "props": {
        "\"change\"": {
          "_": 9520,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaQueryListEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaQueryList": {
      "indexes": [],
      "props": {
        "matches": {
          "_": 9525,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 9526,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onchange": {
          "_": 9527,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaQueryList",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MediaQueryListEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addListener": {
          "_": 9529,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeListener": {
          "_": 9531,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 9533,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9535,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Stores information on a media query applied to a document, and handles sending notifications to listeners when the media query state change (i.e. when the media query test starts or stops evaluating to true)."
    },
    "MediaQueryListEvent": {
      "indexes": [],
      "props": {
        "matches": {
          "_": 9544,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 9545,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaRecorderEventMap": {
      "indexes": [],
      "props": {
        "\"dataavailable\"": {
          "_": 9554,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BlobEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 9555,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pause\"": {
          "_": 9556,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"resume\"": {
          "_": 9557,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"start\"": {
          "_": 9558,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"stop\"": {
          "_": 9559,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaRecorder": {
      "indexes": [],
      "props": {
        "audioBitsPerSecond": {
          "_": 9563,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "mimeType": {
          "_": 9564,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ondataavailable": {
          "_": 9565,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaRecorder",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "BlobEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 9566,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaRecorder",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpause": {
          "_": 9567,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaRecorder",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onresume": {
          "_": 9568,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaRecorder",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onstart": {
          "_": 9569,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaRecorder",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onstop": {
          "_": 9570,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaRecorder",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 9571,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RecordingState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "stream": {
          "_": 9572,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStream",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "videoBitsPerSecond": {
          "_": 9573,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pause": {
          "_": 9574,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "requestData": {
          "_": 9575,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "resume": {
          "_": 9576,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 9577,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stop": {
          "_": 9578,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 9580,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9582,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaSession": {
      "indexes": [],
      "props": {
        "metadata": {
          "_": 9592,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "MediaMetadata",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "playbackState": {
          "_": 9593,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaSessionPlaybackState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setActionHandler": {
          "_": 9594,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setPositionState": {
          "_": 9595,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaSourceEventMap": {
      "indexes": [],
      "props": {
        "\"sourceclose\"": {
          "_": 9604,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"sourceended\"": {
          "_": 9605,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"sourceopen\"": {
          "_": 9606,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaSource": {
      "indexes": [],
      "props": {
        "activeSourceBuffers": {
          "_": 9611,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SourceBufferList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "duration": {
          "_": 9612,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onsourceclose": {
          "_": 9613,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaSource",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onsourceended": {
          "_": 9614,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaSource",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onsourceopen": {
          "_": 9615,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaSource",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 9616,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadyState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "sourceBuffers": {
          "_": 9617,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SourceBufferList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addSourceBuffer": {
          "_": 9618,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SourceBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "clearLiveSeekableRange": {
          "_": 9619,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "endOfStream": {
          "_": 9620,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeSourceBuffer": {
          "_": 9621,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setLiveSeekableRange": {
          "_": 9622,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 9624,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9626,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Media Source Extensions API interface represents a source of media data for an HTMLMediaElement object. A MediaSource object can be attached to a HTMLMediaElement to be played in the user agent."
    },
    "MediaStreamEventMap": {
      "indexes": [],
      "props": {
        "\"addtrack\"": {
          "_": 9636,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamTrackEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"removetrack\"": {
          "_": 9637,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamTrackEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaStream": {
      "indexes": [],
      "props": {
        "active": {
          "_": 9642,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "id": {
          "_": 9643,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onaddtrack": {
          "_": 9644,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaStream",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MediaStreamTrackEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onremovetrack": {
          "_": 9645,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaStream",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MediaStreamTrackEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addTrack": {
          "_": 9646,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clone": {
          "_": 9647,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaStream",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAudioTracks": {
          "_": 9648,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MediaStreamTrack",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getTrackById": {
          "_": 9649,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "MediaStreamTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getTracks": {
          "_": 9650,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MediaStreamTrack",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getVideoTracks": {
          "_": 9651,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MediaStreamTrack",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "removeTrack": {
          "_": 9652,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 9654,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9656,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A stream of media content. A stream consists of several tracks such as video or audio tracks. Each track is specified as an instance of MediaStreamTrack."
    },
    "MediaStreamAudioDestinationNode": {
      "indexes": [],
      "props": {
        "stream": {
          "_": 9667,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStream",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaStreamAudioSourceNode": {
      "indexes": [],
      "props": {
        "mediaStream": {
          "_": 9677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStream",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A type of AudioNode which operates as an audio source whose media is received from a MediaStream obtained using the WebRTC or Media Capture and Streams APIs."
    },
    "MediaStreamTrackEventMap": {
      "indexes": [],
      "props": {
        "\"ended\"": {
          "_": 9686,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mute\"": {
          "_": 9687,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"unmute\"": {
          "_": 9688,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaStreamTrack": {
      "indexes": [],
      "props": {
        "contentHint": {
          "_": 9693,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "enabled": {
          "_": 9694,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "id": {
          "_": 9695,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "kind": {
          "_": 9696,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "label": {
          "_": 9697,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "muted": {
          "_": 9698,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "onended": {
          "_": 9699,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaStreamTrack",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmute": {
          "_": 9700,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaStreamTrack",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onunmute": {
          "_": 9701,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MediaStreamTrack",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 9702,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamTrackState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "applyConstraints": {
          "_": 9703,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "clone": {
          "_": 9704,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getCapabilities": {
          "_": 9705,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaTrackCapabilities",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getConstraints": {
          "_": 9706,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaTrackConstraints",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getSettings": {
          "_": 9707,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaTrackSettings",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "stop": {
          "_": 9708,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 9710,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9712,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well."
    },
    "MediaStreamTrackEvent": {
      "indexes": [],
      "props": {
        "track": {
          "_": 9722,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events which indicate that a MediaStream has had tracks added to or removed from the stream through calls to Media Stream API methods. These events are sent to the stream when these changes occur."
    },
    "MessageChannel": {
      "indexes": [],
      "props": {
        "port1": {
          "_": 9733,
          "doc": "Returns the first MessagePort object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessagePort",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "port2": {
          "_": 9735,
          "doc": "Returns the second MessagePort object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessagePort",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Channel Messaging API interface allows us to create a new message channel and send data through it via its two MessagePort properties.\n`MessageChannel` class is a global reference for `require('worker_threads').MessageChannel`\nhttps://nodejs.org/api/globals.html#messagechannel"
    },
    "MessageEvent": {
      "indexes": [],
      "props": {
        "data": {
          "_": 9746,
          "doc": "Returns the data of the message.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lastEventId": {
          "_": 9748,
          "doc": "Returns the last event ID string, for server-sent events.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "origin": {
          "_": 9750,
          "doc": "Returns the origin of the message, for server-sent events and cross-document messaging.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ports": {
          "_": 9752,
          "doc": "Returns the MessagePort array sent with the message, for cross-document messaging and channel messaging.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "MessagePort",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "source": {
          "_": 9754,
          "doc": "Returns the WindowProxy of the source window, for cross-document messaging, and the MessagePort being attached, in the connect event fired at SharedWorkerGlobalScope objects.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "MessageEventSource",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initMessageEvent": {
          "_": 9756,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": "A message received by a target object."
    },
    "MessagePortEventMap": {
      "indexes": [],
      "props": {
        "\"message\"": {
          "_": 9765,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"messageerror\"": {
          "_": 9766,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MessagePort": {
      "indexes": [],
      "props": {
        "onmessage": {
          "_": 9771,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MessagePort",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessageerror": {
          "_": 9772,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "MessagePort",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 9774,
          "doc": "Disconnects the port, so that it is no longer active.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "postMessage": {
          "_": 9781,
          "doc": "Posts a message through the channel. Objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n\nThrows a \"DataCloneError\" DOMException if transfer contains duplicate objects or port, or if message could not be cloned.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 9783,
          "doc": "Begins dispatching messages received on the port.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 9785,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 9787,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Channel Messaging API interface represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other.\n`MessagePort` class is a global reference for `require('worker_threads').MessagePort`\nhttps://nodejs.org/api/globals.html#messageport"
    },
    "MimeType": {
      "indexes": [],
      "props": {
        "description": {
          "_": 9804,
          "doc": "Returns the MIME type's description.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "enabledPlugin": {
          "_": 9809,
          "doc": "Returns the Plugin object that implements this MIME type.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Plugin",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "suffixes": {
          "_": 9814,
          "doc": "Returns the MIME type's typical file extensions, in a comma-separated list.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 9819,
          "doc": "Returns the MIME type.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides contains information about a MIME type associated with a particular plugin. NavigatorPlugins.mimeTypes returns an array of this object."
    },
    "MimeTypeArray": {
      "indexes": [
        {
          "_": 9839,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "MimeType",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 9834,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 9836,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "MimeType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "namedItem": {
          "_": 9838,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "MimeType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Returns an array of MimeType instances, each of which contains information about a supported browser plugins. This object is returned by NavigatorPlugins.mimeTypes."
    },
    "MouseEvent": {
      "indexes": [],
      "props": {
        "altKey": {
          "_": 9850,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "button": {
          "_": 9851,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buttons": {
          "_": 9852,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientX": {
          "_": 9853,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientY": {
          "_": 9854,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ctrlKey": {
          "_": 9855,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "metaKey": {
          "_": 9856,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "movementX": {
          "_": 9857,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "movementY": {
          "_": 9858,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetX": {
          "_": 9859,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetY": {
          "_": 9860,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageX": {
          "_": 9861,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageY": {
          "_": 9862,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "relatedTarget": {
          "_": 9863,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "screenX": {
          "_": 9864,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "screenY": {
          "_": 9865,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "shiftKey": {
          "_": 9866,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 9867,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 9868,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getModifierState": {
          "_": 9869,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "initMouseEvent": {
          "_": 9871,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events that occur due to the user interacting with a pointing device (such as a mouse). Common events using this interface include click, dblclick, mouseup, mousedown."
    },
    "MutationEvent": {
      "indexes": [],
      "props": {
        "attrChange": {
          "_": 9885,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "attrName": {
          "_": 9887,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "newValue": {
          "_": 9889,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "prevValue": {
          "_": 9891,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "relatedNode": {
          "_": 9893,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initMutationEvent": {
          "_": 9895,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "ADDITION": {
          "_": 9896,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "MODIFICATION": {
          "_": 9897,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "REMOVAL": {
          "_": 9898,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides event properties that are specific to modifications to the Document Object Model (DOM) hierarchy and nodes."
    },
    "MutationObserver": {
      "indexes": [],
      "props": {
        "disconnect": {
          "_": 9913,
          "doc": "Stops observer from observing any mutations. Until the observe() method is used again, observer's callback will not be invoked.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "observe": {
          "_": 9919,
          "doc": "Instructs the user agent to observe a given target (a node) and report any mutations based on the criteria given by options (an object).\n\nThe options argument allows for setting mutation observation options via object members.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "takeRecords": {
          "_": 9921,
          "doc": "Empties the record queue and returns what was in there.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "MutationRecord",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature which was part of the DOM3 Events specification."
    },
    "MutationRecord": {
      "indexes": [],
      "props": {
        "addedNodes": {
          "_": 9932,
          "doc": "Return the nodes added and removed respectively.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "attributeName": {
          "_": 9934,
          "doc": "Returns the local name of the changed attribute, and null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "attributeNamespace": {
          "_": 9936,
          "doc": "Returns the namespace of the changed attribute, and null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "nextSibling": {
          "_": 9938,
          "doc": "Return the previous and next sibling respectively of the added or removed nodes, and null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "oldValue": {
          "_": 9940,
          "doc": "The return value depends on type. For \"attributes\", it is the value of the changed attribute before the change. For \"characterData\", it is the data of the changed node before the change. For \"childList\", it is null.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "previousSibling": {
          "_": 9942,
          "doc": "Return the previous and next sibling respectively of the added or removed nodes, and null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "removedNodes": {
          "_": 9944,
          "doc": "Return the nodes added and removed respectively.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 9946,
          "doc": "Returns the node the mutation affected, depending on the type. For \"attributes\", it is the element whose attribute changed. For \"characterData\", it is the CharacterData node. For \"childList\", it is the node whose children changed.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 9948,
          "doc": "Returns \"attributes\" if it was an attribute mutation. \"characterData\" if it was a mutation to a CharacterData node. And \"childList\" if it was a mutation to the tree of nodes.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MutationRecordType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A MutationRecord represents an individual DOM mutation. It is the object that is passed to MutationObserver's callback."
    },
    "NamedNodeMap": {
      "indexes": [
        {
          "_": 9966,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 9958,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getNamedItem": {
          "_": 9959,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getNamedItemNS": {
          "_": 9960,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 9961,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "removeNamedItem": {
          "_": 9962,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "removeNamedItemNS": {
          "_": 9963,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setNamedItem": {
          "_": 9964,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setNamedItemNS": {
          "_": 9965,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Attr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array."
    },
    "NavigationPreloadManager": {
      "indexes": [],
      "props": {
        "disable": {
          "_": 9976,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "enable": {
          "_": 9977,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "getState": {
          "_": 9978,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "NavigationPreloadState",
            "generics": []
          },
          "isStatic": false
        },
        "setHeaderValue": {
          "_": 9979,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "Navigator": {
      "indexes": [],
      "props": {
        "clipboard": {
          "_": 9990,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Clipboard",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "credentials": {
          "_": 9992,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CredentialsContainer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "doNotTrack": {
          "_": 9993,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "geolocation": {
          "_": 9994,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Geolocation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "maxTouchPoints": {
          "_": 9995,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "mediaCapabilities": {
          "_": 9996,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaCapabilities",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "mediaDevices": {
          "_": 9998,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaDevices",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "mediaSession": {
          "_": 9999,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaSession",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "permissions": {
          "_": 10000,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Permissions",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "serviceWorker": {
          "_": 10002,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ServiceWorkerContainer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "canShare": {
          "_": 10004,
          "doc": "Available only in secure contexts.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "getGamepads": {
          "_": 10005,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "Gamepad",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "requestMediaKeySystemAccess": {
          "_": 10007,
          "doc": "Available only in secure contexts.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "MediaKeySystemAccess",
            "generics": []
          },
          "isStatic": false
        },
        "sendBeacon": {
          "_": 10008,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "share": {
          "_": 10010,
          "doc": "Available only in secure contexts.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "vibrate": {
          "_": 10011,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities."
    },
    "NavigatorAutomationInformation": {
      "indexes": [],
      "props": {
        "webdriver": {
          "_": 10020,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NavigatorConcurrentHardware": {
      "indexes": [],
      "props": {
        "hardwareConcurrency": {
          "_": 10024,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NavigatorContentUtils": {
      "indexes": [],
      "props": {
        "registerProtocolHandler": {
          "_": 10029,
          "doc": "Available only in secure contexts.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NavigatorCookies": {
      "indexes": [],
      "props": {
        "cookieEnabled": {
          "_": 10033,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NavigatorID": {
      "indexes": [],
      "props": {
        "appCodeName": {
          "_": 10038,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "appName": {
          "_": 10040,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "appVersion": {
          "_": 10042,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "platform": {
          "_": 10044,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "product": {
          "_": 10046,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "productSub": {
          "_": 10048,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "userAgent": {
          "_": 10049,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "vendor": {
          "_": 10051,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "vendorSub": {
          "_": 10053,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NavigatorLanguage": {
      "indexes": [],
      "props": {
        "language": {
          "_": 10057,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "languages": {
          "_": 10058,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NavigatorLocks": {
      "indexes": [],
      "props": {
        "locks": {
          "_": 10063,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "LockManager",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "NavigatorOnLine": {
      "indexes": [],
      "props": {
        "onLine": {
          "_": 10067,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NavigatorPlugins": {
      "indexes": [],
      "props": {
        "mimeTypes": {
          "_": 10072,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MimeTypeArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pdfViewerEnabled": {
          "_": 10073,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "plugins": {
          "_": 10075,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PluginArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "javaEnabled": {
          "_": 10077,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NavigatorStorage": {
      "indexes": [],
      "props": {
        "storage": {
          "_": 10082,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "StorageManager",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "Node": {
      "indexes": [],
      "props": {
        "baseURI": {
          "_": 10088,
          "doc": "Returns node's node document's document base URL.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "childNodes": {
          "_": 10090,
          "doc": "Returns the children.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "ChildNode",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "firstChild": {
          "_": 10092,
          "doc": "Returns the first child.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ChildNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isConnected": {
          "_": 10094,
          "doc": "Returns true if node is connected and false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastChild": {
          "_": 10096,
          "doc": "Returns the last child.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ChildNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "nextSibling": {
          "_": 10098,
          "doc": "Returns the next sibling.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ChildNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "nodeName": {
          "_": 10100,
          "doc": "Returns a string appropriate for the type of node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "nodeType": {
          "_": 10102,
          "doc": "Returns the type of node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "nodeValue": {
          "_": 10103,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerDocument": {
          "_": 10105,
          "doc": "Returns the node document. Returns null for documents.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "parentElement": {
          "_": 10107,
          "doc": "Returns the parent element.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "parentNode": {
          "_": 10109,
          "doc": "Returns the parent.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ParentNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "previousSibling": {
          "_": 10111,
          "doc": "Returns the previous sibling.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ChildNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "textContent": {
          "_": 10112,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendChild": {
          "_": 10113,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cloneNode": {
          "_": 10115,
          "doc": "Returns a copy of node. If deep is true, the copy also includes the node's descendants.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "compareDocumentPosition": {
          "_": 10117,
          "doc": "Returns a bitmask indicating the position of other relative to node.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "contains": {
          "_": 10119,
          "doc": "Returns true if other is an inclusive descendant of node, and false otherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "getRootNode": {
          "_": 10121,
          "doc": "Returns node's root.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "hasChildNodes": {
          "_": 10123,
          "doc": "Returns whether node has children.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertBefore": {
          "_": 10124,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isDefaultNamespace": {
          "_": 10125,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isEqualNode": {
          "_": 10127,
          "doc": "Returns whether node and otherNode have the same properties.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isSameNode": {
          "_": 10128,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "lookupNamespaceURI": {
          "_": 10129,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lookupPrefix": {
          "_": 10130,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "normalize": {
          "_": 10132,
          "doc": "Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeChild": {
          "_": 10133,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceChild": {
          "_": 10134,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ATTRIBUTE_NODE": {
          "_": 10135,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "CDATA_SECTION_NODE": {
          "_": 10137,
          "doc": "node is a CDATASection node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "COMMENT_NODE": {
          "_": 10139,
          "doc": "node is a Comment node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_": 10141,
          "doc": "node is a DocumentFragment node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOCUMENT_NODE": {
          "_": 10143,
          "doc": "node is a document.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_": 10145,
          "doc": "Set when other is a descendant of node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_": 10147,
          "doc": "Set when other is an ancestor of node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_": 10149,
          "doc": "Set when node and other are not in the same tree.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_": 10151,
          "doc": "Set when other is following node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_": 10152,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_": 10154,
          "doc": "Set when other is preceding node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOCUMENT_TYPE_NODE": {
          "_": 10156,
          "doc": "node is a doctype.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ELEMENT_NODE": {
          "_": 10158,
          "doc": "node is an element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ENTITY_NODE": {
          "_": 10159,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ENTITY_REFERENCE_NODE": {
          "_": 10160,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NOTATION_NODE": {
          "_": 10161,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_": 10163,
          "doc": "node is a ProcessingInstruction node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXT_NODE": {
          "_": 10165,
          "doc": "node is a Text node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Node is an interface from which a number of DOM API object types inherit. It allows those types to be treated similarly; for example, inheriting the same set of methods, or being tested in the same way."
    },
    "NodeIterator": {
      "indexes": [],
      "props": {
        "filter": {
          "_": 10206,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "NodeFilter",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pointerBeforeReferenceNode": {
          "_": 10207,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "referenceNode": {
          "_": 10208,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "root": {
          "_": 10209,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "whatToShow": {
          "_": 10210,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "detach": {
          "_": 10212,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "nextNode": {
          "_": 10213,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "previousNode": {
          "_": 10214,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order."
    },
    "NodeList": {
      "indexes": [
        {
          "_": 10234,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 10225,
          "doc": "Returns the number of nodes in the collection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 10227,
          "doc": "Returns the node with index index from the collection. The nodes are sorted in tree order.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 10233,
          "doc": "Performs the specified action for each node in an list.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll()."
    },
    "NodeListOf": {
      "indexes": [
        {
          "_": 10250,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "TNode",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "item": {
          "_": 10243,
          "doc": "Returns the node with index index from the collection. The nodes are sorted in tree order.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "TNode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 10249,
          "doc": "Performs the specified action for each node in an list.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "TNode",
          "constraint": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "NonDocumentTypeChildNode": {
      "indexes": [],
      "props": {
        "nextElementSibling": {
          "_": 10255,
          "doc": "Returns the first following sibling that is an element, and null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "previousElementSibling": {
          "_": 10257,
          "doc": "Returns the first preceding sibling that is an element, and null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NonElementParentNode": {
      "indexes": [],
      "props": {
        "getElementById": {
          "_": 10262,
          "doc": "Returns the first element within node's descendants whose ID is elementId.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NotificationEventMap": {
      "indexes": [],
      "props": {
        "\"click\"": {
          "_": 10266,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"close\"": {
          "_": 10267,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 10268,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"show\"": {
          "_": 10269,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Notification": {
      "indexes": [],
      "props": {
        "body": {
          "_": 10274,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "data": {
          "_": 10275,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "dir": {
          "_": 10276,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NotificationDirection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "icon": {
          "_": 10277,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lang": {
          "_": 10278,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onclick": {
          "_": 10279,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Notification",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onclose": {
          "_": 10280,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Notification",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 10281,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Notification",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onshow": {
          "_": 10282,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Notification",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "tag": {
          "_": 10283,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "title": {
          "_": 10284,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 10285,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 10287,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 10289,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Notifications API interface is used to configure and display desktop notifications to the user."
    },
    "OES_draw_buffers_indexed": {
      "indexes": [],
      "props": {
        "blendEquationSeparateiOES": {
          "_": 10300,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blendEquationiOES": {
          "_": 10301,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blendFuncSeparateiOES": {
          "_": 10302,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blendFunciOES": {
          "_": 10303,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "colorMaskiOES": {
          "_": 10304,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "disableiOES": {
          "_": 10305,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "enableiOES": {
          "_": 10306,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OES_element_index_uint": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The OES_element_index_uint extension is part of the WebGL API and adds support for gl.UNSIGNED_INT types to WebGLRenderingContext.drawElements()."
    },
    "OES_fbo_render_mipmap": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OES_standard_derivatives": {
      "indexes": [],
      "props": {
        "FRAGMENT_SHADER_DERIVATIVE_HINT_OES": {
          "_": 10318,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The OES_standard_derivatives extension is part of the WebGL API and adds the GLSL derivative functions dFdx, dFdy, and fwidth."
    },
    "OES_texture_float": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The OES_texture_float extension is part of the WebGL API and exposes floating-point pixel types for textures."
    },
    "OES_texture_float_linear": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The OES_texture_float_linear extension is part of the WebGL API and allows linear filtering with floating-point pixel types for textures."
    },
    "OES_texture_half_float": {
      "indexes": [],
      "props": {
        "HALF_FLOAT_OES": {
          "_": 10331,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The OES_texture_half_float extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components."
    },
    "OES_texture_half_float_linear": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The OES_texture_half_float_linear extension is part of the WebGL API and allows linear filtering with half floating-point pixel types for textures."
    },
    "OES_vertex_array_object": {
      "indexes": [],
      "props": {
        "bindVertexArrayOES": {
          "_": 10339,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "createVertexArrayOES": {
          "_": 10340,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLVertexArrayObjectOES",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteVertexArrayOES": {
          "_": 10341,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "isVertexArrayOES": {
          "_": 10342,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ARRAY_BINDING_OES": {
          "_": 10343,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OVR_multiview2": {
      "indexes": [],
      "props": {
        "framebufferTextureMultiviewOVR": {
          "_": 10347,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR": {
          "_": 10348,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR": {
          "_": 10349,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR": {
          "_": 10350,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VIEWS_OVR": {
          "_": 10351,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OfflineAudioCompletionEvent": {
      "indexes": [],
      "props": {
        "renderedBuffer": {
          "_": 10356,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The Web Audio API OfflineAudioCompletionEvent interface represents events that occur when the processing of an OfflineAudioContext is terminated. The complete event implements this interface."
    },
    "OfflineAudioContextEventMap": {
      "indexes": [],
      "props": {
        "\"complete\"": {
          "_": 10365,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "OfflineAudioCompletionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OfflineAudioContext": {
      "indexes": [],
      "props": {
        "length": {
          "_": 10370,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "oncomplete": {
          "_": 10371,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "OfflineAudioContext",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "OfflineAudioCompletionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "resume": {
          "_": 10372,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "startRendering": {
          "_": 10373,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "AudioBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "suspend": {
          "_": 10374,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 10376,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 10378,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An AudioContext interface representing an audio-processing graph built from linked together AudioNodes. In contrast with a standard AudioContext, an OfflineAudioContext doesn't render the audio to the device hardware; instead, it generates it, as fast as it can, and outputs the result to an AudioBuffer."
    },
    "OffscreenCanvasEventMap": {
      "indexes": [],
      "props": {
        "\"contextlost\"": {
          "_": 10388,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"contextrestored\"": {
          "_": 10389,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OffscreenCanvas": {
      "indexes": [],
      "props": {
        "height": {
          "_": 10398,
          "doc": "These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n\nThey can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "oncontextlost": {
          "_": 10399,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "OffscreenCanvas",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncontextrestored": {
          "_": 10400,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "OffscreenCanvas",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 10406,
          "doc": "These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n\nThey can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getContext": {
          "_": 10414,
          "doc": "Returns an object that exposes an API for drawing on the OffscreenCanvas object. contextId specifies the desired API: \"2d\", \"bitmaprenderer\", \"webgl\", or \"webgl2\". options is handled by that API.\n\nThis specification defines the \"2d\" context below, which is similar but distinct from the \"2d\" context that is created from a canvas element. The WebGL specifications define the \"webgl\" and \"webgl2\" contexts. [WEBGL]\n\nReturns null if the canvas has already been initialized with another context type (e.g., trying to get a \"2d\" context after getting a \"webgl\" context).",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "OffscreenRenderingContext",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transferToImageBitmap": {
          "_": 10416,
          "doc": "Returns a newly created ImageBitmap object with the image in the OffscreenCanvas object. The image in the OffscreenCanvas object is replaced with a new blank image.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ImageBitmap",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 10418,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 10420,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OffscreenCanvasRenderingContext2D": {
      "indexes": [],
      "props": {
        "canvas": {
          "_": 10429,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "OffscreenCanvas",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "commit": {
          "_": 10430,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OscillatorNode": {
      "indexes": [],
      "props": {
        "detune": {
          "_": 10440,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "frequency": {
          "_": 10441,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 10442,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "OscillatorType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setPeriodicWave": {
          "_": 10443,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 10445,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 10447,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The OscillatorNode interface represents a periodic waveform, such as a sine wave. It is an AudioScheduledSourceNode audio-processing module that causes a specified frequency of a given wave to be created—in effect, a constant tone."
    },
    "OverconstrainedError": {
      "indexes": [],
      "props": {
        "constraint": {
          "_": 10456,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PageTransitionEvent": {
      "indexes": [],
      "props": {
        "persisted": {
          "_": 10478,
          "doc": "For the pageshow event, returns false if the page is newly being loaded (and the load event will fire). Otherwise, returns true.\n\nFor the pagehide event, returns false if the page is going away for the last time. Otherwise, returns true, meaning that (if nothing conspires to make the page unsalvageable) the page might be reused if the user navigates back to this page.\n\nThings that can cause the page to be unsalvageable include:\n\nThe user agent decided to not keep the Document alive in a session history entry after unload\nHaving iframes that are not salvageable\nActive WebSocket objects\nAborting a Document",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The PageTransitionEvent is fired when a document is being loaded or unloaded."
    },
    "PannerNode": {
      "indexes": [],
      "props": {
        "coneInnerAngle": {
          "_": 10488,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "coneOuterAngle": {
          "_": 10489,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "coneOuterGain": {
          "_": 10490,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "distanceModel": {
          "_": 10491,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DistanceModelType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "maxDistance": {
          "_": 10492,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "orientationX": {
          "_": 10493,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "orientationY": {
          "_": 10494,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "orientationZ": {
          "_": 10495,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "panningModel": {
          "_": 10496,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PanningModelType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "positionX": {
          "_": 10497,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "positionY": {
          "_": 10498,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "positionZ": {
          "_": 10499,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "refDistance": {
          "_": 10500,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "rolloffFactor": {
          "_": 10501,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "setOrientation": {
          "_": 10503,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setPosition": {
          "_": 10505,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A PannerNode always has exactly one input and one output: the input can be mono or stereo but the output is always stereo (2 channels); you can't have panning effects without at least two audio channels!"
    },
    "ParentNode": {
      "indexes": [],
      "props": {
        "childElementCount": {
          "_": 10514,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "children": {
          "_": 10516,
          "doc": "Returns the child elements.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCollection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "firstElementChild": {
          "_": 10518,
          "doc": "Returns the first child that is an element, and null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lastElementChild": {
          "_": 10520,
          "doc": "Returns the last child that is an element, and null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "append": {
          "_": 10526,
          "doc": "Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "prepend": {
          "_": 10532,
          "doc": "Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "querySelector": {
          "_": 10536,
          "doc": "Returns the first element that is a descendant of node that matches selectors.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "E",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "querySelectorAll": {
          "_": 10540,
          "doc": "Returns all element descendants of node that match selectors.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "ref": "E",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceChildren": {
          "_": 10546,
          "doc": "Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Path2D": {
      "indexes": [],
      "props": {
        "addPath": {
          "_": 10552,
          "doc": "Adds to the path the path given by the argument.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Canvas 2D API interface is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired."
    },
    "PaymentMethodChangeEvent": {
      "indexes": [],
      "props": {
        "methodDetails": {
          "_": 10562,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "methodName": {
          "_": 10563,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "PaymentRequestEventMap": {
      "indexes": [],
      "props": {
        "\"paymentmethodchange\"": {
          "_": 10572,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PaymentRequest": {
      "indexes": [],
      "props": {
        "id": {
          "_": 10580,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onpaymentmethodchange": {
          "_": 10581,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "PaymentRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "abort": {
          "_": 10582,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "canMakePayment": {
          "_": 10583,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        },
        "show": {
          "_": 10584,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "PaymentResponse",
            "generics": []
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 10586,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 10588,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Payment Request API interface is the primary access point into the API, and lets web content and apps accept payments from the end user.\nAvailable only in secure contexts."
    },
    "PaymentRequestUpdateEvent": {
      "indexes": [],
      "props": {
        "updateWith": {
          "_": 10601,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Payment Request API interface enables a web page to update the details of a PaymentRequest in response to a user action.\nAvailable only in secure contexts."
    },
    "PaymentResponse": {
      "indexes": [],
      "props": {
        "details": {
          "_": 10614,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "methodName": {
          "_": 10615,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "requestId": {
          "_": 10616,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "complete": {
          "_": 10617,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "retry": {
          "_": 10618,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 10619,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Payment Request API interface is returned after a user selects a payment method and approves a payment request.\nAvailable only in secure contexts."
    },
    "PerformanceEventMap": {
      "indexes": [],
      "props": {
        "\"resourcetimingbufferfull\"": {
          "_": 10628,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Performance": {
      "indexes": [],
      "props": {
        "eventCounts": {
          "_": 10633,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "EventCounts",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "navigation": {
          "_": 10635,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PerformanceNavigation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onresourcetimingbufferfull": {
          "_": 10636,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Performance",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "timeOrigin": {
          "_": 10637,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timing": {
          "_": 10639,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PerformanceTiming",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "clearMarks": {
          "_": 10640,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearMeasures": {
          "_": 10641,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearResourceTimings": {
          "_": 10642,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getEntries": {
          "_": 10643,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PerformanceEntryList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getEntriesByName": {
          "_": 10644,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PerformanceEntryList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getEntriesByType": {
          "_": 10645,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PerformanceEntryList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "mark": {
          "_": 10646,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PerformanceMark",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "measure": {
          "_": 10647,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PerformanceMeasure",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "now": {
          "_": 10648,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setResourceTimingBufferSize": {
          "_": 10649,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 10650,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 10652,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 10654,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to performance-related information for the current page. It's part of the High Resolution Time API, but is enhanced by the Performance Timeline API, the Navigation Timing API, the User Timing API, and the Resource Timing API."
    },
    "PerformanceEntry": {
      "indexes": [],
      "props": {
        "duration": {
          "_": 10664,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "entryType": {
          "_": 10665,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 10666,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "startTime": {
          "_": 10667,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 10668,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Encapsulates a single performance metric that is part of the performance timeline. A performance entry can be directly created by making a performance mark or measure (for example by calling the mark() method) at an explicit point in an application. Performance entries are also created in indirect ways such as loading a resource (such as an image)."
    },
    "PerformanceEventTiming": {
      "indexes": [],
      "props": {
        "cancelable": {
          "_": 10677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "processingEnd": {
          "_": 10678,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "processingStart": {
          "_": 10679,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 10680,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 10681,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PerformanceMark": {
      "indexes": [],
      "props": {
        "detail": {
          "_": 10691,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "PerformanceMark is an abstract interface for PerformanceEntry objects with an entryType of \"mark\". Entries of this type are created by calling performance.mark() to add a named DOMHighResTimeStamp (the mark) to the browser's performance timeline."
    },
    "PerformanceMeasure": {
      "indexes": [],
      "props": {
        "detail": {
          "_": 10701,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "PerformanceMeasure is an abstract interface for PerformanceEntry objects with an entryType of \"measure\". Entries of this type are created by calling performance.measure() to add a named DOMHighResTimeStamp (the measure) between two marks to the browser's performance timeline."
    },
    "PerformanceNavigation": {
      "indexes": [],
      "props": {
        "redirectCount": {
          "_": 10715,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 10717,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 10719,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "TYPE_BACK_FORWARD": {
          "_": 10720,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TYPE_NAVIGATE": {
          "_": 10721,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TYPE_RELOAD": {
          "_": 10722,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TYPE_RESERVED": {
          "_": 10723,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The legacy PerformanceNavigation interface represents information about how the navigation to the current document was done."
    },
    "PerformanceNavigationTiming": {
      "indexes": [],
      "props": {
        "domComplete": {
          "_": 10738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "domContentLoadedEventEnd": {
          "_": 10739,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "domContentLoadedEventStart": {
          "_": 10740,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "domInteractive": {
          "_": 10741,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "loadEventEnd": {
          "_": 10742,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "loadEventStart": {
          "_": 10743,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "redirectCount": {
          "_": 10744,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 10745,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NavigationTimingType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "unloadEventEnd": {
          "_": 10746,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "unloadEventStart": {
          "_": 10747,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 10748,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides methods and properties to store and retrieve metrics regarding the browser's document navigation events. For example, this interface can be used to determine how much time it takes to load or unload a document."
    },
    "PerformanceObserver": {
      "indexes": [],
      "props": {
        "disconnect": {
          "_": 10757,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "observe": {
          "_": 10758,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "takeRecords": {
          "_": 10759,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PerformanceEntryList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PerformanceObserverEntryList": {
      "indexes": [],
      "props": {
        "getEntries": {
          "_": 10769,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PerformanceEntryList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getEntriesByName": {
          "_": 10770,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PerformanceEntryList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getEntriesByType": {
          "_": 10771,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PerformanceEntryList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PerformancePaintTiming": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PerformanceResourceTiming": {
      "indexes": [],
      "props": {
        "connectEnd": {
          "_": 10789,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "connectStart": {
          "_": 10790,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "decodedBodySize": {
          "_": 10791,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "domainLookupEnd": {
          "_": 10792,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "domainLookupStart": {
          "_": 10793,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "encodedBodySize": {
          "_": 10794,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "fetchStart": {
          "_": 10795,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initiatorType": {
          "_": 10796,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "nextHopProtocol": {
          "_": 10797,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "redirectEnd": {
          "_": 10798,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "redirectStart": {
          "_": 10799,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "requestStart": {
          "_": 10800,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "responseEnd": {
          "_": 10801,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "responseStart": {
          "_": 10802,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "secureConnectionStart": {
          "_": 10803,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "serverTiming": {
          "_": 10804,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "PerformanceServerTiming",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "transferSize": {
          "_": 10805,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "workerStart": {
          "_": 10806,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 10807,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Enables retrieval and analysis of detailed network timing data regarding the loading of an application's resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an XMLHttpRequest, <SVG>, image, or script."
    },
    "PerformanceServerTiming": {
      "indexes": [],
      "props": {
        "description": {
          "_": 10816,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "duration": {
          "_": 10817,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 10818,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 10819,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PerformanceTiming": {
      "indexes": [],
      "props": {
        "connectEnd": {
          "_": 10833,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "connectStart": {
          "_": 10835,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "domComplete": {
          "_": 10837,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "domContentLoadedEventEnd": {
          "_": 10839,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "domContentLoadedEventStart": {
          "_": 10841,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "domInteractive": {
          "_": 10843,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "domLoading": {
          "_": 10845,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "domainLookupEnd": {
          "_": 10847,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "domainLookupStart": {
          "_": 10849,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "fetchStart": {
          "_": 10851,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "loadEventEnd": {
          "_": 10853,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "loadEventStart": {
          "_": 10855,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "navigationStart": {
          "_": 10857,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "redirectEnd": {
          "_": 10859,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "redirectStart": {
          "_": 10861,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "requestStart": {
          "_": 10863,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "responseEnd": {
          "_": 10865,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "responseStart": {
          "_": 10867,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "secureConnectionStart": {
          "_": 10869,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "unloadEventEnd": {
          "_": 10871,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "unloadEventStart": {
          "_": 10873,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 10875,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A legacy interface kept for backwards compatibility and contains properties that offer performance timing information for various events which occur during the loading and use of the current page. You get a PerformanceTiming object describing your page using the window.performance.timing property."
    },
    "PeriodicWave": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "PeriodicWave has no inputs or outputs; it is used to define custom oscillators when calling OscillatorNode.setPeriodicWave(). The PeriodicWave itself is created/returned by AudioContext.createPeriodicWave()."
    },
    "PermissionStatusEventMap": {
      "indexes": [],
      "props": {
        "\"change\"": {
          "_": 10894,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PermissionStatus": {
      "indexes": [],
      "props": {
        "name": {
          "_": 10898,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onchange": {
          "_": 10899,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "PermissionStatus",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 10900,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PermissionState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 10902,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 10904,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Permissions": {
      "indexes": [],
      "props": {
        "query": {
          "_": 10913,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "PermissionStatus",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PictureInPictureEvent": {
      "indexes": [],
      "props": {
        "pictureInPictureWindow": {
          "_": 10922,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PictureInPictureWindow",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PictureInPictureWindowEventMap": {
      "indexes": [],
      "props": {
        "\"resize\"": {
          "_": 10931,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PictureInPictureWindow": {
      "indexes": [],
      "props": {
        "height": {
          "_": 10935,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onresize": {
          "_": 10936,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "PictureInPictureWindow",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 10937,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 10939,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 10941,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Plugin": {
      "indexes": [
        {
          "_": 10981,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "MimeType",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "description": {
          "_": 10958,
          "doc": "Returns the plugin's description.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "filename": {
          "_": 10963,
          "doc": "Returns the plugin library's filename, if applicable on the current platform.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 10968,
          "doc": "Returns the number of MIME types, represented by MimeType objects, supported by the plugin.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 10973,
          "doc": "Returns the plugin's name.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 10978,
          "doc": "Returns the specified MimeType object.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "MimeType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "namedItem": {
          "_": 10980,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "MimeType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides information about a browser plugin."
    },
    "PluginArray": {
      "indexes": [
        {
          "_": 11003,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "Plugin",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 10996,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 10998,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Plugin",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "namedItem": {
          "_": 11000,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Plugin",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "refresh": {
          "_": 11002,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used to store a list of Plugin objects describing the available plugins; it's returned by the window.navigator.plugins property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem(\"name\") methods."
    },
    "PointerEvent": {
      "indexes": [],
      "props": {
        "height": {
          "_": 11014,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "isPrimary": {
          "_": 11015,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "pointerId": {
          "_": 11016,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pointerType": {
          "_": 11017,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pressure": {
          "_": 11018,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "tangentialPressure": {
          "_": 11019,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "tiltX": {
          "_": 11020,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "tiltY": {
          "_": 11021,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "twist": {
          "_": 11022,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 11023,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getCoalescedEvents": {
          "_": 11025,
          "doc": "Available only in secure contexts.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getPredictedEvents": {
          "_": 11026,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The state of a DOM event produced by a pointer such as the geometry of the contact point, the device type that generated the event, the amount of pressure that was applied on the contact surface, etc."
    },
    "PopStateEvent": {
      "indexes": [],
      "props": {
        "state": {
          "_": 11037,
          "doc": "Returns a copy of the information that was provided to pushState() or replaceState().",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "PopStateEvent is an event handler for the popstate event on the window."
    },
    "ProcessingInstruction": {
      "indexes": [],
      "props": {
        "ownerDocument": {
          "_": 11047,
          "doc": "Returns the node document. Returns null for documents.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 11048,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A processing instruction embeds application-specific instructions in XML which can be ignored by other applications that don't recognize them."
    },
    "ProgressEvent": {
      "indexes": [],
      "props": {
        "lengthComputable": {
          "_": 11058,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "loaded": {
          "_": 11059,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 11060,
          "doc": "Returns the object to which event is dispatched (its target).",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "total": {
          "_": 11061,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": "Events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an <img>, <audio>, <video>, <style> or <link>)."
    },
    "PromiseRejectionEvent": {
      "indexes": [],
      "props": {
        "promise": {
          "_": 11070,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "any"
          },
          "isStatic": false
        },
        "reason": {
          "_": 11071,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PublicKeyCredential": {
      "indexes": [],
      "props": {
        "authenticatorAttachment": {
          "_": 11081,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rawId": {
          "_": 11082,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "response": {
          "_": 11083,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AuthenticatorResponse",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getClientExtensionResults": {
          "_": 11084,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "AuthenticationExtensionsClientOutputs",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "PushManager": {
      "indexes": [],
      "props": {
        "getSubscription": {
          "_": 11098,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "PushSubscription",
            "generics": []
          },
          "isStatic": false
        },
        "permissionState": {
          "_": 11099,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "PermissionState",
            "generics": []
          },
          "isStatic": false
        },
        "subscribe": {
          "_": 11100,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "PushSubscription",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Push API interface provides a way to receive notifications from third-party servers as well as request URLs for push notifications.\nAvailable only in secure contexts."
    },
    "PushSubscription": {
      "indexes": [],
      "props": {
        "endpoint": {
          "_": 11114,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "expirationTime": {
          "_": 11115,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "EpochTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "options": {
          "_": 11116,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PushSubscriptionOptions",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getKey": {
          "_": 11117,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 11118,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PushSubscriptionJSON",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "unsubscribe": {
          "_": 11119,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Push API interface provides a subcription's URL endpoint and allows unsubscription from a push service.\nAvailable only in secure contexts."
    },
    "PushSubscriptionOptions": {
      "indexes": [],
      "props": {
        "applicationServerKey": {
          "_": 11129,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "userVisibleOnly": {
          "_": 11130,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "RTCCertificate": {
      "indexes": [],
      "props": {
        "expires": {
          "_": 11139,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "EpochTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getFingerprints": {
          "_": 11140,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCDtlsFingerprint",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDTMFSenderEventMap": {
      "indexes": [],
      "props": {
        "\"tonechange\"": {
          "_": 11149,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCDTMFToneChangeEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDTMFSender": {
      "indexes": [],
      "props": {
        "canInsertDTMF": {
          "_": 11153,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ontonechange": {
          "_": 11154,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCDTMFSender",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "RTCDTMFToneChangeEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "toneBuffer": {
          "_": 11155,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertDTMF": {
          "_": 11156,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 11158,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11160,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDTMFToneChangeEvent": {
      "indexes": [],
      "props": {
        "tone": {
          "_": 11170,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events sent to indicate that DTMF tones have started or finished playing. This interface is used by the tonechange event."
    },
    "RTCDataChannelEventMap": {
      "indexes": [],
      "props": {
        "\"bufferedamountlow\"": {
          "_": 11179,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"close\"": {
          "_": 11180,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"closing\"": {
          "_": 11181,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 11182,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"message\"": {
          "_": 11183,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"open\"": {
          "_": 11184,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDataChannel": {
      "indexes": [],
      "props": {
        "binaryType": {
          "_": 11188,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BinaryType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "bufferedAmount": {
          "_": 11189,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "bufferedAmountLowThreshold": {
          "_": 11190,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "id": {
          "_": 11191,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "label": {
          "_": 11192,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxPacketLifeTime": {
          "_": 11193,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxRetransmits": {
          "_": 11194,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "negotiated": {
          "_": 11195,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "onbufferedamountlow": {
          "_": 11196,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCDataChannel",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onclose": {
          "_": 11197,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCDataChannel",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onclosing": {
          "_": 11198,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCDataChannel",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 11199,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCDataChannel",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessage": {
          "_": 11200,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCDataChannel",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onopen": {
          "_": 11201,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCDataChannel",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ordered": {
          "_": 11202,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "protocol": {
          "_": 11203,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 11204,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCDataChannelState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 11205,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "send": {
          "_": 11209,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 11211,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11213,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDataChannelEvent": {
      "indexes": [],
      "props": {
        "channel": {
          "_": 11222,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCDataChannel",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDtlsTransportEventMap": {
      "indexes": [],
      "props": {
        "\"error\"": {
          "_": 11231,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"statechange\"": {
          "_": 11232,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCDtlsTransport": {
      "indexes": [],
      "props": {
        "iceTransport": {
          "_": 11236,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCIceTransport",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 11237,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCDtlsTransport",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onstatechange": {
          "_": 11238,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCDtlsTransport",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 11239,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCDtlsTransportState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getRemoteCertificates": {
          "_": 11240,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "ArrayBuffer",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 11242,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11244,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCEncodedAudioFrame": {
      "indexes": [],
      "props": {
        "data": {
          "_": 11253,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timestamp": {
          "_": 11254,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getMetadata": {
          "_": 11255,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RTCEncodedAudioFrameMetadata",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCEncodedVideoFrame": {
      "indexes": [],
      "props": {
        "data": {
          "_": 11264,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "timestamp": {
          "_": 11265,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 11266,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCEncodedVideoFrameType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getMetadata": {
          "_": 11267,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RTCEncodedVideoFrameMetadata",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCError": {
      "indexes": [],
      "props": {
        "errorDetail": {
          "_": 11276,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCErrorDetailType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "receivedAlert": {
          "_": 11277,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sctpCauseCode": {
          "_": 11278,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sdpLineNumber": {
          "_": 11279,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sentAlert": {
          "_": 11280,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCErrorEvent": {
      "indexes": [],
      "props": {
        "error": {
          "_": 11289,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCIceCandidate": {
      "indexes": [],
      "props": {
        "address": {
          "_": 11299,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "candidate": {
          "_": 11300,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "component": {
          "_": 11301,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCIceComponent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "foundation": {
          "_": 11302,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "port": {
          "_": 11303,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "priority": {
          "_": 11304,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "protocol": {
          "_": 11305,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCIceProtocol",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "relatedAddress": {
          "_": 11306,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "relatedPort": {
          "_": 11307,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sdpMLineIndex": {
          "_": 11308,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sdpMid": {
          "_": 11309,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "tcpType": {
          "_": 11310,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCIceTcpCandidateType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 11311,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCIceCandidateType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "usernameFragment": {
          "_": 11312,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 11313,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RTCIceCandidateInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The RTCIceCandidate interface—part of the WebRTC API—represents a candidate Internet Connectivity Establishment (ICE) configuration which may be used to establish an RTCPeerConnection."
    },
    "RTCIceTransportEventMap": {
      "indexes": [],
      "props": {
        "\"gatheringstatechange\"": {
          "_": 11322,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"statechange\"": {
          "_": 11323,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCIceTransport": {
      "indexes": [],
      "props": {
        "gatheringState": {
          "_": 11328,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCIceGathererState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ongatheringstatechange": {
          "_": 11329,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCIceTransport",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onstatechange": {
          "_": 11330,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCIceTransport",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 11331,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCIceTransportState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 11333,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11335,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to information about the ICE transport layer over which the data is being sent and received."
    },
    "RTCPeerConnectionEventMap": {
      "indexes": [],
      "props": {
        "\"connectionstatechange\"": {
          "_": 11344,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"datachannel\"": {
          "_": 11345,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCDataChannelEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"icecandidate\"": {
          "_": 11346,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCPeerConnectionIceEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"icecandidateerror\"": {
          "_": 11347,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"iceconnectionstatechange\"": {
          "_": 11348,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"icegatheringstatechange\"": {
          "_": 11349,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"negotiationneeded\"": {
          "_": 11350,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"signalingstatechange\"": {
          "_": 11351,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"track\"": {
          "_": 11352,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCTrackEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCPeerConnection": {
      "indexes": [],
      "props": {
        "canTrickleIceCandidates": {
          "_": 11357,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "connectionState": {
          "_": 11358,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCPeerConnectionState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "currentLocalDescription": {
          "_": 11359,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCSessionDescription",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "currentRemoteDescription": {
          "_": 11360,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCSessionDescription",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "iceConnectionState": {
          "_": 11361,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCIceConnectionState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "iceGatheringState": {
          "_": 11362,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCIceGatheringState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "localDescription": {
          "_": 11363,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCSessionDescription",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onconnectionstatechange": {
          "_": 11364,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCPeerConnection",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondatachannel": {
          "_": 11365,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCPeerConnection",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "RTCDataChannelEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onicecandidate": {
          "_": 11366,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCPeerConnection",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "RTCPeerConnectionIceEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onicecandidateerror": {
          "_": 11367,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCPeerConnection",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "oniceconnectionstatechange": {
          "_": 11368,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCPeerConnection",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onicegatheringstatechange": {
          "_": 11369,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCPeerConnection",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onnegotiationneeded": {
          "_": 11370,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCPeerConnection",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onsignalingstatechange": {
          "_": 11371,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCPeerConnection",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontrack": {
          "_": 11372,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCPeerConnection",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "RTCTrackEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "pendingLocalDescription": {
          "_": 11373,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCSessionDescription",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pendingRemoteDescription": {
          "_": 11374,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCSessionDescription",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "remoteDescription": {
          "_": 11375,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCSessionDescription",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "sctp": {
          "_": 11376,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCSctpTransport",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "signalingState": {
          "_": 11377,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCSignalingState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addIceCandidate": {
          "_": 11380,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "addTrack": {
          "_": 11381,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpSender",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addTransceiver": {
          "_": 11382,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpTransceiver",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 11383,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "createAnswer": {
          "_": 11386,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "createDataChannel": {
          "_": 11387,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RTCDataChannel",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createOffer": {
          "_": 11390,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "getConfiguration": {
          "_": 11391,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RTCConfiguration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getReceivers": {
          "_": 11392,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpReceiver",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getSenders": {
          "_": 11393,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpSender",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getStats": {
          "_": 11394,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "RTCStatsReport",
            "generics": []
          },
          "isStatic": false
        },
        "getTransceivers": {
          "_": 11395,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpTransceiver",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "removeTrack": {
          "_": 11396,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "restartIce": {
          "_": 11397,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setConfiguration": {
          "_": 11398,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setLocalDescription": {
          "_": 11401,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "setRemoteDescription": {
          "_": 11404,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 11406,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11408,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed."
    },
    "RTCPeerConnectionIceErrorEvent": {
      "indexes": [],
      "props": {
        "address": {
          "_": 11418,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "errorCode": {
          "_": 11419,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "errorText": {
          "_": 11420,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "port": {
          "_": 11421,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 11422,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCPeerConnectionIceEvent": {
      "indexes": [],
      "props": {
        "candidate": {
          "_": 11432,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCIceCandidate",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events that occurs in relation to ICE candidates with the target, usually an RTCPeerConnection. Only one event is of this type: icecandidate."
    },
    "RTCRtpReceiver": {
      "indexes": [],
      "props": {
        "track": {
          "_": 11442,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transport": {
          "_": 11443,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCDtlsTransport",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getContributingSources": {
          "_": 11444,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpContributingSource",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getParameters": {
          "_": 11445,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpReceiveParameters",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getStats": {
          "_": 11446,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "RTCStatsReport",
            "generics": []
          },
          "isStatic": false
        },
        "getSynchronizationSources": {
          "_": 11447,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "RTCRtpSynchronizationSource",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This WebRTC API interface manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection."
    },
    "RTCRtpSender": {
      "indexes": [],
      "props": {
        "dtmf": {
          "_": 11458,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCDTMFSender",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "track": {
          "_": 11459,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "MediaStreamTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transport": {
          "_": 11460,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCDtlsTransport",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getParameters": {
          "_": 11461,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpSendParameters",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getStats": {
          "_": 11462,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "RTCStatsReport",
            "generics": []
          },
          "isStatic": false
        },
        "replaceTrack": {
          "_": 11463,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "setParameters": {
          "_": 11464,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "setStreams": {
          "_": 11465,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides the ability to control and obtain details about how a particular MediaStreamTrack is encoded and sent to a remote peer."
    },
    "RTCRtpTransceiver": {
      "indexes": [],
      "props": {
        "currentDirection": {
          "_": 11475,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "RTCRtpTransceiverDirection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "direction": {
          "_": 11476,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpTransceiverDirection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "mid": {
          "_": 11477,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "receiver": {
          "_": 11478,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpReceiver",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "sender": {
          "_": 11479,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpSender",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setCodecPreferences": {
          "_": 11480,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stop": {
          "_": 11481,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCSctpTransportEventMap": {
      "indexes": [],
      "props": {
        "\"statechange\"": {
          "_": 11490,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCSctpTransport": {
      "indexes": [],
      "props": {
        "maxChannels": {
          "_": 11494,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "maxMessageSize": {
          "_": 11495,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onstatechange": {
          "_": 11496,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RTCSctpTransport",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 11497,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCSctpTransportState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transport": {
          "_": 11498,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCDtlsTransport",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 11500,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11502,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCSessionDescription": {
      "indexes": [],
      "props": {
        "sdp": {
          "_": 11512,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 11513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCSdpType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 11514,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "One end of a connection—or potential connection—and how it's configured. Each RTCSessionDescription consists of a description type indicating which part of the offer/answer negotiation process it describes and of the SDP descriptor of the session."
    },
    "RTCStatsReport": {
      "indexes": [],
      "props": {
        "forEach": {
          "_": 11523,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCTrackEvent": {
      "indexes": [],
      "props": {
        "receiver": {
          "_": 11532,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpReceiver",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "streams": {
          "_": 11533,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "MediaStream",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "track": {
          "_": 11534,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaStreamTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transceiver": {
          "_": 11535,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RTCRtpTransceiver",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RadioNodeList": {
      "indexes": [],
      "props": {
        "value": {
          "_": 11544,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Range": {
      "indexes": [],
      "props": {
        "commonAncestorContainer": {
          "_": 11555,
          "doc": "Returns the node, furthest away from the document, that is an ancestor of both range's start node and end node.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cloneContents": {
          "_": 11556,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DocumentFragment",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cloneRange": {
          "_": 11557,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Range",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "collapse": {
          "_": 11558,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "compareBoundaryPoints": {
          "_": 11559,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "comparePoint": {
          "_": 11561,
          "doc": "Returns −1 if the point is before the range, 0 if the point is in the range, and 1 if the point is after the range.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "createContextualFragment": {
          "_": 11562,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DocumentFragment",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteContents": {
          "_": 11563,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "detach": {
          "_": 11564,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "extractContents": {
          "_": 11565,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DocumentFragment",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getBoundingClientRect": {
          "_": 11566,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMRect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getClientRects": {
          "_": 11567,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMRectList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "insertNode": {
          "_": 11568,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "intersectsNode": {
          "_": 11570,
          "doc": "Returns whether range intersects node.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isPointInRange": {
          "_": 11571,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectNode": {
          "_": 11572,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectNodeContents": {
          "_": 11573,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setEnd": {
          "_": 11574,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setEndAfter": {
          "_": 11575,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setEndBefore": {
          "_": 11576,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setStart": {
          "_": 11577,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setStartAfter": {
          "_": 11578,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setStartBefore": {
          "_": 11579,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "surroundContents": {
          "_": 11580,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 11581,
          "doc": "Returns a string representation of an object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "END_TO_END": {
          "_": 11582,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "END_TO_START": {
          "_": 11583,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "START_TO_END": {
          "_": 11584,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "START_TO_START": {
          "_": 11585,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A fragment of a document that can contain nodes and parts of text nodes."
    },
    "ReadableByteStreamController": {
      "indexes": [],
      "props": {
        "byobRequest": {
          "_": 11599,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ReadableStreamBYOBRequest",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "desiredSize": {
          "_": 11600,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 11601,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "enqueue": {
          "_": 11602,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "error": {
          "_": 11603,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ReadableStream": {
      "indexes": [],
      "props": {
        "locked": {
          "_": 11613,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancel": {
          "_": 11614,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "getReader": {
          "_": 11617,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ReadableStreamReader",
            "generics": [
              {
                "ref": "R",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "pipeThrough": {
          "_": 11618,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ReadableStream",
            "generics": [
              {
                "ref": "T",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "pipeTo": {
          "_": 11619,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "tee": {
          "_": 11620,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "tuple": [
              {
                "ref": "ReadableStream",
                "generics": [
                  {
                    "ref": "R",
                    "generics": [],
                    "isFuture": false
                  }
                ],
                "isFuture": false
              },
              {
                "ref": "ReadableStream",
                "generics": [
                  {
                    "ref": "R",
                    "generics": [],
                    "isFuture": false
                  }
                ],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "R",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object."
    },
    "ReadableStreamBYOBReader": {
      "indexes": [],
      "props": {
        "read": {
          "_": 11631,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ReadableStreamReadResult",
            "generics": [
              {
                "ref": "T",
                "generics": [],
                "isFuture": false
              }
            ]
          },
          "isStatic": false
        },
        "releaseLock": {
          "_": 11632,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ReadableStreamBYOBRequest": {
      "indexes": [],
      "props": {
        "view": {
          "_": 11641,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ArrayBufferView",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "respond": {
          "_": 11642,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "respondWithNewView": {
          "_": 11643,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ReadableStreamDefaultController": {
      "indexes": [],
      "props": {
        "desiredSize": {
          "_": 11652,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 11653,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "enqueue": {
          "_": 11654,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "error": {
          "_": 11655,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "R",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "ReadableStreamDefaultReader": {
      "indexes": [],
      "props": {
        "read": {
          "_": 11664,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ReadableStreamReadResult",
            "generics": [
              {
                "ref": "R",
                "generics": [],
                "isFuture": false
              }
            ]
          },
          "isStatic": false
        },
        "releaseLock": {
          "_": 11665,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "R",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "ReadableStreamGenericReader": {
      "indexes": [],
      "props": {
        "closed": {
          "_": 11674,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "undefined"
          },
          "isStatic": false
        },
        "cancel": {
          "_": 11675,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RemotePlaybackEventMap": {
      "indexes": [],
      "props": {
        "\"connect\"": {
          "_": 11679,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"connecting\"": {
          "_": 11680,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"disconnect\"": {
          "_": 11681,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RemotePlayback": {
      "indexes": [],
      "props": {
        "onconnect": {
          "_": 11685,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RemotePlayback",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onconnecting": {
          "_": 11686,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RemotePlayback",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondisconnect": {
          "_": 11687,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "RemotePlayback",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 11688,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RemotePlaybackState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cancelWatchAvailability": {
          "_": 11689,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "prompt": {
          "_": 11690,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "watchAvailability": {
          "_": 11691,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "number"
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 11693,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11695,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Request": {
      "indexes": [],
      "props": {
        "cache": {
          "_": 11706,
          "doc": "Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestCache",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "credentials": {
          "_": 11708,
          "doc": "Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestCredentials",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "destination": {
          "_": 11710,
          "doc": "Returns the kind of resource requested by request, e.g., \"document\" or \"script\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestDestination",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "headers": {
          "_": 11712,
          "doc": "Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the \"Host\" header.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Headers",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "integrity": {
          "_": 11714,
          "doc": "Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "keepalive": {
          "_": 11716,
          "doc": "Returns a boolean indicating whether or not request can outlive the global in which it was created.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "method": {
          "_": 11718,
          "doc": "Returns request's HTTP method, which is \"GET\" by default.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 11720,
          "doc": "Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "redirect": {
          "_": 11722,
          "doc": "Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RequestRedirect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "referrer": {
          "_": 11724,
          "doc": "Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and \"about:client\" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrerPolicy": {
          "_": 11726,
          "doc": "Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReferrerPolicy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "signal": {
          "_": 11728,
          "doc": "Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AbortSignal",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 11730,
          "doc": "Returns the URL of request as a string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "clone": {
          "_": 11731,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Request",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Fetch API interface represents a resource request."
    },
    "ResizeObserver": {
      "indexes": [],
      "props": {
        "disconnect": {
          "_": 11740,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "observe": {
          "_": 11741,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "unobserve": {
          "_": 11742,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ResizeObserverEntry": {
      "indexes": [],
      "props": {
        "borderBoxSize": {
          "_": 11751,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "ResizeObserverSize",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "contentBoxSize": {
          "_": 11752,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "ResizeObserverSize",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "contentRect": {
          "_": 11753,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMRectReadOnly",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "devicePixelContentBoxSize": {
          "_": 11754,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "ResizeObserverSize",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 11755,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ResizeObserverSize": {
      "indexes": [],
      "props": {
        "blockSize": {
          "_": 11764,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "inlineSize": {
          "_": 11765,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Response": {
      "indexes": [],
      "props": {
        "headers": {
          "_": 11775,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Headers",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ok": {
          "_": 11776,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "redirected": {
          "_": 11777,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "status": {
          "_": 11778,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "statusText": {
          "_": 11779,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 11780,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ResponseType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 11781,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "clone": {
          "_": 11782,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Response",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Fetch API interface represents the response to a request."
    },
    "SVGAElement": {
      "indexes": [],
      "props": {
        "rel": {
          "_": 11794,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "relList": {
          "_": 11795,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMTokenList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 11796,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 11798,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11800,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <a> element, as well as methods to manipulate them."
    },
    "SVGAngle": {
      "indexes": [],
      "props": {
        "unitType": {
          "_": 11810,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 11811,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueAsString": {
          "_": 11812,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueInSpecifiedUnits": {
          "_": 11813,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "convertToSpecifiedUnits": {
          "_": 11814,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "newValueSpecifiedUnits": {
          "_": 11815,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_ANGLETYPE_DEG": {
          "_": 11816,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_ANGLETYPE_GRAD": {
          "_": 11817,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_ANGLETYPE_RAD": {
          "_": 11818,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_ANGLETYPE_UNKNOWN": {
          "_": 11819,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_ANGLETYPE_UNSPECIFIED": {
          "_": 11820,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used to represent a value that can be an <angle> or <number> value. An SVGAngle reflected through the animVal attribute is always read only."
    },
    "SVGAnimateElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 11835,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11837,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGAnimateMotionElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 11847,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11849,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGAnimateTransformElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 11859,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 11861,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGAnimatedAngle": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11871,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAngle",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11872,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAngle",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes of basic type <angle> which can be animated."
    },
    "SVGAnimatedBoolean": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11882,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11883,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes of type boolean which can be animated."
    },
    "SVGAnimatedEnumeration": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11893,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11894,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes whose value must be a constant from a particular enumeration and which can be animated."
    },
    "SVGAnimatedInteger": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11904,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11905,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes of basic type <integer> which can be animated."
    },
    "SVGAnimatedLength": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11915,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11916,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes of basic type <length> which can be animated."
    },
    "SVGAnimatedLengthList": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11926,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGLengthList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11927,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGLengthList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes of type SVGLengthList which can be animated."
    },
    "SVGAnimatedNumber": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11937,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11938,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes of basic type <Number> which can be animated."
    },
    "SVGAnimatedNumberList": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11948,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGNumberList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11949,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGNumberList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The SVGAnimatedNumber interface is used for attributes which take a list of numbers and which can be animated."
    },
    "SVGAnimatedPoints": {
      "indexes": [],
      "props": {
        "animatedPoints": {
          "_": 11958,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGPointList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "points": {
          "_": 11959,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGPointList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGAnimatedPreserveAspectRatio": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11964,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGPreserveAspectRatio",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11965,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGPreserveAspectRatio",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes of type SVGPreserveAspectRatio which can be animated."
    },
    "SVGAnimatedRect": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11975,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMRectReadOnly",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11976,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMRect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes of basic SVGRect which can be animated."
    },
    "SVGAnimatedString": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11986,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11987,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The SVGAnimatedString interface represents string attributes which can be animated from each SVG declaration. You need to create SVG attribute before doing anything else, everything should be declared inside this."
    },
    "SVGAnimatedTransformList": {
      "indexes": [],
      "props": {
        "animVal": {
          "_": 11997,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGTransformList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "baseVal": {
          "_": 11998,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGTransformList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used for attributes which take a list of numbers and which can be animated."
    },
    "SVGAnimationElement": {
      "indexes": [],
      "props": {
        "targetElement": {
          "_": 12007,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "SVGElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "beginElement": {
          "_": 12008,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "beginElementAt": {
          "_": 12009,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "endElement": {
          "_": 12010,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "endElementAt": {
          "_": 12011,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getCurrentTime": {
          "_": 12012,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getSimpleDuration": {
          "_": 12013,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getStartTime": {
          "_": 12014,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12016,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12018,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGCircleElement": {
      "indexes": [],
      "props": {
        "cx": {
          "_": 12028,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cy": {
          "_": 12029,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "r": {
          "_": 12030,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12032,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12034,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An interface for the <circle> element. The circle element is defined by the cx and cy attributes that denote the coordinates of the centre of the circle."
    },
    "SVGClipPathElement": {
      "indexes": [],
      "props": {
        "clipPathUnits": {
          "_": 12044,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transform": {
          "_": 12045,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedTransformList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12047,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12049,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <clipPath> elements, as well as methods to manipulate them."
    },
    "SVGComponentTransferFunctionElement": {
      "indexes": [],
      "props": {
        "amplitude": {
          "_": 12059,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "exponent": {
          "_": 12060,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "intercept": {
          "_": 12061,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "offset": {
          "_": 12062,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "slope": {
          "_": 12063,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "tableValues": {
          "_": 12064,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumberList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 12065,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_": 12066,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_": 12067,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_": 12068,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_": 12069,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_": 12070,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_": 12071,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12073,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12075,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A base interface used by the component transfer function interfaces."
    },
    "SVGDefsElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12092,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12094,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <defs> element."
    },
    "SVGDescElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12105,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12107,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <desc> element."
    },
    "SVGElementEventMap": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGElement": {
      "indexes": [],
      "props": {
        "className": {
          "_": 12121,
          "doc": "Returns the value of element's class content attribute. Can be set to change it.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerSVGElement": {
          "_": 12122,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "SVGSVGElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "viewportElement": {
          "_": 12123,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "SVGElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12125,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12127,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the SVGElement interface."
    },
    "SVGEllipseElement": {
      "indexes": [],
      "props": {
        "cx": {
          "_": 12137,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cy": {
          "_": 12138,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rx": {
          "_": 12139,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ry": {
          "_": 12140,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12142,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12144,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <ellipse> elements."
    },
    "SVGFEBlendElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12154,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "in2": {
          "_": 12155,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 12156,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_COLOR": {
          "_": 12157,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_COLOR_BURN": {
          "_": 12158,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_COLOR_DODGE": {
          "_": 12159,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_DARKEN": {
          "_": 12160,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_DIFFERENCE": {
          "_": 12161,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_EXCLUSION": {
          "_": 12162,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_HARD_LIGHT": {
          "_": 12163,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_HUE": {
          "_": 12164,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_LIGHTEN": {
          "_": 12165,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_LUMINOSITY": {
          "_": 12166,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_MULTIPLY": {
          "_": 12167,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_NORMAL": {
          "_": 12168,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_OVERLAY": {
          "_": 12169,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_SATURATION": {
          "_": 12170,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_SCREEN": {
          "_": 12171,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_SOFT_LIGHT": {
          "_": 12172,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FEBLEND_MODE_UNKNOWN": {
          "_": 12173,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12175,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12177,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feBlend> element."
    },
    "SVGFEColorMatrixElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12204,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 12205,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "values": {
          "_": 12206,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumberList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOLORMATRIX_TYPE_HUEROTATE": {
          "_": 12207,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA": {
          "_": 12208,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOLORMATRIX_TYPE_MATRIX": {
          "_": 12209,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOLORMATRIX_TYPE_SATURATE": {
          "_": 12210,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOLORMATRIX_TYPE_UNKNOWN": {
          "_": 12211,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12213,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12215,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feColorMatrix> element."
    },
    "SVGFEComponentTransferElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12230,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12232,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12234,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feComponentTransfer> element."
    },
    "SVGFECompositeElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12244,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "in2": {
          "_": 12245,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "k1": {
          "_": 12246,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "k2": {
          "_": 12247,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "k3": {
          "_": 12248,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "k4": {
          "_": 12249,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "operator": {
          "_": 12250,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC": {
          "_": 12251,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPOSITE_OPERATOR_ATOP": {
          "_": 12252,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPOSITE_OPERATOR_IN": {
          "_": 12253,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPOSITE_OPERATOR_OUT": {
          "_": 12254,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPOSITE_OPERATOR_OVER": {
          "_": 12255,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPOSITE_OPERATOR_UNKNOWN": {
          "_": 12256,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_FECOMPOSITE_OPERATOR_XOR": {
          "_": 12257,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12259,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12261,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feComposite> element."
    },
    "SVGFEConvolveMatrixElement": {
      "indexes": [],
      "props": {
        "bias": {
          "_": 12278,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "divisor": {
          "_": 12279,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "edgeMode": {
          "_": 12280,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "in1": {
          "_": 12281,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "kernelMatrix": {
          "_": 12282,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumberList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "kernelUnitLengthX": {
          "_": 12283,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "kernelUnitLengthY": {
          "_": 12284,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "orderX": {
          "_": 12285,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedInteger",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "orderY": {
          "_": 12286,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedInteger",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "preserveAlpha": {
          "_": 12287,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedBoolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "targetX": {
          "_": 12288,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedInteger",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "targetY": {
          "_": 12289,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedInteger",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_EDGEMODE_DUPLICATE": {
          "_": 12290,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_EDGEMODE_NONE": {
          "_": 12291,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_EDGEMODE_UNKNOWN": {
          "_": 12292,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_EDGEMODE_WRAP": {
          "_": 12293,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12295,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12297,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feConvolveMatrix> element."
    },
    "SVGFEDiffuseLightingElement": {
      "indexes": [],
      "props": {
        "diffuseConstant": {
          "_": 12311,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "in1": {
          "_": 12312,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "kernelUnitLengthX": {
          "_": 12313,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "kernelUnitLengthY": {
          "_": 12314,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "surfaceScale": {
          "_": 12315,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12317,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12319,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feDiffuseLighting> element."
    },
    "SVGFEDisplacementMapElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12329,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "in2": {
          "_": 12330,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scale": {
          "_": 12331,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "xChannelSelector": {
          "_": 12332,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "yChannelSelector": {
          "_": 12333,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_CHANNEL_A": {
          "_": 12334,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_CHANNEL_B": {
          "_": 12335,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_CHANNEL_G": {
          "_": 12336,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_CHANNEL_R": {
          "_": 12337,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_CHANNEL_UNKNOWN": {
          "_": 12338,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12340,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12342,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feDisplacementMap> element."
    },
    "SVGFEDistantLightElement": {
      "indexes": [],
      "props": {
        "azimuth": {
          "_": 12357,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "elevation": {
          "_": 12358,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12360,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12362,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feDistantLight> element."
    },
    "SVGFEDropShadowElement": {
      "indexes": [],
      "props": {
        "dx": {
          "_": 12371,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "dy": {
          "_": 12372,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "in1": {
          "_": 12373,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "stdDeviationX": {
          "_": 12374,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "stdDeviationY": {
          "_": 12375,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setStdDeviation": {
          "_": 12376,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12378,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12380,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGFEFloodElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12391,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12393,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feFlood> element."
    },
    "SVGFEFuncAElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12404,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12406,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feFuncA> element."
    },
    "SVGFEFuncBElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12417,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12419,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feFuncB> element."
    },
    "SVGFEFuncGElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12430,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12432,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feFuncG> element."
    },
    "SVGFEFuncRElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12443,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12445,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feFuncR> element."
    },
    "SVGFEGaussianBlurElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12455,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "stdDeviationX": {
          "_": 12456,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "stdDeviationY": {
          "_": 12457,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setStdDeviation": {
          "_": 12458,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12460,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12462,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feGaussianBlur> element."
    },
    "SVGFEImageElement": {
      "indexes": [],
      "props": {
        "preserveAspectRatio": {
          "_": 12472,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedPreserveAspectRatio",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12474,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12476,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feImage> element."
    },
    "SVGFEMergeElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12487,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12489,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feMerge> element."
    },
    "SVGFEMergeNodeElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12499,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12501,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12503,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feMergeNode> element."
    },
    "SVGFEMorphologyElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "operator": {
          "_": 12514,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "radiusX": {
          "_": 12515,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "radiusY": {
          "_": 12516,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MORPHOLOGY_OPERATOR_DILATE": {
          "_": 12517,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MORPHOLOGY_OPERATOR_ERODE": {
          "_": 12518,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MORPHOLOGY_OPERATOR_UNKNOWN": {
          "_": 12519,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12521,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12523,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feMorphology> element."
    },
    "SVGFEOffsetElement": {
      "indexes": [],
      "props": {
        "dx": {
          "_": 12536,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "dy": {
          "_": 12537,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "in1": {
          "_": 12538,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12540,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12542,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feOffset> element."
    },
    "SVGFEPointLightElement": {
      "indexes": [],
      "props": {
        "x": {
          "_": 12552,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 12553,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "z": {
          "_": 12554,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12556,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12558,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <fePointLight> element."
    },
    "SVGFESpecularLightingElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12568,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "kernelUnitLengthX": {
          "_": 12569,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "kernelUnitLengthY": {
          "_": 12570,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "specularConstant": {
          "_": 12571,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "specularExponent": {
          "_": 12572,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "surfaceScale": {
          "_": 12573,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12575,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12577,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feSpecularLighting> element."
    },
    "SVGFESpotLightElement": {
      "indexes": [],
      "props": {
        "limitingConeAngle": {
          "_": 12587,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pointsAtX": {
          "_": 12588,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pointsAtY": {
          "_": 12589,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pointsAtZ": {
          "_": 12590,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "specularExponent": {
          "_": 12591,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 12592,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 12593,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "z": {
          "_": 12594,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12596,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12598,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feSpotLight> element."
    },
    "SVGFETileElement": {
      "indexes": [],
      "props": {
        "in1": {
          "_": 12608,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12610,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12612,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feTile> element."
    },
    "SVGFETurbulenceElement": {
      "indexes": [],
      "props": {
        "baseFrequencyX": {
          "_": 12622,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "baseFrequencyY": {
          "_": 12623,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "numOctaves": {
          "_": 12624,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedInteger",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "seed": {
          "_": 12625,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "stitchTiles": {
          "_": 12626,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 12627,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_STITCHTYPE_NOSTITCH": {
          "_": 12628,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_STITCHTYPE_STITCH": {
          "_": 12629,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_STITCHTYPE_UNKNOWN": {
          "_": 12630,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TURBULENCE_TYPE_FRACTALNOISE": {
          "_": 12631,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TURBULENCE_TYPE_TURBULENCE": {
          "_": 12632,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TURBULENCE_TYPE_UNKNOWN": {
          "_": 12633,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12635,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12637,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <feTurbulence> element."
    },
    "SVGFilterElement": {
      "indexes": [],
      "props": {
        "filterUnits": {
          "_": 12653,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 12654,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "primitiveUnits": {
          "_": 12655,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 12656,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 12657,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 12658,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12660,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12662,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <filter> elements, as well as methods to manipulate them."
    },
    "SVGFilterPrimitiveStandardAttributes": {
      "indexes": [],
      "props": {
        "height": {
          "_": 12671,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "result": {
          "_": 12672,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 12673,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 12674,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 12675,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGFitToViewBox": {
      "indexes": [],
      "props": {
        "preserveAspectRatio": {
          "_": 12679,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedPreserveAspectRatio",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "viewBox": {
          "_": 12680,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedRect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGForeignObjectElement": {
      "indexes": [],
      "props": {
        "height": {
          "_": 12685,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 12686,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 12687,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 12688,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12690,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12692,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <foreignObject> elements, as well as methods to manipulate them."
    },
    "SVGGElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12703,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12705,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <g> element."
    },
    "SVGGeometryElement": {
      "indexes": [],
      "props": {
        "pathLength": {
          "_": 12714,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getPointAtLength": {
          "_": 12715,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getTotalLength": {
          "_": 12716,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "isPointInFill": {
          "_": 12717,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isPointInStroke": {
          "_": 12718,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12720,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12722,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGGradientElement": {
      "indexes": [],
      "props": {
        "gradientTransform": {
          "_": 12732,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedTransformList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "gradientUnits": {
          "_": 12733,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "spreadMethod": {
          "_": 12734,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_SPREADMETHOD_PAD": {
          "_": 12735,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_SPREADMETHOD_REFLECT": {
          "_": 12736,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_SPREADMETHOD_REPEAT": {
          "_": 12737,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_SPREADMETHOD_UNKNOWN": {
          "_": 12738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12740,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12742,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The SVGGradient interface is a base interface used by SVGLinearGradientElement and SVGRadialGradientElement."
    },
    "SVGGraphicsElement": {
      "indexes": [],
      "props": {
        "transform": {
          "_": 12756,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedTransformList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getBBox": {
          "_": 12757,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMRect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getCTM": {
          "_": 12758,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getScreenCTM": {
          "_": 12759,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12761,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12763,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "SVG elements whose primary purpose is to directly render graphics into a group."
    },
    "SVGImageElement": {
      "indexes": [],
      "props": {
        "height": {
          "_": 12773,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "preserveAspectRatio": {
          "_": 12774,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedPreserveAspectRatio",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 12775,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 12776,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 12777,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12779,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12781,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <image> element."
    },
    "SVGLength": {
      "indexes": [],
      "props": {
        "unitType": {
          "_": 12791,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 12792,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueAsString": {
          "_": 12793,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueInSpecifiedUnits": {
          "_": 12794,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "convertToSpecifiedUnits": {
          "_": 12795,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "newValueSpecifiedUnits": {
          "_": 12796,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_CM": {
          "_": 12797,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_EMS": {
          "_": 12798,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_EXS": {
          "_": 12799,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_IN": {
          "_": 12800,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_MM": {
          "_": 12801,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_NUMBER": {
          "_": 12802,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_PC": {
          "_": 12803,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_PERCENTAGE": {
          "_": 12804,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_PT": {
          "_": 12805,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_PX": {
          "_": 12806,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_LENGTHTYPE_UNKNOWN": {
          "_": 12807,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Correspond to the <length> basic data type."
    },
    "SVGLengthList": {
      "indexes": [
        {
          "_": 12837,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 12828,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfItems": {
          "_": 12829,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendItem": {
          "_": 12830,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 12831,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getItem": {
          "_": 12832,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initialize": {
          "_": 12833,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "insertItemBefore": {
          "_": 12834,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "removeItem": {
          "_": 12835,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceItem": {
          "_": 12836,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The SVGLengthList defines a list of SVGLength objects."
    },
    "SVGLineElement": {
      "indexes": [],
      "props": {
        "x1": {
          "_": 12847,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x2": {
          "_": 12848,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y1": {
          "_": 12849,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y2": {
          "_": 12850,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12852,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12854,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <line> elements, as well as methods to manipulate them."
    },
    "SVGLinearGradientElement": {
      "indexes": [],
      "props": {
        "x1": {
          "_": 12864,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x2": {
          "_": 12865,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y1": {
          "_": 12866,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y2": {
          "_": 12867,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12869,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12871,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <linearGradient> element."
    },
    "SVGMPathElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12881,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12883,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGMarkerElement": {
      "indexes": [],
      "props": {
        "markerHeight": {
          "_": 12892,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "markerUnits": {
          "_": 12893,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "markerWidth": {
          "_": 12894,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "orientAngle": {
          "_": 12895,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedAngle",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "orientType": {
          "_": 12896,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "refX": {
          "_": 12897,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "refY": {
          "_": 12898,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "setOrientToAngle": {
          "_": 12899,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setOrientToAuto": {
          "_": 12900,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MARKERUNITS_STROKEWIDTH": {
          "_": 12901,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MARKERUNITS_UNKNOWN": {
          "_": 12902,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MARKERUNITS_USERSPACEONUSE": {
          "_": 12903,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MARKER_ORIENT_ANGLE": {
          "_": 12904,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MARKER_ORIENT_AUTO": {
          "_": 12905,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MARKER_ORIENT_UNKNOWN": {
          "_": 12906,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12908,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12910,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGMaskElement": {
      "indexes": [],
      "props": {
        "height": {
          "_": 12926,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "maskContentUnits": {
          "_": 12927,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "maskUnits": {
          "_": 12928,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 12929,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 12930,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 12931,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 12933,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12935,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <mask> elements, as well as methods to manipulate them."
    },
    "SVGMetadataElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12946,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12948,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <metadata> element."
    },
    "SVGNumber": {
      "indexes": [],
      "props": {
        "value": {
          "_": 12958,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <number> basic data type."
    },
    "SVGNumberList": {
      "indexes": [
        {
          "_": 12977,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "SVGNumber",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 12968,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfItems": {
          "_": 12969,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendItem": {
          "_": 12970,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 12971,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getItem": {
          "_": 12972,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initialize": {
          "_": 12973,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "insertItemBefore": {
          "_": 12974,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "removeItem": {
          "_": 12975,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceItem": {
          "_": 12976,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The SVGNumberList defines a list of SVGNumber objects."
    },
    "SVGPathElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 12988,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 12990,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <path> element."
    },
    "SVGPatternElement": {
      "indexes": [],
      "props": {
        "height": {
          "_": 13000,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "patternContentUnits": {
          "_": 13001,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "patternTransform": {
          "_": 13002,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedTransformList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "patternUnits": {
          "_": 13003,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 13004,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 13005,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 13006,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13008,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13010,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <pattern> element."
    },
    "SVGPointList": {
      "indexes": [
        {
          "_": 13028,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 13019,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfItems": {
          "_": 13020,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendItem": {
          "_": 13021,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 13022,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getItem": {
          "_": 13023,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initialize": {
          "_": 13024,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "insertItemBefore": {
          "_": 13025,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "removeItem": {
          "_": 13026,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceItem": {
          "_": 13027,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGPolygonElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 13039,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13041,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <polygon> elements, as well as methods to manipulate them."
    },
    "SVGPolylineElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 13052,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13054,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <polyline> elements, as well as methods to manipulate them."
    },
    "SVGPreserveAspectRatio": {
      "indexes": [],
      "props": {
        "align": {
          "_": 13064,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "meetOrSlice": {
          "_": 13065,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MEETORSLICE_MEET": {
          "_": 13066,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MEETORSLICE_SLICE": {
          "_": 13067,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_MEETORSLICE_UNKNOWN": {
          "_": 13068,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_NONE": {
          "_": 13069,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_UNKNOWN": {
          "_": 13070,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMAX": {
          "_": 13071,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMID": {
          "_": 13072,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMIN": {
          "_": 13073,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMAX": {
          "_": 13074,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMID": {
          "_": 13075,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMIN": {
          "_": 13076,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMAX": {
          "_": 13077,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMID": {
          "_": 13078,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMIN": {
          "_": 13079,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the preserveAspectRatio attribute, which is available for some of SVG's elements."
    },
    "SVGRadialGradientElement": {
      "indexes": [],
      "props": {
        "cx": {
          "_": 13103,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cy": {
          "_": 13104,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "fr": {
          "_": 13105,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "fx": {
          "_": 13106,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "fy": {
          "_": 13107,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "r": {
          "_": 13108,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13110,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13112,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <RadialGradient> element."
    },
    "SVGRectElement": {
      "indexes": [],
      "props": {
        "height": {
          "_": 13122,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rx": {
          "_": 13123,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ry": {
          "_": 13124,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 13125,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 13126,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 13127,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13129,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13131,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <rect> elements, as well as methods to manipulate them."
    },
    "SVGSVGElementEventMap": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGSVGElement": {
      "indexes": [],
      "props": {
        "currentScale": {
          "_": 13144,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "currentTranslate": {
          "_": 13145,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMPointReadOnly",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 13146,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 13147,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 13148,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 13149,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "animationsPaused": {
          "_": 13150,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkEnclosure": {
          "_": 13151,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkIntersection": {
          "_": 13152,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "createSVGAngle": {
          "_": 13153,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGAngle",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createSVGLength": {
          "_": 13154,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createSVGMatrix": {
          "_": 13155,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createSVGNumber": {
          "_": 13156,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createSVGPoint": {
          "_": 13157,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createSVGRect": {
          "_": 13158,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMRect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createSVGTransform": {
          "_": 13159,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createSVGTransformFromMatrix": {
          "_": 13160,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "deselectAll": {
          "_": 13161,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "forceRedraw": {
          "_": 13163,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getCurrentTime": {
          "_": 13164,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getElementById": {
          "_": 13165,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getEnclosureList": {
          "_": 13166,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "core": "any",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getIntersectionList": {
          "_": 13167,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "NodeListOf",
            "generics": [
              {
                "core": "any",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "pauseAnimations": {
          "_": 13168,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setCurrentTime": {
          "_": 13169,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "suspendRedraw": {
          "_": 13171,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "unpauseAnimations": {
          "_": 13172,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "unsuspendRedraw": {
          "_": 13174,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "unsuspendRedrawAll": {
          "_": 13176,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13178,
          "doc": "\n\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13180,
          "doc": "\n\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <svg> elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices."
    },
    "SVGScriptElement": {
      "indexes": [],
      "props": {
        "type": {
          "_": 13190,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13192,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13194,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the SVG <script> element."
    },
    "SVGSetElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 13204,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13206,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGStopElement": {
      "indexes": [],
      "props": {
        "offset": {
          "_": 13216,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumber",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13218,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13220,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <stop> element."
    },
    "SVGStringList": {
      "indexes": [
        {
          "_": 13239,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "string",
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 13230,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfItems": {
          "_": 13231,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendItem": {
          "_": 13232,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 13233,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getItem": {
          "_": 13234,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "initialize": {
          "_": 13235,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "insertItemBefore": {
          "_": 13236,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeItem": {
          "_": 13237,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceItem": {
          "_": 13238,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The SVGStringList defines a list of DOMString objects."
    },
    "SVGStyleElement": {
      "indexes": [],
      "props": {
        "disabled": {
          "_": 13249,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 13250,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "title": {
          "_": 13251,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 13253,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13255,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13257,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the SVG <style> element."
    },
    "SVGSwitchElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 13268,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13270,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <switch> element."
    },
    "SVGSymbolElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 13281,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13283,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <symbol> element."
    },
    "SVGTSpanElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 13294,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13296,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A <tspan> element."
    },
    "SVGTests": {
      "indexes": [],
      "props": {
        "requiredExtensions": {
          "_": 13305,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGStringList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "systemLanguage": {
          "_": 13306,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGStringList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGTextContentElement": {
      "indexes": [],
      "props": {
        "lengthAdjust": {
          "_": 13311,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "textLength": {
          "_": 13312,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getCharNumAtPosition": {
          "_": 13313,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getComputedTextLength": {
          "_": 13314,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getEndPositionOfChar": {
          "_": 13315,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getExtentOfChar": {
          "_": 13316,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMRect",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getNumberOfChars": {
          "_": 13317,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getRotationOfChar": {
          "_": 13318,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getStartPositionOfChar": {
          "_": 13319,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DOMPoint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getSubStringLength": {
          "_": 13320,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectSubString": {
          "_": 13322,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "LENGTHADJUST_SPACING": {
          "_": 13323,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_": 13324,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LENGTHADJUST_UNKNOWN": {
          "_": 13325,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13327,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13329,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Implemented by elements that support rendering child text content. It is inherited by various text-related interfaces, such as SVGTextElement, SVGTSpanElement, SVGTRefElement, SVGAltGlyphElement and SVGTextPathElement."
    },
    "SVGTextElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 13343,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13345,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <text> elements."
    },
    "SVGTextPathElement": {
      "indexes": [],
      "props": {
        "method": {
          "_": 13355,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "spacing": {
          "_": 13356,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedEnumeration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "startOffset": {
          "_": 13357,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTPATH_METHODTYPE_ALIGN": {
          "_": 13358,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTPATH_METHODTYPE_STRETCH": {
          "_": 13359,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTPATH_METHODTYPE_UNKNOWN": {
          "_": 13360,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTPATH_SPACINGTYPE_AUTO": {
          "_": 13361,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTPATH_SPACINGTYPE_EXACT": {
          "_": 13362,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTPATH_SPACINGTYPE_UNKNOWN": {
          "_": 13363,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13365,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13367,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <textPath> element."
    },
    "SVGTextPositioningElement": {
      "indexes": [],
      "props": {
        "dx": {
          "_": 13383,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLengthList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "dy": {
          "_": 13384,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLengthList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rotate": {
          "_": 13385,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedNumberList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 13386,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLengthList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 13387,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLengthList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13389,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13391,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Implemented by elements that support attributes that position individual text glyphs. It is inherited by SVGTextElement, SVGTSpanElement, SVGTRefElement and SVGAltGlyphElement."
    },
    "SVGTitleElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 13402,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13404,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <title> element."
    },
    "SVGTransform": {
      "indexes": [],
      "props": {
        "angle": {
          "_": 13414,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "matrix": {
          "_": 13415,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMMatrix",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 13416,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "setMatrix": {
          "_": 13417,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setRotate": {
          "_": 13418,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setScale": {
          "_": 13419,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setSkewX": {
          "_": 13420,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setSkewY": {
          "_": 13421,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setTranslate": {
          "_": 13422,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TRANSFORM_MATRIX": {
          "_": 13423,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TRANSFORM_ROTATE": {
          "_": 13424,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TRANSFORM_SCALE": {
          "_": 13425,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TRANSFORM_SKEWX": {
          "_": 13426,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TRANSFORM_SKEWY": {
          "_": 13427,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TRANSFORM_TRANSLATE": {
          "_": 13428,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_TRANSFORM_UNKNOWN": {
          "_": 13429,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "SVGTransform is the interface for one of the component transformations within an SVGTransformList; thus, an SVGTransform object corresponds to a single component (e.g., scale(…) or matrix(…)) within a transform attribute."
    },
    "SVGTransformList": {
      "indexes": [
        {
          "_": 13457,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 13446,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberOfItems": {
          "_": 13447,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendItem": {
          "_": 13448,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 13449,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "consolidate": {
          "_": 13450,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createSVGTransformFromMatrix": {
          "_": 13451,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getItem": {
          "_": 13452,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "initialize": {
          "_": 13453,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "insertItemBefore": {
          "_": 13454,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "removeItem": {
          "_": 13455,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "replaceItem": {
          "_": 13456,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SVGTransform",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The SVGTransformList defines a list of SVGTransform objects."
    },
    "SVGURIReference": {
      "indexes": [],
      "props": {
        "href": {
          "_": 13466,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedString",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGUnitTypes": {
      "indexes": [],
      "props": {
        "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX": {
          "_": 13471,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_UNIT_TYPE_UNKNOWN": {
          "_": 13472,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SVG_UNIT_TYPE_USERSPACEONUSE": {
          "_": 13473,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A commonly used set of constants used for reflecting gradientUnits, patternContentUnits and other similar attributes."
    },
    "SVGUseElement": {
      "indexes": [],
      "props": {
        "height": {
          "_": 13486,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 13487,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "x": {
          "_": 13488,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "y": {
          "_": 13489,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimatedLength",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13491,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13493,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Corresponds to the <use> element."
    },
    "SVGViewElement": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 13504,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13506,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides access to the properties of <view> elements, as well as methods to manipulate them."
    },
    "Screen": {
      "indexes": [],
      "props": {
        "availHeight": {
          "_": 13516,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "availWidth": {
          "_": 13517,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "colorDepth": {
          "_": 13518,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "height": {
          "_": 13519,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "orientation": {
          "_": 13520,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ScreenOrientation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pixelDepth": {
          "_": 13521,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 13522,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A screen, usually the one on which the current window is being rendered, and is obtained using window.screen."
    },
    "ScreenOrientationEventMap": {
      "indexes": [],
      "props": {
        "\"change\"": {
          "_": 13531,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ScreenOrientation": {
      "indexes": [],
      "props": {
        "angle": {
          "_": 13535,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onchange": {
          "_": 13536,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "ScreenOrientation",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 13537,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "OrientationType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lock": {
          "_": 13538,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "unlock": {
          "_": 13539,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13541,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13543,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ScriptProcessorNodeEventMap": {
      "indexes": [],
      "props": {
        "\"audioprocess\"": {
          "_": 13552,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioProcessingEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ScriptProcessorNode": {
      "indexes": [],
      "props": {
        "bufferSize": {
          "_": 13561,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onaudioprocess": {
          "_": 13563,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "ScriptProcessorNode",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "AudioProcessingEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13565,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13567,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Allows the generation, processing, or analyzing of audio using JavaScript."
    },
    "SecurityPolicyViolationEvent": {
      "indexes": [],
      "props": {
        "blockedURI": {
          "_": 13578,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "columnNumber": {
          "_": 13579,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "disposition": {
          "_": 13580,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SecurityPolicyViolationEventDisposition",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "documentURI": {
          "_": 13581,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "effectiveDirective": {
          "_": 13582,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lineNumber": {
          "_": 13583,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "originalPolicy": {
          "_": 13584,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "referrer": {
          "_": 13585,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "sample": {
          "_": 13586,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "sourceFile": {
          "_": 13587,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "statusCode": {
          "_": 13588,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "violatedDirective": {
          "_": 13589,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Inherits from Event, and represents the event object of an event sent on a document or worker when its content security policy is violated."
    },
    "Selection": {
      "indexes": [],
      "props": {
        "anchorNode": {
          "_": 13599,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "anchorOffset": {
          "_": 13600,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "focusNode": {
          "_": 13601,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "focusOffset": {
          "_": 13602,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "isCollapsed": {
          "_": 13603,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "rangeCount": {
          "_": 13604,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 13605,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "addRange": {
          "_": 13606,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "collapse": {
          "_": 13607,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "collapseToEnd": {
          "_": 13608,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "collapseToStart": {
          "_": 13609,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "containsNode": {
          "_": 13610,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteFromDocument": {
          "_": 13611,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "empty": {
          "_": 13612,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "extend": {
          "_": 13613,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getRangeAt": {
          "_": 13614,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Range",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "modify": {
          "_": 13615,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeAllRanges": {
          "_": 13616,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeRange": {
          "_": 13617,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "selectAllChildren": {
          "_": 13618,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setBaseAndExtent": {
          "_": 13619,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setPosition": {
          "_": 13620,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 13621,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A Selection object represents the range of text selected by the user or the current position of the caret. To obtain a Selection object for examination or modification, call Window.getSelection()."
    },
    "ServiceWorkerEventMap": {
      "indexes": [],
      "props": {
        "\"statechange\"": {
          "_": 13631,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ServiceWorker": {
      "indexes": [],
      "props": {
        "onstatechange": {
          "_": 13639,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "ServiceWorker",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "scriptURL": {
          "_": 13640,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "state": {
          "_": 13641,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ServiceWorkerState",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "postMessage": {
          "_": 13643,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13645,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13647,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This ServiceWorker API interface provides a reference to a service worker. Multiple browsing contexts (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object.\nAvailable only in secure contexts."
    },
    "ServiceWorkerContainerEventMap": {
      "indexes": [],
      "props": {
        "\"controllerchange\"": {
          "_": 13656,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"message\"": {
          "_": 13657,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"messageerror\"": {
          "_": 13658,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ServiceWorkerContainer": {
      "indexes": [],
      "props": {
        "controller": {
          "_": 13666,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ServiceWorker",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncontrollerchange": {
          "_": 13667,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "ServiceWorkerContainer",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessage": {
          "_": 13668,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "ServiceWorkerContainer",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessageerror": {
          "_": 13669,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "ServiceWorkerContainer",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ready": {
          "_": 13670,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ServiceWorkerRegistration",
            "generics": []
          },
          "isStatic": false
        },
        "getRegistration": {
          "_": 13671,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ServiceWorkerRegistration",
            "generics": []
          },
          "isStatic": false
        },
        "getRegistrations": {
          "_": 13672,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ReadonlyArray",
            "generics": [
              {
                "ref": "ServiceWorkerRegistration",
                "generics": [],
                "isFuture": false
              }
            ]
          },
          "isStatic": false
        },
        "register": {
          "_": 13673,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ServiceWorkerRegistration",
            "generics": []
          },
          "isStatic": false
        },
        "startMessages": {
          "_": 13674,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13676,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13678,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The ServiceWorkerContainer interface of the ServiceWorker API provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.\nAvailable only in secure contexts."
    },
    "ServiceWorkerRegistrationEventMap": {
      "indexes": [],
      "props": {
        "\"updatefound\"": {
          "_": 13687,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ServiceWorkerRegistration": {
      "indexes": [],
      "props": {
        "active": {
          "_": 13695,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ServiceWorker",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "installing": {
          "_": 13696,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ServiceWorker",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "navigationPreload": {
          "_": 13697,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "NavigationPreloadManager",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onupdatefound": {
          "_": 13698,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "ServiceWorkerRegistration",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "pushManager": {
          "_": 13699,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PushManager",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "scope": {
          "_": 13700,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "updateViaCache": {
          "_": 13701,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ServiceWorkerUpdateViaCache",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "waiting": {
          "_": 13702,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "ServiceWorker",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getNotifications": {
          "_": 13703,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "array": {
              "ref": "Notification",
              "generics": [],
              "isFuture": false
            }
          },
          "isStatic": false
        },
        "showNotification": {
          "_": 13704,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "unregister": {
          "_": 13705,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        },
        "update": {
          "_": 13706,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13708,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13710,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This ServiceWorker API interface represents the service worker registration. You register a service worker to control one or more pages that share the same origin.\nAvailable only in secure contexts."
    },
    "ShadowRootEventMap": {
      "indexes": [],
      "props": {
        "\"slotchange\"": {
          "_": 13719,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ShadowRoot": {
      "indexes": [],
      "props": {
        "delegatesFocus": {
          "_": 13723,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "host": {
          "_": 13724,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 13725,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ShadowRootMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onslotchange": {
          "_": 13726,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "ShadowRoot",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "slotAssignment": {
          "_": 13727,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SlotAssignmentMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13730,
          "doc": "Throws a \"NotSupportedError\" DOMException if context object is a shadow root.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13732,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SharedWorker": {
      "indexes": [],
      "props": {
        "port": {
          "_": 13742,
          "doc": "Returns sharedWorker's MessagePort object which can be used to communicate with the global environment.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessagePort",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13744,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13746,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Slottable": {
      "indexes": [],
      "props": {
        "assignedSlot": {
          "_": 13755,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLSlotElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SourceBufferEventMap": {
      "indexes": [],
      "props": {
        "\"abort\"": {
          "_": 13759,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 13760,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"update\"": {
          "_": 13761,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"updateend\"": {
          "_": 13762,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"updatestart\"": {
          "_": 13763,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SourceBuffer": {
      "indexes": [],
      "props": {
        "appendWindowEnd": {
          "_": 13768,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendWindowStart": {
          "_": 13769,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffered": {
          "_": 13770,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TimeRanges",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 13771,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AppendMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "onabort": {
          "_": 13772,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SourceBuffer",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 13773,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SourceBuffer",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onupdate": {
          "_": 13774,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SourceBuffer",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onupdateend": {
          "_": 13775,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SourceBuffer",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onupdatestart": {
          "_": 13776,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SourceBuffer",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "timestampOffset": {
          "_": 13777,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "updating": {
          "_": 13778,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "abort": {
          "_": 13779,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "appendBuffer": {
          "_": 13780,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "changeType": {
          "_": 13781,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "remove": {
          "_": 13782,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13784,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13786,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A chunk of media to be passed into an HTMLMediaElement and played, via a MediaSource object. This can be made up of one or several media segments."
    },
    "SourceBufferListEventMap": {
      "indexes": [],
      "props": {
        "\"addsourcebuffer\"": {
          "_": 13795,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"removesourcebuffer\"": {
          "_": 13796,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SourceBufferList": {
      "indexes": [
        {
          "_": 13808,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "SourceBuffer",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 13801,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onaddsourcebuffer": {
          "_": 13802,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SourceBufferList",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onremovesourcebuffer": {
          "_": 13803,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SourceBufferList",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13805,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13807,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A simple container list for multiple SourceBuffer objects."
    },
    "SpeechRecognitionAlternative": {
      "indexes": [],
      "props": {
        "confidence": {
          "_": 13817,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "transcript": {
          "_": 13818,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SpeechRecognitionResult": {
      "indexes": [
        {
          "_": 13830,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "SpeechRecognitionAlternative",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "isFinal": {
          "_": 13827,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 13828,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 13829,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SpeechRecognitionAlternative",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SpeechRecognitionResultList": {
      "indexes": [
        {
          "_": 13841,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "SpeechRecognitionResult",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 13839,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 13840,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SpeechRecognitionResult",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SpeechSynthesisEventMap": {
      "indexes": [],
      "props": {
        "\"voiceschanged\"": {
          "_": 13850,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SpeechSynthesis": {
      "indexes": [],
      "props": {
        "onvoiceschanged": {
          "_": 13855,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SpeechSynthesis",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "paused": {
          "_": 13856,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "pending": {
          "_": 13857,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "speaking": {
          "_": 13858,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancel": {
          "_": 13859,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getVoices": {
          "_": 13860,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "SpeechSynthesisVoice",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "pause": {
          "_": 13861,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "resume": {
          "_": 13862,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "speak": {
          "_": 13863,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13865,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13867,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Web Speech API interface is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides."
    },
    "SpeechSynthesisErrorEvent": {
      "indexes": [],
      "props": {
        "error": {
          "_": 13876,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisErrorCode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SpeechSynthesisEvent": {
      "indexes": [],
      "props": {
        "charIndex": {
          "_": 13886,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "charLength": {
          "_": 13887,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "elapsedTime": {
          "_": 13888,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 13889,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "utterance": {
          "_": 13890,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisUtterance",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Web Speech API interface contains information about the current state of SpeechSynthesisUtterance objects that have been processed in the speech service."
    },
    "SpeechSynthesisUtteranceEventMap": {
      "indexes": [],
      "props": {
        "\"boundary\"": {
          "_": 13899,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"end\"": {
          "_": 13900,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 13901,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisErrorEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mark\"": {
          "_": 13902,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pause\"": {
          "_": 13903,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"resume\"": {
          "_": 13904,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"start\"": {
          "_": 13905,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesisEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SpeechSynthesisUtterance": {
      "indexes": [],
      "props": {
        "lang": {
          "_": 13910,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onboundary": {
          "_": 13911,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SpeechSynthesisUtterance",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "SpeechSynthesisEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onend": {
          "_": 13912,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SpeechSynthesisUtterance",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "SpeechSynthesisEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 13913,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SpeechSynthesisUtterance",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "SpeechSynthesisErrorEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmark": {
          "_": 13914,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SpeechSynthesisUtterance",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "SpeechSynthesisEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpause": {
          "_": 13915,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SpeechSynthesisUtterance",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "SpeechSynthesisEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onresume": {
          "_": 13916,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SpeechSynthesisUtterance",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "SpeechSynthesisEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onstart": {
          "_": 13917,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "SpeechSynthesisUtterance",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "SpeechSynthesisEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "pitch": {
          "_": 13918,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "rate": {
          "_": 13919,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "text": {
          "_": 13920,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "voice": {
          "_": 13921,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "SpeechSynthesisVoice",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "volume": {
          "_": 13922,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 13924,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 13926,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Web Speech API interface represents a speech request. It contains the content the speech service should read and information about how to read it (e.g. language, pitch and volume.)"
    },
    "SpeechSynthesisVoice": {
      "indexes": [],
      "props": {
        "default": {
          "_": 13936,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "lang": {
          "_": 13937,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "localService": {
          "_": 13938,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 13939,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "voiceURI": {
          "_": 13940,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Web Speech API interface represents a voice that the system supports. Every SpeechSynthesisVoice has its own relative speech service including information about language, name and URI."
    },
    "StaticRange": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "StereoPannerNode": {
      "indexes": [],
      "props": {
        "pan": {
          "_": 13958,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AudioParam",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The pan property takes a unitless value between -1 (full left pan) and 1 (full right pan). This interface was introduced as a much simpler way to apply a simple panning effect than having to use a full PannerNode."
    },
    "Storage": {
      "indexes": [
        {
          "_": 13994,
          "key": {
            "core": "string",
            "isFuture": false
          },
          "value": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 13969,
          "doc": "Returns the number of key/value pairs.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 13975,
          "doc": "Removes all key/value pairs, if there are any.\n\nDispatches a storage event on Window objects holding an equivalent Storage object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getItem": {
          "_": 13977,
          "doc": "Returns the current value associated with the given key, or null if the given key does not exist.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "key": {
          "_": 13979,
          "doc": "Returns the name of the nth key, or null if n is greater than or equal to the number of key/value pairs.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeItem": {
          "_": 13985,
          "doc": "Removes the key/value pair with the given key, if a key/value pair with the given key exists.\n\nDispatches a storage event on Window objects holding an equivalent Storage object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setItem": {
          "_": 13993,
          "doc": "Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n\nThrows a \"QuotaExceededError\" DOMException exception if the new value couldn't be set. (Setting could fail if, e.g., the user has disabled storage for the site, or if the quota has been exceeded.)\n\nDispatches a storage event on Window objects holding an equivalent Storage object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Web Storage API interface provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items."
    },
    "StorageEvent": {
      "indexes": [],
      "props": {
        "key": {
          "_": 14005,
          "doc": "Returns the key of the storage item being changed.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "newValue": {
          "_": 14007,
          "doc": "Returns the new value of the key of the storage item whose value is being changed.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "oldValue": {
          "_": 14009,
          "doc": "Returns the old value of the key of the storage item whose value is being changed.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "storageArea": {
          "_": 14011,
          "doc": "Returns the Storage object that was affected.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Storage",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 14013,
          "doc": "Returns the URL of the document whose storage item changed.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "initStorageEvent": {
          "_": 14015,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A StorageEvent is sent to a window when a storage area it has access to is changed within the context of another document."
    },
    "StorageManager": {
      "indexes": [],
      "props": {
        "estimate": {
          "_": 14025,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "StorageEstimate",
            "generics": []
          },
          "isStatic": false
        },
        "getDirectory": {
          "_": 14026,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "FileSystemDirectoryHandle",
            "generics": []
          },
          "isStatic": false
        },
        "persist": {
          "_": 14027,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        },
        "persisted": {
          "_": 14028,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "StyleMedia": {
      "indexes": [],
      "props": {
        "type": {
          "_": 14038,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "matchMedium": {
          "_": 14039,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "StyleSheet": {
      "indexes": [],
      "props": {
        "disabled": {
          "_": 14044,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "href": {
          "_": 14045,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "media": {
          "_": 14046,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MediaList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ownerNode": {
          "_": 14047,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "parentStyleSheet": {
          "_": 14048,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "CSSStyleSheet",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "title": {
          "_": 14049,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 14050,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A single style sheet. CSS style sheets will further implement the more specialized CSSStyleSheet interface."
    },
    "StyleSheetList": {
      "indexes": [
        {
          "_": 14062,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "CSSStyleSheet",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 14060,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 14061,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "CSSStyleSheet",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A list of StyleSheet."
    },
    "SubmitEvent": {
      "indexes": [],
      "props": {
        "submitter": {
          "_": 14072,
          "doc": "Returns the element representing the submit button that triggered the form submission, or null if the submission was not triggered by a button.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SubtleCrypto": {
      "indexes": [],
      "props": {
        "decrypt": {
          "_": 14085,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ArrayBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "deriveBits": {
          "_": 14086,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ArrayBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "deriveKey": {
          "_": 14087,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "CryptoKey",
            "generics": []
          },
          "isStatic": false
        },
        "digest": {
          "_": 14088,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ArrayBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "encrypt": {
          "_": 14089,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ArrayBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "exportKey": {
          "_": 14091,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ArrayBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "generateKey": {
          "_": 14094,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "any"
          },
          "isStatic": false
        },
        "importKey": {
          "_": 14096,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "CryptoKey",
            "generics": []
          },
          "isStatic": false
        },
        "sign": {
          "_": 14097,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ArrayBuffer",
            "generics": []
          },
          "isStatic": false
        },
        "unwrapKey": {
          "_": 14098,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "CryptoKey",
            "generics": []
          },
          "isStatic": false
        },
        "verify": {
          "_": 14099,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "boolean"
          },
          "isStatic": false
        },
        "wrapKey": {
          "_": 14100,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ArrayBuffer",
            "generics": []
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Web Crypto API interface provides a number of low-level cryptographic functions. It is accessed via the Crypto.subtle properties available in a window context (via Window.crypto).\nAvailable only in secure contexts."
    },
    "Text": {
      "indexes": [],
      "props": {
        "wholeText": {
          "_": 14111,
          "doc": "Returns the combined data of all direct Text node siblings.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "splitText": {
          "_": 14113,
          "doc": "Splits data at the given offset and returns the remainder as Text node.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Text",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children."
    },
    "TextDecoder": {
      "indexes": [],
      "props": {
        "decode": {
          "_": 14136,
          "doc": "Returns the result of running encoding's decoder. The method can be invoked zero or more times with options's stream set to true, and then once without options's stream (or set to false), to process a fragmented input. If the invocation without options's stream (or set to false) has no input, it's clearest to omit both arguments.\n\n```\nvar string = \"\", decoder = new TextDecoder(encoding), buffer;\nwhile(buffer = next_chunk()) {\n  string += decoder.decode(buffer, {stream:true});\n}\nstring += decoder.decode(); // end-of-queue\n```\n\nIf the error mode is \"fatal\" and encoding's decoder returns error, throws a TypeError.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A decoder for a specific method, that is a specific character encoding, like utf-8, iso-8859-2, koi8, cp1261, gbk, etc. A decoder takes a stream of bytes as input and emits a stream of code points. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays.\n`TextDecoder` class is a global reference for `require('util').TextDecoder`\nhttps://nodejs.org/api/globals.html#textdecoder"
    },
    "TextDecoderCommon": {
      "indexes": [],
      "props": {
        "encoding": {
          "_": 14146,
          "doc": "Returns encoding's name, lowercased.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "fatal": {
          "_": 14148,
          "doc": "Returns true if error mode is \"fatal\", otherwise false.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ignoreBOM": {
          "_": 14150,
          "doc": "Returns the value of ignore BOM.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextDecoderStream": {
      "indexes": [],
      "props": {
        "readable": {
          "_": 14154,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadableStream",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "writable": {
          "_": 14155,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WritableStream",
            "generics": [
              {
                "ref": "BufferSource",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextEncoder": {
      "indexes": [],
      "props": {
        "encode": {
          "_": 14166,
          "doc": "Returns the result of running UTF-8's encoder.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "encodeInto": {
          "_": 14168,
          "doc": "Runs the UTF-8 encoder on source, stores the result of that operation into destination, and returns the progress made as an object wherein read is the number of converted code units of source and written is the number of bytes modified in destination.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "TextEncoderEncodeIntoResult",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "TextEncoder takes a stream of code points as input and emits a stream of bytes. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays.\n`TextEncoder` class is a global reference for `require('util').TextEncoder`\nhttps://nodejs.org/api/globals.html#textencoder"
    },
    "TextEncoderCommon": {
      "indexes": [],
      "props": {
        "encoding": {
          "_": 14178,
          "doc": "Returns \"utf-8\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextEncoderStream": {
      "indexes": [],
      "props": {
        "readable": {
          "_": 14182,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadableStream",
            "generics": [
              {
                "ref": "Uint8Array",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "writable": {
          "_": 14183,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WritableStream",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextMetrics": {
      "indexes": [],
      "props": {
        "actualBoundingBoxAscent": {
          "_": 14194,
          "doc": "Returns the measurement described below.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "actualBoundingBoxDescent": {
          "_": 14196,
          "doc": "Returns the measurement described below.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "actualBoundingBoxLeft": {
          "_": 14198,
          "doc": "Returns the measurement described below.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "actualBoundingBoxRight": {
          "_": 14200,
          "doc": "Returns the measurement described below.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontBoundingBoxAscent": {
          "_": 14202,
          "doc": "Returns the measurement described below.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "fontBoundingBoxDescent": {
          "_": 14204,
          "doc": "Returns the measurement described below.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 14206,
          "doc": "Returns the measurement described below.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The dimensions of a piece of text in the canvas, as created by the CanvasRenderingContext2D.measureText() method."
    },
    "TextTrackEventMap": {
      "indexes": [],
      "props": {
        "\"cuechange\"": {
          "_": 14215,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextTrack": {
      "indexes": [],
      "props": {
        "activeCues": {
          "_": 14221,
          "doc": "Returns the text track cues from the text track list of cues that are currently active (i.e. that start before the current playback position and end after it), as a TextTrackCueList object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "TextTrackCueList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cues": {
          "_": 14223,
          "doc": "Returns the text track list of cues, as a TextTrackCueList object.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "TextTrackCueList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "id": {
          "_": 14231,
          "doc": "Returns the ID of the given track.\n\nFor in-band tracks, this is the ID that can be used with a fragment if the format supports media fragment syntax, and that can be used with the getTrackById() method.\n\nFor TextTrack objects corresponding to track elements, this is the ID of the track element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "inBandMetadataTrackDispatchType": {
          "_": 14233,
          "doc": "Returns the text track in-band metadata track dispatch type string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "kind": {
          "_": 14235,
          "doc": "Returns the text track kind string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TextTrackKind",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "label": {
          "_": 14237,
          "doc": "Returns the text track label, if there is one, or the empty string otherwise (indicating that a custom label probably needs to be generated from the other attributes of the object if the object is exposed to the user).",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "language": {
          "_": 14239,
          "doc": "Returns the text track language string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "mode": {
          "_": 14245,
          "doc": "Returns the text track mode, represented by a string from the following list:\n\nCan be set, to change the mode.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TextTrackMode",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "oncuechange": {
          "_": 14246,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "TextTrack",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addCue": {
          "_": 14248,
          "doc": "Adds the given cue to textTrack's text track list of cues.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeCue": {
          "_": 14250,
          "doc": "Removes the given cue from textTrack's text track list of cues.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 14252,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 14254,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This interface also inherits properties from EventTarget."
    },
    "TextTrackCueEventMap": {
      "indexes": [],
      "props": {
        "\"enter\"": {
          "_": 14263,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"exit\"": {
          "_": 14264,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextTrackCue": {
      "indexes": [],
      "props": {
        "endTime": {
          "_": 14274,
          "doc": "Returns the text track cue end time, in seconds.\n\nCan be set.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "id": {
          "_": 14280,
          "doc": "Returns the text track cue identifier.\n\nCan be set.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onenter": {
          "_": 14281,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "TextTrackCue",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onexit": {
          "_": 14282,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "TextTrackCue",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "pauseOnExit": {
          "_": 14288,
          "doc": "Returns true if the text track cue pause-on-exit flag is set, false otherwise.\n\nCan be set.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "startTime": {
          "_": 14294,
          "doc": "Returns the text track cue start time, in seconds.\n\nCan be set.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "track": {
          "_": 14296,
          "doc": "Returns the TextTrack object to which this text track cue belongs, if any, or null otherwise.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "TextTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 14298,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 14300,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "TextTrackCues represent a string of text that will be displayed for some duration of time on a TextTrack. This includes the start and end times that the cue will be displayed. A TextTrackCue cannot be used directly, instead one of the derived types (e.g. VTTCue) must be used."
    },
    "TextTrackCueList": {
      "indexes": [
        {
          "_": 14317,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "TextTrackCue",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 14310,
          "doc": "Returns the number of cues in the list.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getCueById": {
          "_": 14316,
          "doc": "Returns the first text track cue (in text track cue order) with text track cue identifier id.\n\nReturns null if none of the cues have the given identifier or if the argument is the empty string.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "TextTrackCue",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextTrackListEventMap": {
      "indexes": [],
      "props": {
        "\"addtrack\"": {
          "_": 14326,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TrackEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"change\"": {
          "_": 14327,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"removetrack\"": {
          "_": 14328,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TrackEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TextTrackList": {
      "indexes": [
        {
          "_": 14341,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "TextTrack",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 14332,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onaddtrack": {
          "_": 14333,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "TextTrackList",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TrackEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onchange": {
          "_": 14334,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "TextTrackList",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onremovetrack": {
          "_": 14335,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "TextTrackList",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "TrackEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "getTrackById": {
          "_": 14336,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "TextTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 14338,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 14340,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TimeRanges": {
      "indexes": [],
      "props": {
        "length": {
          "_": 14352,
          "doc": "Returns the number of ranges in the object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "end": {
          "_": 14358,
          "doc": "Returns the time for the end of the range with the given index.\n\nThrows an \"IndexSizeError\" DOMException if the index is out of range.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "start": {
          "_": 14364,
          "doc": "Returns the time for the start of the range with the given index.\n\nThrows an \"IndexSizeError\" DOMException if the index is out of range.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <audio> and <video> elements."
    },
    "Touch": {
      "indexes": [],
      "props": {
        "clientX": {
          "_": 14374,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientY": {
          "_": 14375,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "force": {
          "_": 14376,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "identifier": {
          "_": 14377,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageX": {
          "_": 14378,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageY": {
          "_": 14379,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "radiusX": {
          "_": 14380,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "radiusY": {
          "_": 14381,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "rotationAngle": {
          "_": 14382,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "screenX": {
          "_": 14383,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "screenY": {
          "_": 14384,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "target": {
          "_": 14385,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "EventTarget",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad."
    },
    "TouchEvent": {
      "indexes": [],
      "props": {
        "altKey": {
          "_": 14395,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "changedTouches": {
          "_": 14396,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TouchList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ctrlKey": {
          "_": 14397,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "metaKey": {
          "_": 14398,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "shiftKey": {
          "_": 14399,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "targetTouches": {
          "_": 14400,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TouchList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "touches": {
          "_": 14401,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TouchList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An event sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth."
    },
    "TouchList": {
      "indexes": [
        {
          "_": 14413,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "Touch",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 14411,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "item": {
          "_": 14412,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Touch",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A list of contact points on a touch surface. For example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding TouchList object would have one Touch object for each finger, for a total of three entries."
    },
    "TrackEvent": {
      "indexes": [],
      "props": {
        "track": {
          "_": 14424,
          "doc": "Returns the track object (TextTrack, AudioTrack, or VideoTrack) to which the event relates.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "TextTrack",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The TrackEvent interface, part of the HTML DOM specification, is used for events which represent changes to the set of available tracks on an HTML media element; these events are addtrack and removetrack."
    },
    "TransformStream": {
      "indexes": [],
      "props": {
        "readable": {
          "_": 14433,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReadableStream",
            "generics": [
              {
                "ref": "O",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "writable": {
          "_": 14434,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WritableStream",
            "generics": [
              {
                "ref": "I",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "I",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        },
        {
          "name": "O",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "TransformStreamDefaultController": {
      "indexes": [],
      "props": {
        "desiredSize": {
          "_": 14443,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "enqueue": {
          "_": 14444,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "error": {
          "_": 14445,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "terminate": {
          "_": 14446,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "O",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "TransitionEvent": {
      "indexes": [],
      "props": {
        "elapsedTime": {
          "_": 14456,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "propertyName": {
          "_": 14457,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pseudoElement": {
          "_": 14458,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events providing information related to transitions."
    },
    "TreeWalker": {
      "indexes": [],
      "props": {
        "currentNode": {
          "_": 14468,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 14469,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "NodeFilter",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "root": {
          "_": 14470,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "whatToShow": {
          "_": 14471,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "firstChild": {
          "_": 14472,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lastChild": {
          "_": 14473,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "nextNode": {
          "_": 14474,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "nextSibling": {
          "_": 14475,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "parentNode": {
          "_": 14476,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "previousNode": {
          "_": 14477,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "previousSibling": {
          "_": 14478,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The nodes of a document subtree and a position within them."
    },
    "UIEvent": {
      "indexes": [],
      "props": {
        "detail": {
          "_": 14488,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "view": {
          "_": 14489,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Window",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "which": {
          "_": 14491,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "initUIEvent": {
          "_": 14493,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Simple user interface events."
    },
    "URL": {
      "indexes": [],
      "props": {
        "hash": {
          "_": 14503,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "host": {
          "_": 14504,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "hostname": {
          "_": 14505,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "href": {
          "_": 14506,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 14507,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "origin": {
          "_": 14508,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "password": {
          "_": 14509,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pathname": {
          "_": 14510,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "port": {
          "_": 14511,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "protocol": {
          "_": 14512,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "search": {
          "_": 14513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "searchParams": {
          "_": 14514,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "URLSearchParams",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "username": {
          "_": 14515,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 14516,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The URL interface represents an object providing static methods used for creating object URLs.\n`URL` class is a global reference for `require('url').URL`\nhttps://nodejs.org/api/url.html#the-whatwg-url-api"
    },
    "URLSearchParams": {
      "indexes": [],
      "props": {
        "append": {
          "_": 14531,
          "doc": "Appends a specified key/value pair as a new search parameter.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "delete": {
          "_": 14533,
          "doc": "Deletes the given search parameter, and its associated value, from the list of all search parameters.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "get": {
          "_": 14535,
          "doc": "Returns the first value associated to the given search parameter.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getAll": {
          "_": 14537,
          "doc": "Returns all the values association with a given search parameter.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "has": {
          "_": 14539,
          "doc": "Returns a Boolean indicating if such a search parameter exists.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 14541,
          "doc": "Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 14542,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 14544,
          "doc": "Returns a string containing a query string suitable for use in a URL. Does not include the question mark.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 14545,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "`URLSearchParams` class is a global reference for `require('url').URLSearchParams`\nhttps://nodejs.org/api/url.html#class-urlsearchparams"
    },
    "VTTCue": {
      "indexes": [],
      "props": {
        "align": {
          "_": 14555,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AlignSetting",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "line": {
          "_": 14556,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "LineAndPositionSetting",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lineAlign": {
          "_": 14557,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "LineAlignSetting",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "position": {
          "_": 14558,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "LineAndPositionSetting",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "positionAlign": {
          "_": 14559,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PositionAlignSetting",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "region": {
          "_": 14560,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "VTTRegion",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "size": {
          "_": 14561,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "snapToLines": {
          "_": 14562,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "text": {
          "_": 14563,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertical": {
          "_": 14564,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DirectionSetting",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getCueAsHTML": {
          "_": 14565,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DocumentFragment",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 14567,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 14569,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "VTTRegion": {
      "indexes": [],
      "props": {
        "id": {
          "_": 14578,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lines": {
          "_": 14579,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "regionAnchorX": {
          "_": 14580,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "regionAnchorY": {
          "_": 14581,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scroll": {
          "_": 14582,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ScrollSetting",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "viewportAnchorX": {
          "_": 14583,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "viewportAnchorY": {
          "_": 14584,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 14585,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ValidityState": {
      "indexes": [],
      "props": {
        "badInput": {
          "_": 14595,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "customError": {
          "_": 14596,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "patternMismatch": {
          "_": 14597,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "rangeOverflow": {
          "_": 14598,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "rangeUnderflow": {
          "_": 14599,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "stepMismatch": {
          "_": 14600,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "tooLong": {
          "_": 14601,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "tooShort": {
          "_": 14602,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "typeMismatch": {
          "_": 14603,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "valid": {
          "_": 14604,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueMissing": {
          "_": 14605,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid."
    },
    "VideoColorSpace": {
      "indexes": [],
      "props": {
        "fullRange": {
          "_": 14614,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "matrix": {
          "_": 14615,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "VideoMatrixCoefficients",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "primaries": {
          "_": 14616,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "VideoColorPrimaries",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transfer": {
          "_": 14617,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "VideoTransferCharacteristics",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toJSON": {
          "_": 14618,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "VideoColorSpaceInit",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "VideoPlaybackQuality": {
      "indexes": [],
      "props": {
        "corruptedVideoFrames": {
          "_": 14629,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "creationTime": {
          "_": 14630,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DOMHighResTimeStamp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "droppedVideoFrames": {
          "_": 14631,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "totalVideoFrames": {
          "_": 14632,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Returned by the HTMLVideoElement.getVideoPlaybackQuality() method and contains metrics that can be used to determine the playback quality of a video."
    },
    "VisualViewportEventMap": {
      "indexes": [],
      "props": {
        "\"resize\"": {
          "_": 14641,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"scroll\"": {
          "_": 14642,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "VisualViewport": {
      "indexes": [],
      "props": {
        "height": {
          "_": 14646,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetLeft": {
          "_": 14647,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "offsetTop": {
          "_": 14648,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "onresize": {
          "_": 14649,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "VisualViewport",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onscroll": {
          "_": 14650,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "VisualViewport",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "pageLeft": {
          "_": 14651,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageTop": {
          "_": 14652,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scale": {
          "_": 14653,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "width": {
          "_": 14654,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 14656,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 14658,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WEBGL_color_buffer_float": {
      "indexes": [],
      "props": {
        "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT": {
          "_": 14667,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA32F_EXT": {
          "_": 14668,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_NORMALIZED_EXT": {
          "_": 14669,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WEBGL_compressed_texture_astc": {
      "indexes": [],
      "props": {
        "getSupportedProfiles": {
          "_": 14673,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_10x10_KHR": {
          "_": 14674,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_10x5_KHR": {
          "_": 14675,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_10x6_KHR": {
          "_": 14676,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_10x8_KHR": {
          "_": 14677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_12x10_KHR": {
          "_": 14678,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_12x12_KHR": {
          "_": 14679,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_4x4_KHR": {
          "_": 14680,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_5x4_KHR": {
          "_": 14681,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_5x5_KHR": {
          "_": 14682,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_6x5_KHR": {
          "_": 14683,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_6x6_KHR": {
          "_": 14684,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_8x5_KHR": {
          "_": 14685,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_8x6_KHR": {
          "_": 14686,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_ASTC_8x8_KHR": {
          "_": 14687,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR": {
          "_": 14688,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR": {
          "_": 14689,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR": {
          "_": 14690,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR": {
          "_": 14691,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR": {
          "_": 14692,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR": {
          "_": 14693,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR": {
          "_": 14694,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR": {
          "_": 14695,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR": {
          "_": 14696,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR": {
          "_": 14697,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR": {
          "_": 14698,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR": {
          "_": 14699,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR": {
          "_": 14700,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR": {
          "_": 14701,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WEBGL_compressed_texture_etc": {
      "indexes": [],
      "props": {
        "COMPRESSED_R11_EAC": {
          "_": 14705,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RG11_EAC": {
          "_": 14706,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGB8_ETC2": {
          "_": 14707,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2": {
          "_": 14708,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA8_ETC2_EAC": {
          "_": 14709,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SIGNED_R11_EAC": {
          "_": 14710,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SIGNED_RG11_EAC": {
          "_": 14711,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ALPHA8_ETC2_EAC": {
          "_": 14712,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_ETC2": {
          "_": 14713,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2": {
          "_": 14714,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WEBGL_compressed_texture_etc1": {
      "indexes": [],
      "props": {
        "COMPRESSED_RGB_ETC1_WEBGL": {
          "_": 14718,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WEBGL_compressed_texture_s3tc": {
      "indexes": [],
      "props": {
        "COMPRESSED_RGBA_S3TC_DXT1_EXT": {
          "_": 14723,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_S3TC_DXT3_EXT": {
          "_": 14724,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGBA_S3TC_DXT5_EXT": {
          "_": 14725,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_RGB_S3TC_DXT1_EXT": {
          "_": 14726,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The WEBGL_compressed_texture_s3tc extension is part of the WebGL API and exposes four S3TC compressed texture formats."
    },
    "WEBGL_compressed_texture_s3tc_srgb": {
      "indexes": [],
      "props": {
        "COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT": {
          "_": 14730,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT": {
          "_": 14731,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT": {
          "_": 14732,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_SRGB_S3TC_DXT1_EXT": {
          "_": 14733,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WEBGL_debug_renderer_info": {
      "indexes": [],
      "props": {
        "UNMASKED_RENDERER_WEBGL": {
          "_": 14738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNMASKED_VENDOR_WEBGL": {
          "_": 14739,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The WEBGL_debug_renderer_info extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes."
    },
    "WEBGL_debug_shaders": {
      "indexes": [],
      "props": {
        "getTranslatedShaderSource": {
          "_": 14743,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WEBGL_depth_texture": {
      "indexes": [],
      "props": {
        "UNSIGNED_INT_24_8_WEBGL": {
          "_": 14748,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The WEBGL_depth_texture extension is part of the WebGL API and defines 2D depth and depth-stencil textures."
    },
    "WEBGL_draw_buffers": {
      "indexes": [],
      "props": {
        "drawBuffersWEBGL": {
          "_": 14752,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT0_WEBGL": {
          "_": 14753,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT10_WEBGL": {
          "_": 14754,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT11_WEBGL": {
          "_": 14755,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT12_WEBGL": {
          "_": 14756,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT13_WEBGL": {
          "_": 14757,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT14_WEBGL": {
          "_": 14758,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT15_WEBGL": {
          "_": 14759,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT1_WEBGL": {
          "_": 14760,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT2_WEBGL": {
          "_": 14761,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT3_WEBGL": {
          "_": 14762,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT4_WEBGL": {
          "_": 14763,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT5_WEBGL": {
          "_": 14764,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT6_WEBGL": {
          "_": 14765,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT7_WEBGL": {
          "_": 14766,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT8_WEBGL": {
          "_": 14767,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT9_WEBGL": {
          "_": 14768,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER0_WEBGL": {
          "_": 14769,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER10_WEBGL": {
          "_": 14770,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER11_WEBGL": {
          "_": 14771,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER12_WEBGL": {
          "_": 14772,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER13_WEBGL": {
          "_": 14773,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER14_WEBGL": {
          "_": 14774,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER15_WEBGL": {
          "_": 14775,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER1_WEBGL": {
          "_": 14776,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER2_WEBGL": {
          "_": 14777,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER3_WEBGL": {
          "_": 14778,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER4_WEBGL": {
          "_": 14779,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER5_WEBGL": {
          "_": 14780,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER6_WEBGL": {
          "_": 14781,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER7_WEBGL": {
          "_": 14782,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER8_WEBGL": {
          "_": 14783,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER9_WEBGL": {
          "_": 14784,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_COLOR_ATTACHMENTS_WEBGL": {
          "_": 14785,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_DRAW_BUFFERS_WEBGL": {
          "_": 14786,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WEBGL_lose_context": {
      "indexes": [],
      "props": {
        "loseContext": {
          "_": 14790,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "restoreContext": {
          "_": 14791,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WEBGL_multi_draw": {
      "indexes": [],
      "props": {
        "multiDrawArraysInstancedWEBGL": {
          "_": 14795,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "multiDrawArraysWEBGL": {
          "_": 14796,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "multiDrawElementsInstancedWEBGL": {
          "_": 14797,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "multiDrawElementsWEBGL": {
          "_": 14798,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WaveShaperNode": {
      "indexes": [],
      "props": {
        "curve": {
          "_": 14803,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "oversample": {
          "_": 14804,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "OverSampleType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A WaveShaperNode always has exactly one input and one output."
    },
    "WebGL2RenderingContext": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGL2RenderingContextBase": {
      "indexes": [],
      "props": {
        "beginQuery": {
          "_": 15380,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "beginTransformFeedback": {
          "_": 15381,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindBufferBase": {
          "_": 15382,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindBufferRange": {
          "_": 15383,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindSampler": {
          "_": 15384,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindTransformFeedback": {
          "_": 15385,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindVertexArray": {
          "_": 15386,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blitFramebuffer": {
          "_": 15387,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearBufferfi": {
          "_": 15388,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearBufferfv": {
          "_": 15389,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearBufferiv": {
          "_": 15390,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearBufferuiv": {
          "_": 15391,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clientWaitSync": {
          "_": 15392,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "compressedTexImage3D": {
          "_": 15394,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "compressedTexSubImage3D": {
          "_": 15396,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyBufferSubData": {
          "_": 15397,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyTexSubImage3D": {
          "_": 15398,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "createQuery": {
          "_": 15399,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLQuery",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createSampler": {
          "_": 15400,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLSampler",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createTransformFeedback": {
          "_": 15401,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLTransformFeedback",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createVertexArray": {
          "_": 15402,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLVertexArrayObject",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteQuery": {
          "_": 15403,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteSampler": {
          "_": 15404,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteSync": {
          "_": 15405,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteTransformFeedback": {
          "_": 15406,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteVertexArray": {
          "_": 15407,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "drawArraysInstanced": {
          "_": 15408,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "drawBuffers": {
          "_": 15409,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "drawElementsInstanced": {
          "_": 15410,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "drawRangeElements": {
          "_": 15411,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "endQuery": {
          "_": 15412,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "endTransformFeedback": {
          "_": 15413,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "fenceSync": {
          "_": 15414,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLSync",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "framebufferTextureLayer": {
          "_": 15415,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getActiveUniformBlockName": {
          "_": 15416,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getActiveUniformBlockParameter": {
          "_": 15417,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getActiveUniforms": {
          "_": 15418,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getBufferSubData": {
          "_": 15419,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getFragDataLocation": {
          "_": 15420,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getIndexedParameter": {
          "_": 15421,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getInternalformatParameter": {
          "_": 15422,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getQuery": {
          "_": 15423,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLQuery",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getQueryParameter": {
          "_": 15424,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getSamplerParameter": {
          "_": 15425,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getSyncParameter": {
          "_": 15426,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getTransformFeedbackVarying": {
          "_": 15427,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLActiveInfo",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getUniformBlockIndex": {
          "_": 15428,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLuint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getUniformIndices": {
          "_": 15429,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "array": {
              "ref": "GLuint",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "invalidateFramebuffer": {
          "_": 15430,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "invalidateSubFramebuffer": {
          "_": 15431,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "isQuery": {
          "_": 15432,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isSampler": {
          "_": 15433,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isSync": {
          "_": 15434,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isTransformFeedback": {
          "_": 15435,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isVertexArray": {
          "_": 15436,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "pauseTransformFeedback": {
          "_": 15437,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "readBuffer": {
          "_": 15438,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "renderbufferStorageMultisample": {
          "_": 15439,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "resumeTransformFeedback": {
          "_": 15440,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "samplerParameterf": {
          "_": 15441,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "samplerParameteri": {
          "_": 15442,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texImage3D": {
          "_": 15446,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texStorage2D": {
          "_": 15447,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texStorage3D": {
          "_": 15448,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texSubImage3D": {
          "_": 15451,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "transformFeedbackVaryings": {
          "_": 15452,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform1ui": {
          "_": 15453,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform1uiv": {
          "_": 15454,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform2ui": {
          "_": 15455,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform2uiv": {
          "_": 15456,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform3ui": {
          "_": 15457,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform3uiv": {
          "_": 15458,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform4ui": {
          "_": 15459,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform4uiv": {
          "_": 15460,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformBlockBinding": {
          "_": 15461,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix2x3fv": {
          "_": 15462,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix2x4fv": {
          "_": 15463,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix3x2fv": {
          "_": 15464,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix3x4fv": {
          "_": 15465,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix4x2fv": {
          "_": 15466,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix4x3fv": {
          "_": 15467,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttribDivisor": {
          "_": 15468,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttribI4i": {
          "_": 15469,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttribI4iv": {
          "_": 15470,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttribI4ui": {
          "_": 15471,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttribI4uiv": {
          "_": 15472,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttribIPointer": {
          "_": 15473,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "waitSync": {
          "_": 15474,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "ACTIVE_UNIFORM_BLOCKS": {
          "_": 15475,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ALREADY_SIGNALED": {
          "_": 15476,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ANY_SAMPLES_PASSED": {
          "_": 15477,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ANY_SAMPLES_PASSED_CONSERVATIVE": {
          "_": 15478,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR": {
          "_": 15479,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT1": {
          "_": 15480,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT10": {
          "_": 15481,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT11": {
          "_": 15482,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT12": {
          "_": 15483,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT13": {
          "_": 15484,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT14": {
          "_": 15485,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT15": {
          "_": 15486,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT2": {
          "_": 15487,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT3": {
          "_": 15488,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT4": {
          "_": 15489,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT5": {
          "_": 15490,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT6": {
          "_": 15491,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT7": {
          "_": 15492,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT8": {
          "_": 15493,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT9": {
          "_": 15494,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPARE_REF_TO_TEXTURE": {
          "_": 15495,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CONDITION_SATISFIED": {
          "_": 15496,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COPY_READ_BUFFER": {
          "_": 15497,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COPY_READ_BUFFER_BINDING": {
          "_": 15498,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COPY_WRITE_BUFFER": {
          "_": 15499,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COPY_WRITE_BUFFER_BINDING": {
          "_": 15500,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CURRENT_QUERY": {
          "_": 15501,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH": {
          "_": 15502,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH24_STENCIL8": {
          "_": 15503,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH32F_STENCIL8": {
          "_": 15504,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_COMPONENT24": {
          "_": 15505,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_COMPONENT32F": {
          "_": 15506,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER0": {
          "_": 15507,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER1": {
          "_": 15508,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER10": {
          "_": 15509,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER11": {
          "_": 15510,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER12": {
          "_": 15511,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER13": {
          "_": 15512,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER14": {
          "_": 15513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER15": {
          "_": 15514,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER2": {
          "_": 15515,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER3": {
          "_": 15516,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER4": {
          "_": 15517,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER5": {
          "_": 15518,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER6": {
          "_": 15519,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER7": {
          "_": 15520,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER8": {
          "_": 15521,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_BUFFER9": {
          "_": 15522,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_FRAMEBUFFER": {
          "_": 15523,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DRAW_FRAMEBUFFER_BINDING": {
          "_": 15524,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DYNAMIC_COPY": {
          "_": 15525,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DYNAMIC_READ": {
          "_": 15526,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_32_UNSIGNED_INT_24_8_REV": {
          "_": 15527,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_MAT2x3": {
          "_": 15528,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_MAT2x4": {
          "_": 15529,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_MAT3x2": {
          "_": 15530,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_MAT3x4": {
          "_": 15531,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_MAT4x2": {
          "_": 15532,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_MAT4x3": {
          "_": 15533,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAGMENT_SHADER_DERIVATIVE_HINT": {
          "_": 15534,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE": {
          "_": 15535,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE": {
          "_": 15536,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING": {
          "_": 15537,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE": {
          "_": 15538,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE": {
          "_": 15539,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE": {
          "_": 15540,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_RED_SIZE": {
          "_": 15541,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE": {
          "_": 15542,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER": {
          "_": 15543,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_DEFAULT": {
          "_": 15544,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE": {
          "_": 15545,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "HALF_FLOAT": {
          "_": 15546,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INTERLEAVED_ATTRIBS": {
          "_": 15547,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INT_2_10_10_10_REV": {
          "_": 15548,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INT_SAMPLER_2D": {
          "_": 15549,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INT_SAMPLER_2D_ARRAY": {
          "_": 15550,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INT_SAMPLER_3D": {
          "_": 15551,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INT_SAMPLER_CUBE": {
          "_": 15552,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_INDEX": {
          "_": 15553,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX": {
          "_": 15554,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_3D_TEXTURE_SIZE": {
          "_": 15555,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_ARRAY_TEXTURE_LAYERS": {
          "_": 15556,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_CLIENT_WAIT_TIMEOUT_WEBGL": {
          "_": 15557,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_COLOR_ATTACHMENTS": {
          "_": 15558,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS": {
          "_": 15559,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_COMBINED_UNIFORM_BLOCKS": {
          "_": 15560,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS": {
          "_": 15561,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_DRAW_BUFFERS": {
          "_": 15562,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_ELEMENTS_INDICES": {
          "_": 15563,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_ELEMENTS_VERTICES": {
          "_": 15564,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_ELEMENT_INDEX": {
          "_": 15565,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_FRAGMENT_INPUT_COMPONENTS": {
          "_": 15566,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_FRAGMENT_UNIFORM_BLOCKS": {
          "_": 15567,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_FRAGMENT_UNIFORM_COMPONENTS": {
          "_": 15568,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_PROGRAM_TEXEL_OFFSET": {
          "_": 15569,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_SAMPLES": {
          "_": 15570,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_SERVER_WAIT_TIMEOUT": {
          "_": 15571,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_TEXTURE_LOD_BIAS": {
          "_": 15572,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS": {
          "_": 15573,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS": {
          "_": 15574,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS": {
          "_": 15575,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_UNIFORM_BLOCK_SIZE": {
          "_": 15576,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_UNIFORM_BUFFER_BINDINGS": {
          "_": 15577,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VARYING_COMPONENTS": {
          "_": 15578,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VERTEX_OUTPUT_COMPONENTS": {
          "_": 15579,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VERTEX_UNIFORM_BLOCKS": {
          "_": 15580,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VERTEX_UNIFORM_COMPONENTS": {
          "_": 15581,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MIN": {
          "_": 15582,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MIN_PROGRAM_TEXEL_OFFSET": {
          "_": 15583,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "OBJECT_TYPE": {
          "_": 15584,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "PACK_ROW_LENGTH": {
          "_": 15585,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "PACK_SKIP_PIXELS": {
          "_": 15586,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "PACK_SKIP_ROWS": {
          "_": 15587,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "PIXEL_PACK_BUFFER": {
          "_": 15588,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "PIXEL_PACK_BUFFER_BINDING": {
          "_": 15589,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "PIXEL_UNPACK_BUFFER": {
          "_": 15590,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "PIXEL_UNPACK_BUFFER_BINDING": {
          "_": 15591,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "QUERY_RESULT": {
          "_": 15592,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "QUERY_RESULT_AVAILABLE": {
          "_": 15593,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R11F_G11F_B10F": {
          "_": 15594,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R16F": {
          "_": 15595,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R16I": {
          "_": 15596,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R16UI": {
          "_": 15597,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R32F": {
          "_": 15598,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R32I": {
          "_": 15599,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R32UI": {
          "_": 15600,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R8": {
          "_": 15601,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R8I": {
          "_": 15602,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R8UI": {
          "_": 15603,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "R8_SNORM": {
          "_": 15604,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RASTERIZER_DISCARD": {
          "_": 15605,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "READ_BUFFER": {
          "_": 15606,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "READ_FRAMEBUFFER": {
          "_": 15607,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "READ_FRAMEBUFFER_BINDING": {
          "_": 15608,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RED": {
          "_": 15609,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RED_INTEGER": {
          "_": 15610,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_SAMPLES": {
          "_": 15611,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG": {
          "_": 15612,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG16F": {
          "_": 15613,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG16I": {
          "_": 15614,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG16UI": {
          "_": 15615,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG32F": {
          "_": 15616,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG32I": {
          "_": 15617,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG32UI": {
          "_": 15618,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG8": {
          "_": 15619,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG8I": {
          "_": 15620,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG8UI": {
          "_": 15621,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG8_SNORM": {
          "_": 15622,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB10_A2": {
          "_": 15623,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB10_A2UI": {
          "_": 15624,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB16F": {
          "_": 15625,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB16I": {
          "_": 15626,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB16UI": {
          "_": 15627,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB32F": {
          "_": 15628,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB32I": {
          "_": 15629,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB32UI": {
          "_": 15630,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB8": {
          "_": 15631,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB8I": {
          "_": 15632,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB8UI": {
          "_": 15633,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB8_SNORM": {
          "_": 15634,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB9_E5": {
          "_": 15635,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA16F": {
          "_": 15636,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA16I": {
          "_": 15637,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA16UI": {
          "_": 15638,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA32F": {
          "_": 15639,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA32I": {
          "_": 15640,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA32UI": {
          "_": 15641,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA8": {
          "_": 15642,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA8I": {
          "_": 15643,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA8UI": {
          "_": 15644,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA8_SNORM": {
          "_": 15645,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA_INTEGER": {
          "_": 15646,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB_INTEGER": {
          "_": 15647,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RG_INTEGER": {
          "_": 15648,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLER_2D_ARRAY": {
          "_": 15649,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLER_2D_ARRAY_SHADOW": {
          "_": 15650,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLER_2D_SHADOW": {
          "_": 15651,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLER_3D": {
          "_": 15652,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLER_BINDING": {
          "_": 15653,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLER_CUBE_SHADOW": {
          "_": 15654,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SEPARATE_ATTRIBS": {
          "_": 15655,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SIGNALED": {
          "_": 15656,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SIGNED_NORMALIZED": {
          "_": 15657,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SRGB": {
          "_": 15658,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SRGB8": {
          "_": 15659,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SRGB8_ALPHA8": {
          "_": 15660,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STATIC_COPY": {
          "_": 15661,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STATIC_READ": {
          "_": 15662,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL": {
          "_": 15663,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STREAM_COPY": {
          "_": 15664,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STREAM_READ": {
          "_": 15665,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SYNC_CONDITION": {
          "_": 15666,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SYNC_FENCE": {
          "_": 15667,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SYNC_FLAGS": {
          "_": 15668,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SYNC_FLUSH_COMMANDS_BIT": {
          "_": 15669,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SYNC_GPU_COMMANDS_COMPLETE": {
          "_": 15670,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SYNC_STATUS": {
          "_": 15671,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_2D_ARRAY": {
          "_": 15672,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_3D": {
          "_": 15673,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_BASE_LEVEL": {
          "_": 15674,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_BINDING_2D_ARRAY": {
          "_": 15675,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_BINDING_3D": {
          "_": 15676,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_COMPARE_FUNC": {
          "_": 15677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_COMPARE_MODE": {
          "_": 15678,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_IMMUTABLE_FORMAT": {
          "_": 15679,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_IMMUTABLE_LEVELS": {
          "_": 15680,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_MAX_LEVEL": {
          "_": 15681,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_MAX_LOD": {
          "_": 15682,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_MIN_LOD": {
          "_": 15683,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_WRAP_R": {
          "_": 15684,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TIMEOUT_EXPIRED": {
          "_": 15685,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TIMEOUT_IGNORED": {
          "_": 15686,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLint64",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK": {
          "_": 15687,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_ACTIVE": {
          "_": 15688,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_BINDING": {
          "_": 15689,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_BUFFER": {
          "_": 15690,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_BUFFER_BINDING": {
          "_": 15691,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_BUFFER_MODE": {
          "_": 15692,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_BUFFER_SIZE": {
          "_": 15693,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_BUFFER_START": {
          "_": 15694,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_PAUSED": {
          "_": 15695,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN": {
          "_": 15696,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRANSFORM_FEEDBACK_VARYINGS": {
          "_": 15697,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_ARRAY_STRIDE": {
          "_": 15698,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BLOCK_ACTIVE_UNIFORMS": {
          "_": 15699,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES": {
          "_": 15700,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BLOCK_BINDING": {
          "_": 15701,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BLOCK_DATA_SIZE": {
          "_": 15702,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BLOCK_INDEX": {
          "_": 15703,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER": {
          "_": 15704,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER": {
          "_": 15705,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BUFFER": {
          "_": 15706,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BUFFER_BINDING": {
          "_": 15707,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BUFFER_OFFSET_ALIGNMENT": {
          "_": 15708,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BUFFER_SIZE": {
          "_": 15709,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_BUFFER_START": {
          "_": 15710,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_IS_ROW_MAJOR": {
          "_": 15711,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_MATRIX_STRIDE": {
          "_": 15712,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_OFFSET": {
          "_": 15713,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_SIZE": {
          "_": 15714,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNIFORM_TYPE": {
          "_": 15715,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNPACK_IMAGE_HEIGHT": {
          "_": 15716,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNPACK_ROW_LENGTH": {
          "_": 15717,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNPACK_SKIP_IMAGES": {
          "_": 15718,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNPACK_SKIP_PIXELS": {
          "_": 15719,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNPACK_SKIP_ROWS": {
          "_": 15720,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNALED": {
          "_": 15721,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_10F_11F_11F_REV": {
          "_": 15722,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_24_8": {
          "_": 15723,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_2_10_10_10_REV": {
          "_": 15724,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_5_9_9_9_REV": {
          "_": 15725,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_SAMPLER_2D": {
          "_": 15726,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_SAMPLER_2D_ARRAY": {
          "_": 15727,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_SAMPLER_3D": {
          "_": 15728,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_SAMPLER_CUBE": {
          "_": 15729,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_VEC2": {
          "_": 15730,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_VEC3": {
          "_": 15731,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT_VEC4": {
          "_": 15732,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_NORMALIZED": {
          "_": 15733,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ARRAY_BINDING": {
          "_": 15734,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_DIVISOR": {
          "_": 15735,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_INTEGER": {
          "_": 15736,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "WAIT_FAILED": {
          "_": 15737,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGL2RenderingContextOverloads": {
      "indexes": [],
      "props": {
        "bufferData": {
          "_": 15743,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bufferSubData": {
          "_": 15745,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "compressedTexImage2D": {
          "_": 15747,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "compressedTexSubImage2D": {
          "_": 15749,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "readPixels": {
          "_": 15752,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texImage2D": {
          "_": 15757,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texSubImage2D": {
          "_": 15762,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform1fv": {
          "_": 15763,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform1iv": {
          "_": 15764,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform2fv": {
          "_": 15765,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform2iv": {
          "_": 15766,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform3fv": {
          "_": 15767,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform3iv": {
          "_": 15768,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform4fv": {
          "_": 15769,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform4iv": {
          "_": 15770,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix2fv": {
          "_": 15771,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix3fv": {
          "_": 15772,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix4fv": {
          "_": 15773,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLActiveInfo": {
      "indexes": [],
      "props": {
        "name": {
          "_": 15778,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "size": {
          "_": 15779,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "type": {
          "_": 15780,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getActiveAttrib() and WebGLRenderingContext.getActiveUniform() methods."
    },
    "WebGLBuffer": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors."
    },
    "WebGLContextEvent": {
      "indexes": [],
      "props": {
        "statusMessage": {
          "_": 15799,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The WebContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context."
    },
    "WebGLFramebuffer": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Part of the WebGL API and represents a collection of buffers that serve as a rendering destination."
    },
    "WebGLProgram": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The WebGLProgram is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL)."
    },
    "WebGLQuery": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLRenderbuffer": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Part of the WebGL API and represents a buffer that can contain an image, or can be source or target of an rendering operation."
    },
    "WebGLRenderingContext": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element."
    },
    "WebGLRenderingContextBase": {
      "indexes": [],
      "props": {
        "canvas": {
          "_": 16148,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "drawingBufferHeight": {
          "_": 16149,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLsizei",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "drawingBufferWidth": {
          "_": 16150,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLsizei",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "activeTexture": {
          "_": 16151,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "attachShader": {
          "_": 16152,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindAttribLocation": {
          "_": 16153,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindBuffer": {
          "_": 16154,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindFramebuffer": {
          "_": 16155,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindRenderbuffer": {
          "_": 16156,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bindTexture": {
          "_": 16157,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blendColor": {
          "_": 16158,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blendEquation": {
          "_": 16159,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blendEquationSeparate": {
          "_": 16160,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blendFunc": {
          "_": 16161,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blendFuncSeparate": {
          "_": 16162,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "checkFramebufferStatus": {
          "_": 16163,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 16164,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearColor": {
          "_": 16165,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearDepth": {
          "_": 16166,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearStencil": {
          "_": 16167,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "colorMask": {
          "_": 16168,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "compileShader": {
          "_": 16169,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyTexImage2D": {
          "_": 16170,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyTexSubImage2D": {
          "_": 16171,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "createBuffer": {
          "_": 16172,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createFramebuffer": {
          "_": 16173,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLFramebuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createProgram": {
          "_": 16174,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLProgram",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createRenderbuffer": {
          "_": 16175,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLRenderbuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createShader": {
          "_": 16176,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLShader",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createTexture": {
          "_": 16177,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLTexture",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "cullFace": {
          "_": 16178,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteBuffer": {
          "_": 16179,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteFramebuffer": {
          "_": 16180,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteProgram": {
          "_": 16181,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteRenderbuffer": {
          "_": 16182,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteShader": {
          "_": 16183,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "deleteTexture": {
          "_": 16184,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "depthFunc": {
          "_": 16185,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "depthMask": {
          "_": 16186,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "depthRange": {
          "_": 16187,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "detachShader": {
          "_": 16188,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "disable": {
          "_": 16189,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "disableVertexAttribArray": {
          "_": 16190,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "drawArrays": {
          "_": 16191,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "drawElements": {
          "_": 16192,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "enable": {
          "_": 16193,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "enableVertexAttribArray": {
          "_": 16194,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "finish": {
          "_": 16195,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "flush": {
          "_": 16196,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "framebufferRenderbuffer": {
          "_": 16197,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "framebufferTexture2D": {
          "_": 16198,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "frontFace": {
          "_": 16199,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "generateMipmap": {
          "_": 16200,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getActiveAttrib": {
          "_": 16201,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLActiveInfo",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getActiveUniform": {
          "_": 16202,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLActiveInfo",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getAttachedShaders": {
          "_": 16203,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "array": {
              "ref": "WebGLShader",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getAttribLocation": {
          "_": 16204,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getBufferParameter": {
          "_": 16205,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getContextAttributes": {
          "_": 16206,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLContextAttributes",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getError": {
          "_": 16207,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getExtension": {
          "_": 16241,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getFramebufferAttachmentParameter": {
          "_": 16242,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getParameter": {
          "_": 16243,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getProgramInfoLog": {
          "_": 16244,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getProgramParameter": {
          "_": 16245,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getRenderbufferParameter": {
          "_": 16246,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getShaderInfoLog": {
          "_": 16247,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getShaderParameter": {
          "_": 16248,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getShaderPrecisionFormat": {
          "_": 16249,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLShaderPrecisionFormat",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getShaderSource": {
          "_": 16250,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getSupportedExtensions": {
          "_": 16251,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "getTexParameter": {
          "_": 16252,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getUniform": {
          "_": 16253,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getUniformLocation": {
          "_": 16254,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WebGLUniformLocation",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getVertexAttrib": {
          "_": 16255,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getVertexAttribOffset": {
          "_": 16256,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLintptr",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "hint": {
          "_": 16257,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "isBuffer": {
          "_": 16258,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isContextLost": {
          "_": 16259,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isEnabled": {
          "_": 16260,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isFramebuffer": {
          "_": 16261,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isProgram": {
          "_": 16262,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isRenderbuffer": {
          "_": 16263,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isShader": {
          "_": 16264,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isTexture": {
          "_": 16265,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "GLboolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "lineWidth": {
          "_": 16266,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "linkProgram": {
          "_": 16267,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "pixelStorei": {
          "_": 16268,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "polygonOffset": {
          "_": 16269,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "renderbufferStorage": {
          "_": 16270,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "sampleCoverage": {
          "_": 16271,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "scissor": {
          "_": 16272,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "shaderSource": {
          "_": 16273,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stencilFunc": {
          "_": 16274,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stencilFuncSeparate": {
          "_": 16275,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stencilMask": {
          "_": 16276,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stencilMaskSeparate": {
          "_": 16277,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stencilOp": {
          "_": 16278,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stencilOpSeparate": {
          "_": 16279,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texParameterf": {
          "_": 16280,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texParameteri": {
          "_": 16281,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform1f": {
          "_": 16282,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform1i": {
          "_": 16283,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform2f": {
          "_": 16284,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform2i": {
          "_": 16285,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform3f": {
          "_": 16286,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform3i": {
          "_": 16287,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform4f": {
          "_": 16288,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform4i": {
          "_": 16289,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "useProgram": {
          "_": 16290,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "validateProgram": {
          "_": 16291,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttrib1f": {
          "_": 16292,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttrib1fv": {
          "_": 16293,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttrib2f": {
          "_": 16294,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttrib2fv": {
          "_": 16295,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttrib3f": {
          "_": 16296,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttrib3fv": {
          "_": 16297,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttrib4f": {
          "_": 16298,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttrib4fv": {
          "_": 16299,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "vertexAttribPointer": {
          "_": 16300,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "viewport": {
          "_": 16301,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "ACTIVE_ATTRIBUTES": {
          "_": 16302,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ACTIVE_TEXTURE": {
          "_": 16303,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ACTIVE_UNIFORMS": {
          "_": 16304,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ALIASED_LINE_WIDTH_RANGE": {
          "_": 16305,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ALIASED_POINT_SIZE_RANGE": {
          "_": 16306,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ALPHA": {
          "_": 16307,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ALPHA_BITS": {
          "_": 16308,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ALWAYS": {
          "_": 16309,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ARRAY_BUFFER": {
          "_": 16310,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ARRAY_BUFFER_BINDING": {
          "_": 16311,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ATTACHED_SHADERS": {
          "_": 16312,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BACK": {
          "_": 16313,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLEND": {
          "_": 16314,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLEND_COLOR": {
          "_": 16315,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLEND_DST_ALPHA": {
          "_": 16316,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLEND_DST_RGB": {
          "_": 16317,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLEND_EQUATION": {
          "_": 16318,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLEND_EQUATION_ALPHA": {
          "_": 16319,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLEND_EQUATION_RGB": {
          "_": 16320,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLEND_SRC_ALPHA": {
          "_": 16321,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLEND_SRC_RGB": {
          "_": 16322,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BLUE_BITS": {
          "_": 16323,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BOOL": {
          "_": 16324,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BOOL_VEC2": {
          "_": 16325,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BOOL_VEC3": {
          "_": 16326,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BOOL_VEC4": {
          "_": 16327,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BROWSER_DEFAULT_WEBGL": {
          "_": 16328,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BUFFER_SIZE": {
          "_": 16329,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BUFFER_USAGE": {
          "_": 16330,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTE": {
          "_": 16331,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CCW": {
          "_": 16332,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CLAMP_TO_EDGE": {
          "_": 16333,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_ATTACHMENT0": {
          "_": 16334,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_BUFFER_BIT": {
          "_": 16335,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_CLEAR_VALUE": {
          "_": 16336,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COLOR_WRITEMASK": {
          "_": 16337,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPILE_STATUS": {
          "_": 16338,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "COMPRESSED_TEXTURE_FORMATS": {
          "_": 16339,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CONSTANT_ALPHA": {
          "_": 16340,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CONSTANT_COLOR": {
          "_": 16341,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CONTEXT_LOST_WEBGL": {
          "_": 16342,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CULL_FACE": {
          "_": 16343,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CULL_FACE_MODE": {
          "_": 16344,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CURRENT_PROGRAM": {
          "_": 16345,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CURRENT_VERTEX_ATTRIB": {
          "_": 16346,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "CW": {
          "_": 16347,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DECR": {
          "_": 16348,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DECR_WRAP": {
          "_": 16349,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DELETE_STATUS": {
          "_": 16350,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_ATTACHMENT": {
          "_": 16351,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_BITS": {
          "_": 16352,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_BUFFER_BIT": {
          "_": 16353,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_CLEAR_VALUE": {
          "_": 16354,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_COMPONENT": {
          "_": 16355,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_COMPONENT16": {
          "_": 16356,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_FUNC": {
          "_": 16357,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_RANGE": {
          "_": 16358,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_STENCIL": {
          "_": 16359,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_STENCIL_ATTACHMENT": {
          "_": 16360,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_TEST": {
          "_": 16361,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DEPTH_WRITEMASK": {
          "_": 16362,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DITHER": {
          "_": 16363,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DONT_CARE": {
          "_": 16364,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DST_ALPHA": {
          "_": 16365,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DST_COLOR": {
          "_": 16366,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "DYNAMIC_DRAW": {
          "_": 16367,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ELEMENT_ARRAY_BUFFER": {
          "_": 16368,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ELEMENT_ARRAY_BUFFER_BINDING": {
          "_": 16369,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "EQUAL": {
          "_": 16370,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FASTEST": {
          "_": 16371,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT": {
          "_": 16372,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_MAT2": {
          "_": 16373,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_MAT3": {
          "_": 16374,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_MAT4": {
          "_": 16375,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_VEC2": {
          "_": 16376,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_VEC3": {
          "_": 16377,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FLOAT_VEC4": {
          "_": 16378,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAGMENT_SHADER": {
          "_": 16379,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER": {
          "_": 16380,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": {
          "_": 16381,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": {
          "_": 16382,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": {
          "_": 16383,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": {
          "_": 16384,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_BINDING": {
          "_": 16385,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_COMPLETE": {
          "_": 16386,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": {
          "_": 16387,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": {
          "_": 16388,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": {
          "_": 16389,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRAMEBUFFER_UNSUPPORTED": {
          "_": 16390,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRONT": {
          "_": 16391,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRONT_AND_BACK": {
          "_": 16392,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FRONT_FACE": {
          "_": 16393,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FUNC_ADD": {
          "_": 16394,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FUNC_REVERSE_SUBTRACT": {
          "_": 16395,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "FUNC_SUBTRACT": {
          "_": 16396,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "GENERATE_MIPMAP_HINT": {
          "_": 16397,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "GEQUAL": {
          "_": 16398,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "GREATER": {
          "_": 16399,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "GREEN_BITS": {
          "_": 16400,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "HIGH_FLOAT": {
          "_": 16401,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "HIGH_INT": {
          "_": 16402,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "IMPLEMENTATION_COLOR_READ_FORMAT": {
          "_": 16403,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "IMPLEMENTATION_COLOR_READ_TYPE": {
          "_": 16404,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INCR": {
          "_": 16405,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INCR_WRAP": {
          "_": 16406,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INT": {
          "_": 16407,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INT_VEC2": {
          "_": 16408,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INT_VEC3": {
          "_": 16409,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INT_VEC4": {
          "_": 16410,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_ENUM": {
          "_": 16411,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_FRAMEBUFFER_OPERATION": {
          "_": 16412,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_OPERATION": {
          "_": 16413,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INVALID_VALUE": {
          "_": 16414,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "INVERT": {
          "_": 16415,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "KEEP": {
          "_": 16416,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LEQUAL": {
          "_": 16417,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LESS": {
          "_": 16418,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LINEAR": {
          "_": 16419,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LINEAR_MIPMAP_LINEAR": {
          "_": 16420,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LINEAR_MIPMAP_NEAREST": {
          "_": 16421,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LINES": {
          "_": 16422,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LINE_LOOP": {
          "_": 16423,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LINE_STRIP": {
          "_": 16424,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LINE_WIDTH": {
          "_": 16425,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LINK_STATUS": {
          "_": 16426,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LOW_FLOAT": {
          "_": 16427,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LOW_INT": {
          "_": 16428,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LUMINANCE": {
          "_": 16429,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "LUMINANCE_ALPHA": {
          "_": 16430,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_COMBINED_TEXTURE_IMAGE_UNITS": {
          "_": 16431,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_CUBE_MAP_TEXTURE_SIZE": {
          "_": 16432,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_FRAGMENT_UNIFORM_VECTORS": {
          "_": 16433,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_RENDERBUFFER_SIZE": {
          "_": 16434,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_TEXTURE_IMAGE_UNITS": {
          "_": 16435,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_TEXTURE_SIZE": {
          "_": 16436,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VARYING_VECTORS": {
          "_": 16437,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VERTEX_ATTRIBS": {
          "_": 16438,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VERTEX_TEXTURE_IMAGE_UNITS": {
          "_": 16439,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VERTEX_UNIFORM_VECTORS": {
          "_": 16440,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VIEWPORT_DIMS": {
          "_": 16441,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MEDIUM_FLOAT": {
          "_": 16442,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MEDIUM_INT": {
          "_": 16443,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MIRRORED_REPEAT": {
          "_": 16444,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "NEAREST": {
          "_": 16445,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "NEAREST_MIPMAP_LINEAR": {
          "_": 16446,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "NEAREST_MIPMAP_NEAREST": {
          "_": 16447,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "NEVER": {
          "_": 16448,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "NICEST": {
          "_": 16449,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "NONE": {
          "_": 16450,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "NOTEQUAL": {
          "_": 16451,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "NO_ERROR": {
          "_": 16452,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ONE": {
          "_": 16453,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ONE_MINUS_CONSTANT_ALPHA": {
          "_": 16454,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ONE_MINUS_CONSTANT_COLOR": {
          "_": 16455,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ONE_MINUS_DST_ALPHA": {
          "_": 16456,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ONE_MINUS_DST_COLOR": {
          "_": 16457,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ONE_MINUS_SRC_ALPHA": {
          "_": 16458,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ONE_MINUS_SRC_COLOR": {
          "_": 16459,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "OUT_OF_MEMORY": {
          "_": 16460,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "PACK_ALIGNMENT": {
          "_": 16461,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "POINTS": {
          "_": 16462,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "POLYGON_OFFSET_FACTOR": {
          "_": 16463,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "POLYGON_OFFSET_FILL": {
          "_": 16464,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "POLYGON_OFFSET_UNITS": {
          "_": 16465,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RED_BITS": {
          "_": 16466,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER": {
          "_": 16467,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_ALPHA_SIZE": {
          "_": 16468,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_BINDING": {
          "_": 16469,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_BLUE_SIZE": {
          "_": 16470,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_DEPTH_SIZE": {
          "_": 16471,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_GREEN_SIZE": {
          "_": 16472,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_HEIGHT": {
          "_": 16473,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_INTERNAL_FORMAT": {
          "_": 16474,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_RED_SIZE": {
          "_": 16475,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_STENCIL_SIZE": {
          "_": 16476,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERBUFFER_WIDTH": {
          "_": 16477,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RENDERER": {
          "_": 16478,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "REPEAT": {
          "_": 16479,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "REPLACE": {
          "_": 16480,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB": {
          "_": 16481,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB565": {
          "_": 16482,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGB5_A1": {
          "_": 16483,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA": {
          "_": 16484,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "RGBA4": {
          "_": 16485,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLER_2D": {
          "_": 16486,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLER_CUBE": {
          "_": 16487,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLES": {
          "_": 16488,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLE_ALPHA_TO_COVERAGE": {
          "_": 16489,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLE_BUFFERS": {
          "_": 16490,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLE_COVERAGE": {
          "_": 16491,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLE_COVERAGE_INVERT": {
          "_": 16492,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SAMPLE_COVERAGE_VALUE": {
          "_": 16493,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SCISSOR_BOX": {
          "_": 16494,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SCISSOR_TEST": {
          "_": 16495,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SHADER_TYPE": {
          "_": 16496,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SHADING_LANGUAGE_VERSION": {
          "_": 16497,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SHORT": {
          "_": 16498,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SRC_ALPHA": {
          "_": 16499,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SRC_ALPHA_SATURATE": {
          "_": 16500,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SRC_COLOR": {
          "_": 16501,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STATIC_DRAW": {
          "_": 16502,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_ATTACHMENT": {
          "_": 16503,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_BACK_FAIL": {
          "_": 16504,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_BACK_FUNC": {
          "_": 16505,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_BACK_PASS_DEPTH_FAIL": {
          "_": 16506,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_BACK_PASS_DEPTH_PASS": {
          "_": 16507,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_BACK_REF": {
          "_": 16508,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_BACK_VALUE_MASK": {
          "_": 16509,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_BACK_WRITEMASK": {
          "_": 16510,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_BITS": {
          "_": 16511,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_BUFFER_BIT": {
          "_": 16512,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_CLEAR_VALUE": {
          "_": 16513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_FAIL": {
          "_": 16514,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_FUNC": {
          "_": 16515,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_INDEX8": {
          "_": 16516,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_PASS_DEPTH_FAIL": {
          "_": 16517,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_PASS_DEPTH_PASS": {
          "_": 16518,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_REF": {
          "_": 16519,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_TEST": {
          "_": 16520,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_VALUE_MASK": {
          "_": 16521,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STENCIL_WRITEMASK": {
          "_": 16522,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "STREAM_DRAW": {
          "_": 16523,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "SUBPIXEL_BITS": {
          "_": 16524,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE": {
          "_": 16525,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE0": {
          "_": 16526,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE1": {
          "_": 16527,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE10": {
          "_": 16528,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE11": {
          "_": 16529,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE12": {
          "_": 16530,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE13": {
          "_": 16531,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE14": {
          "_": 16532,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE15": {
          "_": 16533,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE16": {
          "_": 16534,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE17": {
          "_": 16535,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE18": {
          "_": 16536,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE19": {
          "_": 16537,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE2": {
          "_": 16538,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE20": {
          "_": 16539,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE21": {
          "_": 16540,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE22": {
          "_": 16541,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE23": {
          "_": 16542,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE24": {
          "_": 16543,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE25": {
          "_": 16544,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE26": {
          "_": 16545,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE27": {
          "_": 16546,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE28": {
          "_": 16547,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE29": {
          "_": 16548,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE3": {
          "_": 16549,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE30": {
          "_": 16550,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE31": {
          "_": 16551,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE4": {
          "_": 16552,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE5": {
          "_": 16553,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE6": {
          "_": 16554,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE7": {
          "_": 16555,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE8": {
          "_": 16556,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE9": {
          "_": 16557,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_2D": {
          "_": 16558,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_BINDING_2D": {
          "_": 16559,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_BINDING_CUBE_MAP": {
          "_": 16560,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_CUBE_MAP": {
          "_": 16561,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_X": {
          "_": 16562,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_Y": {
          "_": 16563,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_Z": {
          "_": 16564,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_CUBE_MAP_POSITIVE_X": {
          "_": 16565,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_CUBE_MAP_POSITIVE_Y": {
          "_": 16566,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_CUBE_MAP_POSITIVE_Z": {
          "_": 16567,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_MAG_FILTER": {
          "_": 16568,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_MIN_FILTER": {
          "_": 16569,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_WRAP_S": {
          "_": 16570,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TEXTURE_WRAP_T": {
          "_": 16571,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRIANGLES": {
          "_": 16572,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRIANGLE_FAN": {
          "_": 16573,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "TRIANGLE_STRIP": {
          "_": 16574,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNPACK_ALIGNMENT": {
          "_": 16575,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNPACK_COLORSPACE_CONVERSION_WEBGL": {
          "_": 16576,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNPACK_FLIP_Y_WEBGL": {
          "_": 16577,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNPACK_PREMULTIPLY_ALPHA_WEBGL": {
          "_": 16578,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_BYTE": {
          "_": 16579,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_INT": {
          "_": 16580,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_SHORT": {
          "_": 16581,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_SHORT_4_4_4_4": {
          "_": 16582,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_SHORT_5_5_5_1": {
          "_": 16583,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSIGNED_SHORT_5_6_5": {
          "_": 16584,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VALIDATE_STATUS": {
          "_": 16585,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VENDOR": {
          "_": 16586,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERSION": {
          "_": 16587,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": {
          "_": 16588,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_ENABLED": {
          "_": 16589,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_NORMALIZED": {
          "_": 16590,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_POINTER": {
          "_": 16591,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_SIZE": {
          "_": 16592,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_STRIDE": {
          "_": 16593,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_ATTRIB_ARRAY_TYPE": {
          "_": 16594,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VERTEX_SHADER": {
          "_": 16595,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "VIEWPORT": {
          "_": 16596,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ZERO": {
          "_": 16597,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLenum",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLRenderingContextOverloads": {
      "indexes": [],
      "props": {
        "bufferData": {
          "_": 16602,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bufferSubData": {
          "_": 16603,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "compressedTexImage2D": {
          "_": 16604,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "compressedTexSubImage2D": {
          "_": 16605,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "readPixels": {
          "_": 16606,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texImage2D": {
          "_": 16608,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "texSubImage2D": {
          "_": 16610,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform1fv": {
          "_": 16611,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform1iv": {
          "_": 16612,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform2fv": {
          "_": 16613,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform2iv": {
          "_": 16614,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform3fv": {
          "_": 16615,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform3iv": {
          "_": 16616,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform4fv": {
          "_": 16617,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniform4iv": {
          "_": 16618,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix2fv": {
          "_": 16619,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix3fv": {
          "_": 16620,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "uniformMatrix4fv": {
          "_": 16621,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLSampler": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLShader": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A WebGLProgram requires both types of shaders."
    },
    "WebGLShaderPrecisionFormat": {
      "indexes": [],
      "props": {
        "precision": {
          "_": 16643,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rangeMax": {
          "_": 16644,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "rangeMin": {
          "_": 16645,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GLint",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getShaderPrecisionFormat() method."
    },
    "WebGLSync": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLTexture": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations."
    },
    "WebGLTransformFeedback": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLUniformLocation": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "Part of the WebGL API and represents the location of a uniform variable in a shader program."
    },
    "WebGLVertexArrayObject": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebGLVertexArrayObjectOES": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebSocketEventMap": {
      "indexes": [],
      "props": {
        "\"close\"": {
          "_": 16699,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CloseEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 16700,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"message\"": {
          "_": 16701,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"open\"": {
          "_": 16702,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WebSocket": {
      "indexes": [],
      "props": {
        "binaryType": {
          "_": 16712,
          "doc": "Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n\nCan be set, to change how binary data is returned. The default is \"blob\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BinaryType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "bufferedAmount": {
          "_": 16718,
          "doc": "Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n\nIf the WebSocket connection is closed, this attribute's value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "extensions": {
          "_": 16720,
          "doc": "Returns the extensions selected by the server, if any.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "onclose": {
          "_": 16721,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WebSocket",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "CloseEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 16722,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WebSocket",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessage": {
          "_": 16723,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WebSocket",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onopen": {
          "_": 16724,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WebSocket",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "protocol": {
          "_": 16726,
          "doc": "Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor's second argument to perform subprotocol negotiation.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 16728,
          "doc": "Returns the state of the WebSocket object's connection. It can have the values described below.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "url": {
          "_": 16730,
          "doc": "Returns the URL that was used to establish the WebSocket connection.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 16732,
          "doc": "Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "send": {
          "_": 16734,
          "doc": "Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "CLOSED": {
          "_": 16735,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "CLOSING": {
          "_": 16736,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "CONNECTING": {
          "_": 16737,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "OPEN": {
          "_": 16738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 16740,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 16742,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection."
    },
    "WheelEvent": {
      "indexes": [],
      "props": {
        "deltaMode": {
          "_": 16756,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "deltaX": {
          "_": 16757,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "deltaY": {
          "_": 16758,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "deltaZ": {
          "_": 16759,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOM_DELTA_LINE": {
          "_": 16760,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOM_DELTA_PAGE": {
          "_": 16761,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "DOM_DELTA_PIXEL": {
          "_": 16762,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Events that occur due to the user moving a mouse wheel or similar input device."
    },
    "WindowEventMap": {
      "indexes": [],
      "props": {
        "\"DOMContentLoaded\"": {
          "_": 16774,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"devicemotion\"": {
          "_": 16775,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DeviceMotionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"deviceorientation\"": {
          "_": 16776,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DeviceOrientationEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"gamepadconnected\"": {
          "_": 16777,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GamepadEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"gamepaddisconnected\"": {
          "_": 16778,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GamepadEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"orientationchange\"": {
          "_": 16779,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Window": {
      "indexes": [
        {
          "_": 16901,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "Window",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "clientInformation": {
          "_": 16785,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Navigator",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "closed": {
          "_": 16787,
          "doc": "Returns true if the window has been closed, false otherwise.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "customElements": {
          "_": 16789,
          "doc": "Defines a new custom element, mapping the given name to the given constructor as an autonomous custom element.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CustomElementRegistry",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "devicePixelRatio": {
          "_": 16790,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "document": {
          "_": 16791,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "event": {
          "_": 16793,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "external": {
          "_": 16795,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "External",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "frameElement": {
          "_": 16796,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "frames": {
          "_": 16797,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WindowProxy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "history": {
          "_": 16798,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "History",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "innerHeight": {
          "_": 16799,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "innerWidth": {
          "_": 16800,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 16801,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "get location": {
          "_": 16802,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Location",
            "generics": [],
            "isFuture": false
          }
        },
        "set location": {
          "_": 16803,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "isStatic": false
        },
        "locationbar": {
          "_": 16805,
          "doc": "Returns true if the location bar is visible; otherwise, returns false.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BarProp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "menubar": {
          "_": 16807,
          "doc": "Returns true if the menu bar is visible; otherwise, returns false.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BarProp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "name": {
          "_": 16808,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "navigator": {
          "_": 16809,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Navigator",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondevicemotion": {
          "_": 16811,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Window",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "DeviceMotionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ondeviceorientation": {
          "_": 16813,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Window",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "DeviceOrientationEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onorientationchange": {
          "_": 16815,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Window",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "opener": {
          "_": 16816,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "orientation": {
          "_": 16818,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "outerHeight": {
          "_": 16819,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "outerWidth": {
          "_": 16820,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageXOffset": {
          "_": 16822,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pageYOffset": {
          "_": 16824,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "parent": {
          "_": 16830,
          "doc": "Refers to either the parent WindowProxy, or itself.\n\nIt can rarely be null e.g. for contentWindow of an iframe that is already removed from the parent.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "WindowProxy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "personalbar": {
          "_": 16832,
          "doc": "Returns true if the personal bar is visible; otherwise, returns false.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BarProp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "screen": {
          "_": 16833,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Screen",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "screenLeft": {
          "_": 16834,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "screenTop": {
          "_": 16835,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "screenX": {
          "_": 16836,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "screenY": {
          "_": 16837,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollX": {
          "_": 16838,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollY": {
          "_": 16839,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollbars": {
          "_": 16841,
          "doc": "Returns true if the scrollbars are visible; otherwise, returns false.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BarProp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "self": {
          "_": 16842,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "intersect": [
              {
                "ref": "Window",
                "generics": [],
                "isFuture": false
              },
              {
                "core": "any",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "speechSynthesis": {
          "_": 16843,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SpeechSynthesis",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "status": {
          "_": 16845,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "statusbar": {
          "_": 16847,
          "doc": "Returns true if the status bar is visible; otherwise, returns false.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BarProp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toolbar": {
          "_": 16849,
          "doc": "Returns true if the toolbar is visible; otherwise, returns false.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BarProp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "top": {
          "_": 16850,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "WindowProxy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "visualViewport": {
          "_": 16851,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "VisualViewport",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "window": {
          "_": 16852,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "intersect": [
              {
                "ref": "Window",
                "generics": [],
                "isFuture": false
              },
              {
                "core": "any",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "alert": {
          "_": 16853,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "blur": {
          "_": 16854,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "cancelIdleCallback": {
          "_": 16855,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "captureEvents": {
          "_": 16857,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "close": {
          "_": 16859,
          "doc": "Closes the window.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "confirm": {
          "_": 16860,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "focus": {
          "_": 16862,
          "doc": "Moves the focus to the window's browsing context, if any.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getComputedStyle": {
          "_": 16863,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "CSSStyleDeclaration",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getSelection": {
          "_": 16864,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Selection",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "matchMedia": {
          "_": 16865,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "MediaQueryList",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "moveBy": {
          "_": 16866,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "moveTo": {
          "_": 16867,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "open": {
          "_": 16868,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "WindowProxy",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "postMessage": {
          "_": 16881,
          "doc": "Posts a message to the given window. Messages can be structured objects, e.g. nested objects and arrays, can contain JavaScript values (strings, numbers, Date objects, etc), and can contain certain data objects such as File Blob, FileList, and ArrayBuffer objects.\n\nObjects listed in the transfer member of options are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n\nA target origin can be specified using the targetOrigin member of options. If not provided, it defaults to \"/\". This default restricts the message to same-origin targets only.\n\nIf the origin of the target window doesn't match the given target origin, the message is discarded, to avoid information leakage. To send the message to the target regardless of origin, set the target origin to \"*\".\n\nThrows a \"DataCloneError\" DOMException if transfer array contains duplicate objects or if message could not be cloned.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "print": {
          "_": 16882,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "prompt": {
          "_": 16883,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "releaseEvents": {
          "_": 16885,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "requestIdleCallback": {
          "_": 16886,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "resizeBy": {
          "_": 16887,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "resizeTo": {
          "_": 16888,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "scroll": {
          "_": 16890,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollBy": {
          "_": 16892,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "scrollTo": {
          "_": 16894,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "stop": {
          "_": 16896,
          "doc": "Cancels the document load.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 16898,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 16900,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A window containing a DOM document; the document property points to the DOM document loaded in that window."
    },
    "WindowEventHandlersEventMap": {
      "indexes": [],
      "props": {
        "\"afterprint\"": {
          "_": 16910,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"beforeprint\"": {
          "_": 16911,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"beforeunload\"": {
          "_": 16912,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "BeforeUnloadEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"gamepadconnected\"": {
          "_": 16913,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GamepadEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"gamepaddisconnected\"": {
          "_": 16914,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "GamepadEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"hashchange\"": {
          "_": 16915,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HashChangeEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"languagechange\"": {
          "_": 16916,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"message\"": {
          "_": 16917,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"messageerror\"": {
          "_": 16918,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"offline\"": {
          "_": 16919,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"online\"": {
          "_": 16920,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pagehide\"": {
          "_": 16921,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PageTransitionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pageshow\"": {
          "_": 16922,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PageTransitionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"popstate\"": {
          "_": 16923,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PopStateEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"rejectionhandled\"": {
          "_": 16924,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PromiseRejectionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"storage\"": {
          "_": 16925,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "StorageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"unhandledrejection\"": {
          "_": 16926,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "PromiseRejectionEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"unload\"": {
          "_": 16927,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WindowEventHandlers": {
      "indexes": [],
      "props": {
        "onafterprint": {
          "_": 16931,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onbeforeprint": {
          "_": 16932,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onbeforeunload": {
          "_": 16933,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "BeforeUnloadEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ongamepadconnected": {
          "_": 16934,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "GamepadEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ongamepaddisconnected": {
          "_": 16935,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "GamepadEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onhashchange": {
          "_": 16936,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "HashChangeEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onlanguagechange": {
          "_": 16937,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessage": {
          "_": 16938,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessageerror": {
          "_": 16939,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onoffline": {
          "_": 16940,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ononline": {
          "_": 16941,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpagehide": {
          "_": 16942,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PageTransitionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpageshow": {
          "_": 16943,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PageTransitionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onpopstate": {
          "_": 16944,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PopStateEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onrejectionhandled": {
          "_": 16945,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PromiseRejectionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onstorage": {
          "_": 16946,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "StorageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onunhandledrejection": {
          "_": 16947,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "PromiseRejectionEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onunload": {
          "_": 16948,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "WindowEventHandlers",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 16950,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 16952,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WindowLocalStorage": {
      "indexes": [],
      "props": {
        "localStorage": {
          "_": 16956,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Storage",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WindowOrWorkerGlobalScope": {
      "indexes": [],
      "props": {
        "caches": {
          "_": 16961,
          "doc": "Available only in secure contexts.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "CacheStorage",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "crossOriginIsolated": {
          "_": 16962,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "crypto": {
          "_": 16963,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Crypto",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "indexedDB": {
          "_": 16964,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "IDBFactory",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isSecureContext": {
          "_": 16965,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "origin": {
          "_": 16966,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "performance": {
          "_": 16967,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Performance",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "atob": {
          "_": 16968,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "btoa": {
          "_": 16969,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearInterval": {
          "_": 16970,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clearTimeout": {
          "_": 16971,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "createImageBitmap": {
          "_": 16973,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "ImageBitmap",
            "generics": []
          },
          "isStatic": false
        },
        "fetch": {
          "_": 16974,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "ref": "Response",
            "generics": []
          },
          "isStatic": false
        },
        "queueMicrotask": {
          "_": 16975,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "reportError": {
          "_": 16976,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setInterval": {
          "_": 16977,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "setTimeout": {
          "_": 16978,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "structuredClone": {
          "_": 16979,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WindowSessionStorage": {
      "indexes": [],
      "props": {
        "sessionStorage": {
          "_": 16983,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Storage",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "WorkerEventMap": {
      "indexes": [],
      "props": {
        "\"message\"": {
          "_": 16987,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"messageerror\"": {
          "_": 16988,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "MessageEvent",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Worker": {
      "indexes": [],
      "props": {
        "onmessage": {
          "_": 16993,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Worker",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onmessageerror": {
          "_": 16994,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "Worker",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "MessageEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "postMessage": {
          "_": 16997,
          "doc": "Clones message and transmits it to worker's global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "terminate": {
          "_": 16999,
          "doc": "Aborts worker's associated global environment.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 17001,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 17003,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Web Workers API interface represents a background task that can be easily created and can send messages back to its creator. Creating a worker is as simple as calling the Worker() constructor and specifying a script to be run in the worker thread."
    },
    "Worklet": {
      "indexes": [],
      "props": {
        "addModule": {
          "_": 17020,
          "doc": "Loads and executes the module script given by moduleURL into all of worklet's global scopes. It can also create additional global scopes as part of this process, depending on the worklet type. The returned promise will fulfill once the script has been successfully loaded and run in all global scopes.\n\nThe credentials option can be set to a credentials mode to modify the script-fetching process. It defaults to \"same-origin\".\n\nAny failures in fetching the script or its dependencies will cause the returned promise to be rejected with an \"AbortError\" DOMException. Any errors in parsing the script or its dependencies will cause the returned promise to be rejected with the exception generated during parsing.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Available only in secure contexts."
    },
    "WritableStream": {
      "indexes": [],
      "props": {
        "locked": {
          "_": 17030,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "abort": {
          "_": 17031,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "close": {
          "_": 17032,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "getWriter": {
          "_": 17033,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "WritableStreamDefaultWriter",
            "generics": [
              {
                "ref": "W",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "W",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": "This Streams API interface provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing."
    },
    "WritableStreamDefaultController": {
      "indexes": [],
      "props": {
        "signal": {
          "_": 17043,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "AbortSignal",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "error": {
          "_": 17044,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This Streams API interface represents a controller allowing control of a WritableStream's state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate."
    },
    "WritableStreamDefaultWriter": {
      "indexes": [],
      "props": {
        "closed": {
          "_": 17054,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "undefined"
          },
          "isStatic": false
        },
        "desiredSize": {
          "_": 17055,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ready": {
          "_": 17056,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "undefined"
          },
          "isStatic": false
        },
        "abort": {
          "_": 17057,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "close": {
          "_": 17058,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        },
        "releaseLock": {
          "_": 17059,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "write": {
          "_": 17060,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "void"
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "W",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": "This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink."
    },
    "XMLDocument": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 17071,
          "doc": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 17073,
          "doc": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An XML document. It inherits from the generic Document and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents."
    },
    "XMLHttpRequestEventMap": {
      "indexes": [],
      "props": {
        "\"readystatechange\"": {
          "_": 17082,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "XMLHttpRequest": {
      "indexes": [],
      "props": {
        "onreadystatechange": {
          "_": 17087,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "XMLHttpRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "Event",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "readyState": {
          "_": 17089,
          "doc": "Returns client's state.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "response": {
          "_": 17091,
          "doc": "Returns the response body.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "responseText": {
          "_": 17097,
          "doc": "Returns response as text.\n\nThrows an \"InvalidStateError\" DOMException if responseType is not the empty string or \"text\".",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "responseType": {
          "_": 17109,
          "doc": "Returns the response type.\n\nCan be set to change the response type. Values are: the empty string (default), \"arraybuffer\", \"blob\", \"document\", \"json\", and \"text\".\n\nWhen set: setting to \"document\" is ignored if current global object is not a Window object.\n\nWhen set: throws an \"InvalidStateError\" DOMException if state is loading or done.\n\nWhen set: throws an \"InvalidAccessError\" DOMException if the synchronous flag is set and current global object is a Window object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "XMLHttpRequestResponseType",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "responseURL": {
          "_": 17110,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "responseXML": {
          "_": 17116,
          "doc": "Returns the response as document.\n\nThrows an \"InvalidStateError\" DOMException if responseType is not the empty string or \"document\".",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "status": {
          "_": 17117,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "statusText": {
          "_": 17118,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "timeout": {
          "_": 17124,
          "doc": "Can be set to a time in milliseconds. When set to a non-zero value will cause fetching to terminate after the given time has passed. When the time has passed, the request has not yet completed, and this's synchronous flag is unset, a timeout event will then be dispatched, or a \"TimeoutError\" DOMException will be thrown otherwise (for the send() method).\n\nWhen set: throws an \"InvalidAccessError\" DOMException if the synchronous flag is set and current global object is a Window object.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "upload": {
          "_": 17126,
          "doc": "Returns the associated XMLHttpRequestUpload object. It can be used to gather transmission information when data is transferred to a server.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "XMLHttpRequestUpload",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "withCredentials": {
          "_": 17132,
          "doc": "True when credentials are to be included in a cross-origin request. False when they are to be excluded in a cross-origin request and when cookies are to be ignored in its response. Initially false.\n\nWhen set: throws an \"InvalidStateError\" DOMException if state is not unsent or opened, or if the send() flag is set.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "abort": {
          "_": 17134,
          "doc": "Cancels any network activity.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getAllResponseHeaders": {
          "_": 17135,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "getResponseHeader": {
          "_": 17136,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "open": {
          "_": 17147,
          "doc": "Sets the request method, request URL, and synchronous flag.\n\nThrows a \"SyntaxError\" DOMException if either method is not a valid method or url cannot be parsed.\n\nThrows a \"SecurityError\" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n\nThrows an \"InvalidAccessError\" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "overrideMimeType": {
          "_": 17153,
          "doc": "Acts as if the `Content-Type` header value for a response is mime. (It does not change the header.)\n\nThrows an \"InvalidStateError\" DOMException if state is loading or done.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "send": {
          "_": 17159,
          "doc": "Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n\nThrows an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setRequestHeader": {
          "_": 17167,
          "doc": "Combines a header in author request headers.\n\nThrows an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.\n\nThrows a \"SyntaxError\" DOMException if name is not a header name or if value is not a header value.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "DONE": {
          "_": 17168,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "HEADERS_RECEIVED": {
          "_": 17169,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LOADING": {
          "_": 17170,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "OPENED": {
          "_": 17171,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "UNSENT": {
          "_": 17172,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 17174,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 17176,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing."
    },
    "XMLHttpRequestEventTargetEventMap": {
      "indexes": [],
      "props": {
        "\"abort\"": {
          "_": 17190,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "XMLHttpRequestEventTarget",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"error\"": {
          "_": 17191,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "XMLHttpRequestEventTarget",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"load\"": {
          "_": 17192,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "XMLHttpRequestEventTarget",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"loadend\"": {
          "_": 17193,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "XMLHttpRequestEventTarget",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"loadstart\"": {
          "_": 17194,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "XMLHttpRequestEventTarget",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"progress\"": {
          "_": 17195,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "XMLHttpRequestEventTarget",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"timeout\"": {
          "_": 17196,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ProgressEvent",
            "generics": [
              {
                "ref": "XMLHttpRequestEventTarget",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "XMLHttpRequestEventTarget": {
      "indexes": [],
      "props": {
        "onabort": {
          "_": 17200,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "XMLHttpRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onerror": {
          "_": 17201,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "XMLHttpRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onload": {
          "_": 17202,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "XMLHttpRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onloadend": {
          "_": 17203,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "XMLHttpRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onloadstart": {
          "_": 17204,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "XMLHttpRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "onprogress": {
          "_": 17205,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "XMLHttpRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "ontimeout": {
          "_": 17206,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "this",
                "type": {
                  "ref": "XMLHttpRequest",
                  "generics": [],
                  "isFuture": false
                }
              },
              {
                "name": "ev",
                "type": {
                  "ref": "ProgressEvent",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "addEventListener": {
          "_": 17208,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 17210,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "XMLHttpRequestUpload": {
      "indexes": [],
      "props": {
        "addEventListener": {
          "_": 17220,
          "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeEventListener": {
          "_": 17222,
          "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "XMLSerializer": {
      "indexes": [],
      "props": {
        "serializeToString": {
          "_": 17232,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides the serializeToString() method to construct an XML string representing a DOM tree."
    },
    "XPathEvaluator": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The XPathEvaluator interface allows to compile and evaluate XPath expressions."
    },
    "XPathEvaluatorBase": {
      "indexes": [],
      "props": {
        "createExpression": {
          "_": 17250,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "XPathExpression",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "createNSResolver": {
          "_": 17251,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "XPathNSResolver",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "evaluate": {
          "_": 17252,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "XPathResult",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "XPathExpression": {
      "indexes": [],
      "props": {
        "evaluate": {
          "_": 17257,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "XPathResult",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "This interface is a compiled XPath expression that can be evaluated on a document or specific node to return information its DOM tree."
    },
    "XPathResult": {
      "indexes": [],
      "props": {
        "booleanValue": {
          "_": 17267,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "invalidIteratorState": {
          "_": 17268,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "numberValue": {
          "_": 17269,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "resultType": {
          "_": 17270,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "singleNodeValue": {
          "_": 17271,
          "doc": "",
          "isMethod": false,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "snapshotLength": {
          "_": 17272,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "stringValue": {
          "_": 17273,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "iterateNext": {
          "_": 17274,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "snapshotItem": {
          "_": 17275,
          "doc": "",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "Node",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "ANY_TYPE": {
          "_": 17276,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ANY_UNORDERED_NODE_TYPE": {
          "_": 17277,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "BOOLEAN_TYPE": {
          "_": 17278,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "FIRST_ORDERED_NODE_TYPE": {
          "_": 17279,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NUMBER_TYPE": {
          "_": 17280,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ORDERED_NODE_ITERATOR_TYPE": {
          "_": 17281,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ORDERED_NODE_SNAPSHOT_TYPE": {
          "_": 17282,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "STRING_TYPE": {
          "_": 17283,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "UNORDERED_NODE_ITERATOR_TYPE": {
          "_": 17284,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "UNORDERED_NODE_SNAPSHOT_TYPE": {
          "_": 17285,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The results generated by evaluating an XPath expression within the context of a given node."
    },
    "XSLTProcessor": {
      "indexes": [],
      "props": {
        "clearParameters": {
          "_": 17305,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "getParameter": {
          "_": 17306,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "importStylesheet": {
          "_": 17307,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "removeParameter": {
          "_": 17308,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "reset": {
          "_": 17309,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setParameter": {
          "_": 17310,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "transformToDocument": {
          "_": 17311,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Document",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "transformToFragment": {
          "_": 17312,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DocumentFragment",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An XSLTProcessor applies an XSLT stylesheet transformation to an XML document to produce a new XML document as output. It has methods to load the XSLT stylesheet, to manipulate <xsl:param> parameter values, and to apply the transformation to documents."
    },
    "Console": {
      "indexes": [],
      "props": {
        "assert": {
          "_": 17321,
          "doc": "`console.assert()` writes a message if `value` is [falsy](https://developer.mozilla.org/en-US/docs/Glossary/Falsy) or omitted. It only\nwrites a message and does not otherwise affect execution. The output always\nstarts with `\"Assertion failed\"`. If provided, `message` is formatted using `util.format()`.\n\nIf `value` is [truthy](https://developer.mozilla.org/en-US/docs/Glossary/Truthy), nothing happens.\n\n```js\nconsole.assert(true, 'does nothing');\n\nconsole.assert(false, 'Whoops %s work', 'didn\\'t');\n// Assertion failed: Whoops didn't work\n\nconsole.assert();\n// Assertion failed\n```",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "clear": {
          "_": 17322,
          "doc": "When `stdout` is a TTY, calling `console.clear()` will attempt to clear the\nTTY. When `stdout` is not a TTY, this method does nothing.\n\nThe specific operation of `console.clear()` can vary across operating systems\nand terminal types. For most Linux operating systems, `console.clear()`operates similarly to the `clear` shell command. On Windows, `console.clear()`will clear only the output in the\ncurrent terminal viewport for the Node.js\nbinary.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "count": {
          "_": 17323,
          "doc": "Maintains an internal counter specific to `label` and outputs to `stdout` the\nnumber of times `console.count()` has been called with the given `label`.\n\n```js\n> console.count()\ndefault: 1\nundefined\n> console.count('default')\ndefault: 2\nundefined\n> console.count('abc')\nabc: 1\nundefined\n> console.count('xyz')\nxyz: 1\nundefined\n> console.count('abc')\nabc: 2\nundefined\n> console.count()\ndefault: 3\nundefined\n>\n```",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "countReset": {
          "_": 17324,
          "doc": "Resets the internal counter specific to `label`.\n\n```js\n> console.count('abc');\nabc: 1\nundefined\n> console.countReset('abc');\nundefined\n> console.count('abc');\nabc: 1\nundefined\n>\n```",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "debug": {
          "_": 17325,
          "doc": "The `console.debug()` function is an alias for {@link log}.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "dir": {
          "_": 17326,
          "doc": "Uses `util.inspect()` on `obj` and prints the resulting string to `stdout`.\nThis function bypasses any custom `inspect()` function defined on `obj`.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "dirxml": {
          "_": 17327,
          "doc": "This method calls `console.log()` passing it the arguments received.\nThis method does not produce any XML formatting.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "error": {
          "_": 17328,
          "doc": "Prints to `stderr` with newline. Multiple arguments can be passed, with the\nfirst used as the primary message and all additional used as substitution\nvalues similar to [`printf(3)`](http://man7.org/linux/man-pages/man3/printf.3.html) (the arguments are all passed to `util.format()`).\n\n```js\nconst code = 5;\nconsole.error('error #%d', code);\n// Prints: error #5, to stderr\nconsole.error('error', code);\n// Prints: error 5, to stderr\n```\n\nIf formatting elements (e.g. `%d`) are not found in the first string then `util.inspect()` is called on each argument and the resulting string\nvalues are concatenated. See `util.format()` for more information.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "group": {
          "_": 17329,
          "doc": "Increases indentation of subsequent lines by spaces for `groupIndentation`length.\n\nIf one or more `label`s are provided, those are printed first without the\nadditional indentation.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "groupCollapsed": {
          "_": 17330,
          "doc": "An alias for {@link group}.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "groupEnd": {
          "_": 17331,
          "doc": "Decreases indentation of subsequent lines by spaces for `groupIndentation`length.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "info": {
          "_": 17332,
          "doc": "The `console.info()` function is an alias for {@link log}.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "log": {
          "_": 17333,
          "doc": "Prints to `stdout` with newline. Multiple arguments can be passed, with the\nfirst used as the primary message and all additional used as substitution\nvalues similar to [`printf(3)`](http://man7.org/linux/man-pages/man3/printf.3.html) (the arguments are all passed to `util.format()`).\n\n```js\nconst count = 5;\nconsole.log('count: %d', count);\n// Prints: count: 5, to stdout\nconsole.log('count:', count);\n// Prints: count: 5, to stdout\n```\n\nSee `util.format()` for more information.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "table": {
          "_": 17334,
          "doc": "Try to construct a table with the columns of the properties of `tabularData`(or use `properties`) and rows of `tabularData` and log it. Falls back to just\nlogging the argument if it can’t be parsed as tabular.\n\n```js\n// These can't be parsed as tabular data\nconsole.table(Symbol());\n// Symbol()\n\nconsole.table(undefined);\n// undefined\n\nconsole.table([{ a: 1, b: 'Y' }, { a: 'Z', b: 2 }]);\n// ┌─────────┬─────┬─────┐\n// │ (index) │  a  │  b  │\n// ├─────────┼─────┼─────┤\n// │    0    │  1  │ 'Y' │\n// │    1    │ 'Z' │  2  │\n// └─────────┴─────┴─────┘\n\nconsole.table([{ a: 1, b: 'Y' }, { a: 'Z', b: 2 }], ['a']);\n// ┌─────────┬─────┐\n// │ (index) │  a  │\n// ├─────────┼─────┤\n// │    0    │  1  │\n// │    1    │ 'Z' │\n// └─────────┴─────┘\n```",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "time": {
          "_": 17335,
          "doc": "Starts a timer that can be used to compute the duration of an operation. Timers\nare identified by a unique `label`. Use the same `label` when calling {@link timeEnd} to stop the timer and output the elapsed time in\nsuitable time units to `stdout`. For example, if the elapsed\ntime is 3869ms, `console.timeEnd()` displays \"3.869s\".",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "timeEnd": {
          "_": 17336,
          "doc": "Stops a timer that was previously started by calling {@link time} and\nprints the result to `stdout`:\n\n```js\nconsole.time('100-elements');\nfor (let i = 0; i < 100; i++) {}\nconsole.timeEnd('100-elements');\n// prints 100-elements: 225.438ms\n```",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "timeLog": {
          "_": 17337,
          "doc": "For a timer that was previously started by calling {@link time}, prints\nthe elapsed time and other `data` arguments to `stdout`:\n\n```js\nconsole.time('process');\nconst value = expensiveProcess1(); // Returns 42\nconsole.timeLog('process', value);\n// Prints \"process: 365.227ms 42\".\ndoExpensiveProcess2(value);\nconsole.timeEnd('process');\n```",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "timeStamp": {
          "_": 17338,
          "doc": "This method does not display anything unless used in the inspector.\n Adds an event with the label `label` to the Timeline panel of the inspector.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "trace": {
          "_": 17339,
          "doc": "Prints to `stderr` the string `'Trace: '`, followed by the `util.format()` formatted message and stack trace to the current position in the code.\n\n```js\nconsole.trace('Show me');\n// Prints: (stack trace will vary based on where trace is called)\n//  Trace: Show me\n//    at repl:2:9\n//    at REPLServer.defaultEval (repl.js:248:27)\n//    at bound (domain.js:287:14)\n//    at REPLServer.runBound [as eval] (domain.js:300:12)\n//    at REPLServer.<anonymous> (repl.js:412:12)\n//    at emitOne (events.js:82:20)\n//    at REPLServer.emit (events.js:169:7)\n//    at REPLServer.Interface._onLine (readline.js:210:10)\n//    at REPLServer.Interface._line (readline.js:549:8)\n//    at REPLServer.Interface._ttyWrite (readline.js:826:14)\n```",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "warn": {
          "_": 17340,
          "doc": "The `console.warn()` function is an alias for {@link error}.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BlobCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17482,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CustomElementConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17486,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DecodeErrorCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17490,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DecodeSuccessCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17494,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ErrorCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17498,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17502,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemEntriesCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17506,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FileSystemEntryCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17510,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FrameRequestCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17514,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "FunctionStringCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17518,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IdleRequestCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17522,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IntersectionObserverCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17526,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "LockGrantedCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17530,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MediaSessionActionHandler": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17534,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "MutationCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17538,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NotificationPermissionCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17542,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OnBeforeUnloadEventHandlerNonNull": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17546,
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "OnErrorEventHandlerNonNull": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17550,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PerformanceObserverCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17554,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PositionCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17558,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PositionErrorCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17562,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "QueuingStrategySize": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17566,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "RTCPeerConnectionErrorCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17570,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RTCSessionDescriptionCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17574,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RemotePlaybackAvailabilityCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17578,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ResizeObserverCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17582,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TransformerFlushCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17586,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "O",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "TransformerStartCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17590,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "O",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "TransformerTransformCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17594,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "I",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        },
        {
          "name": "O",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingSinkAbortCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17598,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingSinkCloseCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17602,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingSinkStartCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17606,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingSinkWriteCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17610,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "W",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingSourceCancelCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17614,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingSourcePullCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17618,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "R",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "UnderlyingSourceStartCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17622,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "R",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "VideoFrameRequestCallback": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17626,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "VoidFunction": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 17630,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLElementTagNameMap": {
      "indexes": [],
      "props": {
        "\"a\"": {
          "_": 17634,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLAnchorElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"abbr\"": {
          "_": 17635,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"address\"": {
          "_": 17636,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"area\"": {
          "_": 17637,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLAreaElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"article\"": {
          "_": 17638,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"aside\"": {
          "_": 17639,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"audio\"": {
          "_": 17640,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLAudioElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"b\"": {
          "_": 17641,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"base\"": {
          "_": 17642,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLBaseElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"bdi\"": {
          "_": 17643,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"bdo\"": {
          "_": 17644,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"blockquote\"": {
          "_": 17645,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLQuoteElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"body\"": {
          "_": 17646,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLBodyElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"br\"": {
          "_": 17647,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLBRElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"button\"": {
          "_": 17648,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLButtonElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"canvas\"": {
          "_": 17649,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLCanvasElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"caption\"": {
          "_": 17650,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableCaptionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"cite\"": {
          "_": 17651,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"code\"": {
          "_": 17652,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"col\"": {
          "_": 17653,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableColElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"colgroup\"": {
          "_": 17654,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableColElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"data\"": {
          "_": 17655,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLDataElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"datalist\"": {
          "_": 17656,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLDataListElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dd\"": {
          "_": 17657,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"del\"": {
          "_": 17658,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLModElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"details\"": {
          "_": 17659,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLDetailsElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dfn\"": {
          "_": 17660,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dialog\"": {
          "_": 17661,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLDialogElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"div\"": {
          "_": 17662,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLDivElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dl\"": {
          "_": 17663,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLDListElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dt\"": {
          "_": 17664,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"em\"": {
          "_": 17665,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"embed\"": {
          "_": 17666,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLEmbedElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"fieldset\"": {
          "_": 17667,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLFieldSetElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"figcaption\"": {
          "_": 17668,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"figure\"": {
          "_": 17669,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"footer\"": {
          "_": 17670,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"form\"": {
          "_": 17671,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLFormElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"h1\"": {
          "_": 17672,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHeadingElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"h2\"": {
          "_": 17673,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHeadingElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"h3\"": {
          "_": 17674,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHeadingElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"h4\"": {
          "_": 17675,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHeadingElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"h5\"": {
          "_": 17676,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHeadingElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"h6\"": {
          "_": 17677,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHeadingElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"head\"": {
          "_": 17678,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHeadElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"header\"": {
          "_": 17679,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"hgroup\"": {
          "_": 17680,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"hr\"": {
          "_": 17681,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHRElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"html\"": {
          "_": 17682,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLHtmlElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"i\"": {
          "_": 17683,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"iframe\"": {
          "_": 17684,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLIFrameElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"img\"": {
          "_": 17685,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLImageElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"input\"": {
          "_": 17686,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLInputElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"ins\"": {
          "_": 17687,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLModElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"kbd\"": {
          "_": 17688,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"label\"": {
          "_": 17689,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLLabelElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"legend\"": {
          "_": 17690,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLLegendElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"li\"": {
          "_": 17691,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLLIElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"link\"": {
          "_": 17692,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLLinkElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"main\"": {
          "_": 17693,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"map\"": {
          "_": 17694,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLMapElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mark\"": {
          "_": 17695,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"menu\"": {
          "_": 17696,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLMenuElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"meta\"": {
          "_": 17697,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLMetaElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"meter\"": {
          "_": 17698,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLMeterElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"nav\"": {
          "_": 17699,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"noscript\"": {
          "_": 17700,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"object\"": {
          "_": 17701,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLObjectElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"ol\"": {
          "_": 17702,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLOListElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"optgroup\"": {
          "_": 17703,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLOptGroupElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"option\"": {
          "_": 17704,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLOptionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"output\"": {
          "_": 17705,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLOutputElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"p\"": {
          "_": 17706,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLParagraphElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"picture\"": {
          "_": 17707,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLPictureElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pre\"": {
          "_": 17708,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLPreElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"progress\"": {
          "_": 17709,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLProgressElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"q\"": {
          "_": 17710,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLQuoteElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"rp\"": {
          "_": 17711,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"rt\"": {
          "_": 17712,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"ruby\"": {
          "_": 17713,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"s\"": {
          "_": 17714,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"samp\"": {
          "_": 17715,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"script\"": {
          "_": 17716,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLScriptElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"section\"": {
          "_": 17717,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"select\"": {
          "_": 17718,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLSelectElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"slot\"": {
          "_": 17719,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLSlotElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"small\"": {
          "_": 17720,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"source\"": {
          "_": 17721,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLSourceElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"span\"": {
          "_": 17722,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLSpanElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"strong\"": {
          "_": 17723,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"style\"": {
          "_": 17724,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLStyleElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"sub\"": {
          "_": 17725,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"summary\"": {
          "_": 17726,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"sup\"": {
          "_": 17727,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"table\"": {
          "_": 17728,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"tbody\"": {
          "_": 17729,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableSectionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"td\"": {
          "_": 17730,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableCellElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"template\"": {
          "_": 17731,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTemplateElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"textarea\"": {
          "_": 17732,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTextAreaElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"tfoot\"": {
          "_": 17733,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableSectionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"th\"": {
          "_": 17734,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableCellElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"thead\"": {
          "_": 17735,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableSectionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"time\"": {
          "_": 17736,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTimeElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"title\"": {
          "_": 17737,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTitleElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"tr\"": {
          "_": 17738,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTableRowElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"track\"": {
          "_": 17739,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLTrackElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"u\"": {
          "_": 17740,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"ul\"": {
          "_": 17741,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLUListElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"var\"": {
          "_": 17742,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"video\"": {
          "_": 17743,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLVideoElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"wbr\"": {
          "_": 17744,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "HTMLElementDeprecatedTagNameMap": {
      "indexes": [],
      "props": {
        "\"acronym\"": {
          "_": 17748,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"applet\"": {
          "_": 17749,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLUnknownElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"basefont\"": {
          "_": 17750,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"bgsound\"": {
          "_": 17751,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLUnknownElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"big\"": {
          "_": 17752,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"blink\"": {
          "_": 17753,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLUnknownElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"center\"": {
          "_": 17754,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"dir\"": {
          "_": 17755,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLDirectoryElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"font\"": {
          "_": 17756,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLFontElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"frame\"": {
          "_": 17757,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLFrameElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"frameset\"": {
          "_": 17758,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLFrameSetElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"isindex\"": {
          "_": 17759,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLUnknownElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"keygen\"": {
          "_": 17760,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLUnknownElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"listing\"": {
          "_": 17761,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLPreElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"marquee\"": {
          "_": 17762,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLMarqueeElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"menuitem\"": {
          "_": 17763,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"multicol\"": {
          "_": 17764,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLUnknownElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"nextid\"": {
          "_": 17765,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLUnknownElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"nobr\"": {
          "_": 17766,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"noembed\"": {
          "_": 17767,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"noframes\"": {
          "_": 17768,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"param\"": {
          "_": 17769,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLParamElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"plaintext\"": {
          "_": 17770,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"rb\"": {
          "_": 17771,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"rtc\"": {
          "_": 17772,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"spacer\"": {
          "_": 17773,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLUnknownElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"strike\"": {
          "_": 17774,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"tt\"": {
          "_": 17775,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"xmp\"": {
          "_": 17776,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "HTMLPreElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SVGElementTagNameMap": {
      "indexes": [],
      "props": {
        "\"a\"": {
          "_": 17780,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"animate\"": {
          "_": 17781,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimateElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"animateMotion\"": {
          "_": 17782,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimateMotionElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"animateTransform\"": {
          "_": 17783,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGAnimateTransformElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"circle\"": {
          "_": 17784,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGCircleElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"clipPath\"": {
          "_": 17785,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGClipPathElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"defs\"": {
          "_": 17786,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGDefsElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"desc\"": {
          "_": 17787,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGDescElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"ellipse\"": {
          "_": 17788,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGEllipseElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feBlend\"": {
          "_": 17789,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEBlendElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feColorMatrix\"": {
          "_": 17790,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEColorMatrixElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feComponentTransfer\"": {
          "_": 17791,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEComponentTransferElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feComposite\"": {
          "_": 17792,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFECompositeElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feConvolveMatrix\"": {
          "_": 17793,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEConvolveMatrixElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feDiffuseLighting\"": {
          "_": 17794,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEDiffuseLightingElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feDisplacementMap\"": {
          "_": 17795,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEDisplacementMapElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feDistantLight\"": {
          "_": 17796,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEDistantLightElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feDropShadow\"": {
          "_": 17797,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEDropShadowElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feFlood\"": {
          "_": 17798,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEFloodElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feFuncA\"": {
          "_": 17799,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEFuncAElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feFuncB\"": {
          "_": 17800,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEFuncBElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feFuncG\"": {
          "_": 17801,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEFuncGElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feFuncR\"": {
          "_": 17802,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEFuncRElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feGaussianBlur\"": {
          "_": 17803,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEGaussianBlurElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feImage\"": {
          "_": 17804,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEImageElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feMerge\"": {
          "_": 17805,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEMergeElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feMergeNode\"": {
          "_": 17806,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEMergeNodeElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feMorphology\"": {
          "_": 17807,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEMorphologyElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feOffset\"": {
          "_": 17808,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEOffsetElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"fePointLight\"": {
          "_": 17809,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFEPointLightElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feSpecularLighting\"": {
          "_": 17810,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFESpecularLightingElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feSpotLight\"": {
          "_": 17811,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFESpotLightElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feTile\"": {
          "_": 17812,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFETileElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"feTurbulence\"": {
          "_": 17813,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFETurbulenceElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"filter\"": {
          "_": 17814,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGFilterElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"foreignObject\"": {
          "_": 17815,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGForeignObjectElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"g\"": {
          "_": 17816,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGGElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"image\"": {
          "_": 17817,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGImageElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"line\"": {
          "_": 17818,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGLineElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"linearGradient\"": {
          "_": 17819,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGLinearGradientElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"marker\"": {
          "_": 17820,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGMarkerElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mask\"": {
          "_": 17821,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGMaskElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"metadata\"": {
          "_": 17822,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGMetadataElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"mpath\"": {
          "_": 17823,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGMPathElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"path\"": {
          "_": 17824,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGPathElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"pattern\"": {
          "_": 17825,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGPatternElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"polygon\"": {
          "_": 17826,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGPolygonElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"polyline\"": {
          "_": 17827,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGPolylineElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"radialGradient\"": {
          "_": 17828,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGRadialGradientElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"rect\"": {
          "_": 17829,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGRectElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"script\"": {
          "_": 17830,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGScriptElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"set\"": {
          "_": 17831,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGSetElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"stop\"": {
          "_": 17832,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGStopElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"style\"": {
          "_": 17833,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGStyleElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"svg\"": {
          "_": 17834,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGSVGElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"switch\"": {
          "_": 17835,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGSwitchElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"symbol\"": {
          "_": 17836,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGSymbolElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"text\"": {
          "_": 17837,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGTextElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"textPath\"": {
          "_": 17838,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGTextPathElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"title\"": {
          "_": 17839,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGTitleElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"tspan\"": {
          "_": 17840,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGTSpanElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"use\"": {
          "_": 17841,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGUseElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "\"view\"": {
          "_": 17842,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SVGViewElement",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    }
  },
  "funcs": {
    "alert": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "message",
          "type": {
            "core": "any",
            "isFuture": false
          }
        }
      ]
    },
    "blur": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": []
    },
    "cancelIdleCallback": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "handle",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "captureEvents": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": []
    },
    "close": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": []
    },
    "confirm": {
      "type": {
        "core": "boolean",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "message",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "focus": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": []
    },
    "getComputedStyle": {
      "type": {
        "ref": "CSSStyleDeclaration",
        "generics": [],
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "elt",
          "type": {
            "ref": "Element",
            "generics": [],
            "isFuture": false
          }
        },
        {
          "name": "pseudoElt",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "getSelection": {
      "type": {
        "ref": "Selection",
        "generics": [],
        "isFuture": false
      },
      "generics": [],
      "params": []
    },
    "matchMedia": {
      "type": {
        "ref": "MediaQueryList",
        "generics": [],
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "query",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "moveBy": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "x",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "y",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "moveTo": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "x",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "y",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "open": {
      "type": {
        "ref": "WindowProxy",
        "generics": [],
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "url",
          "type": {
            "core": "any",
            "isFuture": false
          }
        },
        {
          "name": "target",
          "type": {
            "core": "string",
            "isFuture": false
          }
        },
        {
          "name": "features",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "postMessage": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "message",
          "type": {
            "core": "any",
            "isFuture": false
          }
        },
        {
          "name": "options",
          "type": {
            "ref": "WindowPostMessageOptions",
            "generics": [],
            "isFuture": false
          }
        }
      ]
    },
    "print": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": []
    },
    "prompt": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "message",
          "type": {
            "core": "string",
            "isFuture": false
          }
        },
        {
          "name": "_default",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "releaseEvents": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": []
    },
    "requestIdleCallback": {
      "type": {
        "core": "number",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "callback",
          "type": {
            "ref": "IdleRequestCallback",
            "generics": [],
            "isFuture": false
          }
        },
        {
          "name": "options",
          "type": {
            "ref": "IdleRequestOptions",
            "generics": [],
            "isFuture": false
          }
        }
      ]
    },
    "resizeBy": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "x",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "y",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "resizeTo": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "width",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "height",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "scroll": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "x",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "y",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "scrollBy": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "x",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "y",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "scrollTo": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "x",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "y",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "stop": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": []
    },
    "toString": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": []
    },
    "dispatchEvent": {
      "type": {
        "core": "boolean",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "event",
          "type": {
            "ref": "Event",
            "generics": [],
            "isFuture": false
          }
        }
      ]
    },
    "cancelAnimationFrame": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "handle",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "requestAnimationFrame": {
      "type": {
        "core": "number",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "callback",
          "type": {
            "ref": "FrameRequestCallback",
            "generics": [],
            "isFuture": false
          }
        }
      ]
    },
    "atob": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "data",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "btoa": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "data",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "clearInterval": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "id",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "clearTimeout": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "id",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "createImageBitmap": {
      "type": {
        "isFuture": false,
        "ref": "ImageBitmap",
        "generics": []
      },
      "generics": [],
      "params": [
        {
          "name": "image",
          "type": {
            "ref": "ImageBitmapSource",
            "generics": [],
            "isFuture": false
          }
        },
        {
          "name": "sx",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "sy",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "sw",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "sh",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "options",
          "type": {
            "ref": "ImageBitmapOptions",
            "generics": [],
            "isFuture": false
          }
        }
      ]
    },
    "fetch": {
      "type": {
        "isFuture": false,
        "ref": "Response",
        "generics": []
      },
      "generics": [],
      "params": [
        {
          "name": "input",
          "type": {
            "core": "any",
            "isFuture": false
          }
        },
        {
          "name": "init",
          "type": {
            "ref": "RequestInit",
            "generics": [],
            "isFuture": false
          }
        }
      ]
    },
    "queueMicrotask": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "callback",
          "type": {
            "ref": "VoidFunction",
            "generics": [],
            "isFuture": false
          }
        }
      ]
    },
    "reportError": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "e",
          "type": {
            "core": "any",
            "isFuture": false
          }
        }
      ]
    },
    "setInterval": {
      "type": {
        "core": "number",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "handler",
          "type": {
            "ref": "TimerHandler",
            "generics": [],
            "isFuture": false
          }
        },
        {
          "name": "timeout",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "arguments",
          "type": {
            "array": {
              "core": "any",
              "isFuture": false
            },
            "isFuture": false
          }
        }
      ]
    },
    "setTimeout": {
      "type": {
        "core": "number",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "handler",
          "type": {
            "ref": "TimerHandler",
            "generics": [],
            "isFuture": false
          }
        },
        {
          "name": "timeout",
          "type": {
            "core": "number",
            "isFuture": false
          }
        },
        {
          "name": "arguments",
          "type": {
            "array": {
              "core": "any",
              "isFuture": false
            },
            "isFuture": false
          }
        }
      ]
    },
    "structuredClone": {
      "type": {
        "core": "any",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "value",
          "type": {
            "core": "any",
            "isFuture": false
          }
        },
        {
          "name": "options",
          "type": {
            "ref": "StructuredSerializeOptions",
            "generics": [],
            "isFuture": false
          }
        }
      ]
    },
    "addEventListener": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "type",
          "type": {
            "core": "string",
            "isFuture": false
          }
        },
        {
          "name": "listener",
          "type": {
            "ref": "EventListenerOrEventListenerObject",
            "generics": [],
            "isFuture": false
          }
        },
        {
          "name": "options",
          "type": {
            "core": "any",
            "isFuture": false
          }
        }
      ]
    },
    "removeEventListener": {
      "type": {
        "core": "void",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "type",
          "type": {
            "core": "string",
            "isFuture": false
          }
        },
        {
          "name": "listener",
          "type": {
            "ref": "EventListenerOrEventListenerObject",
            "generics": [],
            "isFuture": false
          }
        },
        {
          "name": "options",
          "type": {
            "core": "any",
            "isFuture": false
          }
        }
      ]
    }
  },
  "vars": {
    "NodeFilter": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AbortController": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AbortSignal": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AbstractRange": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AnalyserNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Animation": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AnimationEffect": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AnimationEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AnimationPlaybackEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AnimationTimeline": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Attr": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioBuffer": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioBufferSourceNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioContext": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioDestinationNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioListener": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioParam": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioParamMap": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioProcessingEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioScheduledSourceNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioWorklet": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AudioWorkletNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AuthenticatorAssertionResponse": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AuthenticatorAttestationResponse": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "AuthenticatorResponse": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "BarProp": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "BaseAudioContext": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "BeforeUnloadEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "BiquadFilterNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Blob": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "BlobEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "BroadcastChannel": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ByteLengthQueuingStrategy": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CDATASection": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSAnimation": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSConditionRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSContainerRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSCounterStyleRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSFontFaceRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSFontPaletteValuesRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSGroupingRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSImportRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSKeyframeRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSKeyframesRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSLayerBlockRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSLayerStatementRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSMediaRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSNamespaceRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSPageRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSRuleList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSStyleDeclaration": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSStyleRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSStyleSheet": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSSupportsRule": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CSSTransition": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Cache": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CacheStorage": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CanvasCaptureMediaStreamTrack": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CanvasGradient": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CanvasPattern": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CanvasRenderingContext2D": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ChannelMergerNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ChannelSplitterNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CharacterData": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Clipboard": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ClipboardEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ClipboardItem": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CloseEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Comment": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CompositionEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ConstantSourceNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ConvolverNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CountQueuingStrategy": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Credential": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CredentialsContainer": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Crypto": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CryptoKey": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CustomElementRegistry": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "CustomEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMException": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMImplementation": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMMatrix": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      },
      "isFuture": false
    },
    "SVGMatrix": {
      "type": {
        "type": {
          "ref": "",
          "generics": [],
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "WebKitCSSMatrix": {
      "type": {
        "type": {
          "ref": "",
          "generics": [],
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "DOMMatrixReadOnly": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMParser": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMPoint": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      },
      "isFuture": false
    },
    "SVGPoint": {
      "type": {
        "type": {
          "ref": "",
          "generics": [],
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "DOMPointReadOnly": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMQuad": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMRect": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      },
      "isFuture": false
    },
    "SVGRect": {
      "type": {
        "type": {
          "ref": "",
          "generics": [],
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "DOMRectList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMRectReadOnly": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMStringList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMStringMap": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DOMTokenList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DataTransfer": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DataTransferItem": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DataTransferItemList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DelayNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DeviceMotionEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DeviceOrientationEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Document": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DocumentFragment": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DocumentTimeline": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DocumentType": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DragEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "DynamicsCompressorNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Element": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ElementInternals": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ErrorEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Event": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "EventCounts": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "EventSource": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "EventTarget": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "External": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "File": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileReader": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileSystem": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileSystemDirectoryEntry": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileSystemDirectoryHandle": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileSystemDirectoryReader": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileSystemEntry": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileSystemFileEntry": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileSystemFileHandle": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FileSystemHandle": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FocusEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FontFace": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FontFaceSet": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FontFaceSetLoadEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FormData": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "FormDataEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "GainNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Gamepad": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "GamepadButton": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "GamepadEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "GamepadHapticActuator": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Geolocation": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "GeolocationCoordinates": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "GeolocationPosition": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "GeolocationPositionError": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLAllCollection": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLAnchorElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLAreaElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLAudioElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLBRElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLBaseElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLBodyElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLButtonElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLCanvasElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLCollection": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLDListElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLDataElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLDataListElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLDetailsElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLDialogElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLDirectoryElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLDivElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLDocument": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLEmbedElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLFieldSetElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLFontElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLFormControlsCollection": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLFormElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLFrameElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLFrameSetElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLHRElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLHeadElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLHeadingElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLHtmlElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLIFrameElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLImageElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLInputElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLLIElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLLabelElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLLegendElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLLinkElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLMapElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLMarqueeElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLMediaElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLMenuElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLMetaElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLMeterElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLModElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLOListElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLObjectElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLOptGroupElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLOptionElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLOptionsCollection": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLOutputElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLParagraphElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLParamElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLPictureElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLPreElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLProgressElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLQuoteElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLScriptElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLSelectElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLSlotElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLSourceElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLSpanElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLStyleElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTableCaptionElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTableCellElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTableColElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTableElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTableRowElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTableSectionElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTemplateElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTextAreaElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTimeElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTitleElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLTrackElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLUListElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLUnknownElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HTMLVideoElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "HashChangeEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Headers": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "History": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBCursor": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBCursorWithValue": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBDatabase": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBFactory": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBIndex": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBKeyRange": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBObjectStore": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBOpenDBRequest": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBRequest": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBTransaction": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IDBVersionChangeEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IIRFilterNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IdleDeadline": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ImageBitmap": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ImageBitmapRenderingContext": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ImageData": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "InputDeviceInfo": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "InputEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IntersectionObserver": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "IntersectionObserverEntry": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "KeyboardEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "KeyframeEffect": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Location": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Lock": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "LockManager": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MathMLElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaCapabilities": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaDeviceInfo": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaDevices": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaElementAudioSourceNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaEncryptedEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaError": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaKeyMessageEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaKeySession": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaKeyStatusMap": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaKeySystemAccess": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaKeys": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaMetadata": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaQueryList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaQueryListEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaRecorder": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaSession": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaSource": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaStream": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaStreamAudioDestinationNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaStreamAudioSourceNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaStreamTrack": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MediaStreamTrackEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MessageChannel": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MessageEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MessagePort": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MimeType": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MimeTypeArray": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MouseEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MutationEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MutationObserver": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "MutationRecord": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "NamedNodeMap": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "NavigationPreloadManager": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Navigator": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Node": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "NodeIterator": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "NodeList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Notification": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "OfflineAudioCompletionEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "OfflineAudioContext": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "OffscreenCanvas": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "OffscreenCanvasRenderingContext2D": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "OscillatorNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "OverconstrainedError": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PageTransitionEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PannerNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Path2D": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PaymentMethodChangeEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PaymentRequest": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PaymentRequestUpdateEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PaymentResponse": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Performance": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceEntry": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceEventTiming": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceMark": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceMeasure": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceNavigation": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceNavigationTiming": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceObserver": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceObserverEntryList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformancePaintTiming": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceResourceTiming": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceServerTiming": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PerformanceTiming": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PeriodicWave": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PermissionStatus": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Permissions": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PictureInPictureEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PictureInPictureWindow": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Plugin": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PluginArray": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PointerEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PopStateEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ProcessingInstruction": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ProgressEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PromiseRejectionEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PublicKeyCredential": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PushManager": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PushSubscription": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "PushSubscriptionOptions": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCCertificate": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCDTMFSender": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCDTMFToneChangeEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCDataChannel": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCDataChannelEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCDtlsTransport": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCEncodedAudioFrame": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCEncodedVideoFrame": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCError": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCErrorEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCIceCandidate": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCIceTransport": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCPeerConnection": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCPeerConnectionIceErrorEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCPeerConnectionIceEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCRtpReceiver": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCRtpSender": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCRtpTransceiver": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCSctpTransport": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCSessionDescription": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCStatsReport": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RTCTrackEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RadioNodeList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Range": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ReadableByteStreamController": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ReadableStream": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ReadableStreamBYOBReader": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ReadableStreamBYOBRequest": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ReadableStreamDefaultController": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ReadableStreamDefaultReader": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "RemotePlayback": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Request": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ResizeObserver": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ResizeObserverEntry": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ResizeObserverSize": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Response": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAngle": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimateElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimateMotionElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimateTransformElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedAngle": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedBoolean": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedEnumeration": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedInteger": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedLength": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedLengthList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedNumber": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedNumberList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedPreserveAspectRatio": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedRect": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedString": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimatedTransformList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGAnimationElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGCircleElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGClipPathElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGComponentTransferFunctionElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGDefsElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGDescElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGEllipseElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEBlendElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEColorMatrixElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEComponentTransferElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFECompositeElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEConvolveMatrixElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEDiffuseLightingElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEDisplacementMapElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEDistantLightElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEDropShadowElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEFloodElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEFuncAElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEFuncBElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEFuncGElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEFuncRElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEGaussianBlurElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEImageElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEMergeElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEMergeNodeElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEMorphologyElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEOffsetElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFEPointLightElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFESpecularLightingElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFESpotLightElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFETileElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFETurbulenceElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGFilterElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGForeignObjectElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGGElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGGeometryElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGGradientElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGGraphicsElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGImageElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGLength": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGLengthList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGLineElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGLinearGradientElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGMPathElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGMarkerElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGMaskElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGMetadataElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGNumber": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGNumberList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGPathElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGPatternElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGPointList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGPolygonElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGPolylineElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGPreserveAspectRatio": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGRadialGradientElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGRectElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGSVGElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGScriptElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGSetElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGStopElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGStringList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGStyleElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGSwitchElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGSymbolElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGTSpanElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGTextContentElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGTextElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGTextPathElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGTextPositioningElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGTitleElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGTransform": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGTransformList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGUnitTypes": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGUseElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SVGViewElement": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Screen": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ScreenOrientation": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ScriptProcessorNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SecurityPolicyViolationEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Selection": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ServiceWorker": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ServiceWorkerContainer": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ServiceWorkerRegistration": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ShadowRoot": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SharedWorker": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SourceBuffer": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SourceBufferList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SpeechRecognitionAlternative": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SpeechRecognitionResult": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SpeechRecognitionResultList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SpeechSynthesis": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SpeechSynthesisErrorEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SpeechSynthesisEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SpeechSynthesisUtterance": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SpeechSynthesisVoice": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "StaticRange": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "StereoPannerNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Storage": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "StorageEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "StorageManager": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "StyleSheet": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "StyleSheetList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SubmitEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "SubtleCrypto": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Text": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TextDecoder": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TextDecoderStream": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TextEncoder": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TextEncoderStream": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TextMetrics": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TextTrack": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TextTrackCue": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TextTrackCueList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TextTrackList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TimeRanges": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Touch": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TouchEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TouchList": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TrackEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TransformStream": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TransformStreamDefaultController": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TransitionEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "TreeWalker": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "UIEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "URL": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      },
      "isFuture": false
    },
    "webkitURL": {
      "type": {
        "type": {
          "ref": "",
          "generics": [],
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "URLSearchParams": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "VTTCue": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "VTTRegion": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "ValidityState": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "VideoColorSpace": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "VideoPlaybackQuality": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "VisualViewport": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WaveShaperNode": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGL2RenderingContext": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLActiveInfo": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLBuffer": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLContextEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLFramebuffer": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLProgram": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLQuery": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLRenderbuffer": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLRenderingContext": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLSampler": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLShader": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLShaderPrecisionFormat": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLSync": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLTexture": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLTransformFeedback": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLUniformLocation": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebGLVertexArrayObject": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WebSocket": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WheelEvent": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Window": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Worker": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Worklet": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WritableStream": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WritableStreamDefaultController": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "WritableStreamDefaultWriter": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "XMLDocument": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "XMLHttpRequest": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "XMLHttpRequestEventTarget": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "XMLHttpRequestUpload": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "XMLSerializer": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "XPathEvaluator": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "XPathExpression": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "XPathResult": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "XSLTProcessor": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "console": {
      "type": {
        "ref": "Console",
        "generics": [],
        "isFuture": false
      }
    },
    "Audio": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Image": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "Option": {
      "type": {
        "ref": "",
        "generics": [],
        "isFuture": false
      }
    },
    "clientInformation": {
      "type": {
        "ref": "Navigator",
        "generics": [],
        "isFuture": false
      }
    },
    "closed": {
      "type": {
        "core": "boolean",
        "isFuture": false
      }
    },
    "customElements": {
      "type": {
        "ref": "CustomElementRegistry",
        "generics": [],
        "isFuture": false
      }
    },
    "devicePixelRatio": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "document": {
      "type": {
        "ref": "Document",
        "generics": [],
        "isFuture": false
      }
    },
    "event": {
      "type": {
        "ref": "Event",
        "generics": [],
        "isFuture": false
      }
    },
    "external": {
      "type": {
        "ref": "External",
        "generics": [],
        "isFuture": false
      }
    },
    "frameElement": {
      "type": {
        "ref": "Element",
        "generics": [],
        "isFuture": false
      }
    },
    "frames": {
      "type": {
        "ref": "WindowProxy",
        "generics": [],
        "isFuture": false
      }
    },
    "history": {
      "type": {
        "ref": "History",
        "generics": [],
        "isFuture": false
      }
    },
    "innerHeight": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "innerWidth": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "length": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "location": {
      "type": {
        "ref": "Location",
        "generics": [],
        "isFuture": false
      }
    },
    "locationbar": {
      "type": {
        "ref": "BarProp",
        "generics": [],
        "isFuture": false
      }
    },
    "menubar": {
      "type": {
        "ref": "BarProp",
        "generics": [],
        "isFuture": false
      }
    },
    "name": {
      "type": {
        "core": "void",
        "isFuture": false
      }
    },
    "navigator": {
      "type": {
        "ref": "Navigator",
        "generics": [],
        "isFuture": false
      }
    },
    "ondevicemotion": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "DeviceMotionEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondeviceorientation": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "DeviceOrientationEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onorientationchange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "opener": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "orientation": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "outerHeight": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "outerWidth": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "pageXOffset": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "pageYOffset": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "parent": {
      "type": {
        "ref": "WindowProxy",
        "generics": [],
        "isFuture": false
      }
    },
    "personalbar": {
      "type": {
        "ref": "BarProp",
        "generics": [],
        "isFuture": false
      }
    },
    "screen": {
      "type": {
        "ref": "Screen",
        "generics": [],
        "isFuture": false
      }
    },
    "screenLeft": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "screenTop": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "screenX": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "screenY": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "scrollX": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "scrollY": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "scrollbars": {
      "type": {
        "ref": "BarProp",
        "generics": [],
        "isFuture": false
      }
    },
    "self": {
      "type": {
        "intersect": [
          {
            "ref": "Window",
            "generics": [],
            "isFuture": false
          },
          {
            "core": "any",
            "isFuture": false
          }
        ],
        "isFuture": false
      }
    },
    "speechSynthesis": {
      "type": {
        "ref": "SpeechSynthesis",
        "generics": [],
        "isFuture": false
      }
    },
    "status": {
      "type": {
        "core": "string",
        "isFuture": false
      }
    },
    "statusbar": {
      "type": {
        "ref": "BarProp",
        "generics": [],
        "isFuture": false
      }
    },
    "toolbar": {
      "type": {
        "ref": "BarProp",
        "generics": [],
        "isFuture": false
      }
    },
    "top": {
      "type": {
        "ref": "WindowProxy",
        "generics": [],
        "isFuture": false
      }
    },
    "visualViewport": {
      "type": {
        "ref": "VisualViewport",
        "generics": [],
        "isFuture": false
      }
    },
    "window": {
      "type": {
        "intersect": [
          {
            "ref": "Window",
            "generics": [],
            "isFuture": false
          },
          {
            "core": "any",
            "isFuture": false
          }
        ],
        "isFuture": false
      }
    },
    "onabort": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "UIEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onanimationcancel": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "AnimationEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onanimationend": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "AnimationEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onanimationiteration": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "AnimationEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onanimationstart": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "AnimationEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onauxclick": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onbeforeinput": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "InputEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onblur": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "FocusEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "oncancel": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "oncanplay": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "oncanplaythrough": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onchange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onclick": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onclose": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "oncontextmenu": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "oncuechange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondblclick": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondrag": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "DragEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondragend": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "DragEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondragenter": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "DragEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondragleave": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "DragEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondragover": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "DragEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondragstart": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "DragEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondrop": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "DragEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ondurationchange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onemptied": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onended": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onerror": {
      "type": {
        "ref": "OnErrorEventHandler",
        "generics": [],
        "isFuture": false
      }
    },
    "onfocus": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "FocusEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onformdata": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "FormDataEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ongotpointercapture": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "oninput": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "oninvalid": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onkeydown": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "KeyboardEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onkeypress": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "KeyboardEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onkeyup": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "KeyboardEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onload": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onloadeddata": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onloadedmetadata": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onloadstart": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onlostpointercapture": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onmousedown": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onmouseenter": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onmouseleave": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onmousemove": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onmouseout": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onmouseover": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onmouseup": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MouseEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpause": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onplay": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onplaying": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpointercancel": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpointerdown": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpointerenter": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpointerleave": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpointermove": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpointerout": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpointerover": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpointerup": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PointerEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onprogress": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "ProgressEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onratechange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onreset": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onresize": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "UIEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onscroll": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onsecuritypolicyviolation": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "SecurityPolicyViolationEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onseeked": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onseeking": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onselect": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onselectionchange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onselectstart": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onslotchange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onstalled": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onsubmit": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "SubmitEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onsuspend": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontimeupdate": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontoggle": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontouchcancel": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "TouchEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontouchend": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "TouchEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontouchmove": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "TouchEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontouchstart": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "TouchEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontransitioncancel": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "TransitionEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontransitionend": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "TransitionEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontransitionrun": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "TransitionEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ontransitionstart": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "TransitionEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onvolumechange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onwaiting": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onwebkitanimationend": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onwebkitanimationiteration": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onwebkitanimationstart": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onwebkittransitionend": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onwheel": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "WheelEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onafterprint": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onbeforeprint": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onbeforeunload": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "BeforeUnloadEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ongamepadconnected": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "GamepadEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ongamepaddisconnected": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "GamepadEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onhashchange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "HashChangeEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onlanguagechange": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onmessage": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MessageEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onmessageerror": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "MessageEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onoffline": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ononline": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpagehide": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PageTransitionEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpageshow": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PageTransitionEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onpopstate": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PopStateEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onrejectionhandled": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PromiseRejectionEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onstorage": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "StorageEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onunhandledrejection": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "PromiseRejectionEvent",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "onunload": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "this",
            "type": {
              "ref": "Window",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "ev",
            "type": {
              "ref": "Event",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "localStorage": {
      "type": {
        "ref": "Storage",
        "generics": [],
        "isFuture": false
      }
    },
    "caches": {
      "type": {
        "ref": "CacheStorage",
        "generics": [],
        "isFuture": false
      }
    },
    "crossOriginIsolated": {
      "type": {
        "core": "boolean",
        "isFuture": false
      }
    },
    "crypto": {
      "type": {
        "ref": "Crypto",
        "generics": [],
        "isFuture": false
      }
    },
    "indexedDB": {
      "type": {
        "ref": "IDBFactory",
        "generics": [],
        "isFuture": false
      }
    },
    "isSecureContext": {
      "type": {
        "core": "boolean",
        "isFuture": false
      }
    },
    "origin": {
      "type": {
        "core": "string",
        "isFuture": false
      }
    },
    "performance": {
      "type": {
        "ref": "Performance",
        "generics": [],
        "isFuture": false
      }
    },
    "sessionStorage": {
      "type": {
        "ref": "Storage",
        "generics": [],
        "isFuture": false
      }
    }
  },
  "modules": {
    "CSS": {
      "typedefs": {},
      "structs": {},
      "funcs": {
        "escape": {
          "type": {
            "core": "string",
            "isFuture": false
          },
          "generics": [],
          "params": [
            {
              "name": "ident",
              "type": {
                "core": "string",
                "isFuture": false
              }
            }
          ]
        },
        "supports": {
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "generics": [],
          "params": [
            {
              "name": "conditionText",
              "type": {
                "core": "string",
                "isFuture": false
              }
            }
          ]
        }
      },
      "vars": {},
      "modules": {}
    },
    "WebAssembly": {
      "typedefs": {
        "ImportExportKind": {
          "type": {
            "core": "any",
            "isFuture": false
          }
        },
        "TableKind": {
          "type": {
            "core": "any",
            "isFuture": false
          }
        },
        "ValueType": {
          "type": {
            "core": "any",
            "isFuture": false
          }
        },
        "ExportValue": {
          "type": {
            "core": "any",
            "isFuture": false
          }
        },
        "Exports": {
          "type": {
            "ref": "Record",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              },
              {
                "ref": "ExportValue",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          }
        },
        "ImportValue": {
          "type": {
            "core": "any",
            "isFuture": false
          }
        },
        "Imports": {
          "type": {
            "ref": "Record",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              },
              {
                "ref": "ModuleImports",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          }
        },
        "ModuleImports": {
          "type": {
            "ref": "Record",
            "generics": [
              {
                "core": "string",
                "isFuture": false
              },
              {
                "ref": "ImportValue",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          }
        }
      },
      "structs": {
        "CompileError": {
          "indexes": [],
          "props": {},
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "": {
          "indexes": [],
          "props": {
            "prototype": {
              "_": 17428,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "Table",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            },
            "undefined": {
              "_": 17429,
              "isMethod": true,
              "isNullable": false,
              "type": {
                "ref": "Table",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false
        },
        "Global": {
          "indexes": [],
          "props": {
            "value": {
              "_": 17363,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "valueOf": {
              "_": 17364,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "Instance": {
          "indexes": [],
          "props": {
            "exports": {
              "_": 17373,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "Exports",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "LinkError": {
          "indexes": [],
          "props": {},
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "Memory": {
          "indexes": [],
          "props": {
            "buffer": {
              "_": 17391,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "ArrayBuffer",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            },
            "grow": {
              "_": 17392,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "Module": {
          "indexes": [],
          "props": {},
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "RuntimeError": {
          "indexes": [],
          "props": {},
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "Table": {
          "indexes": [],
          "props": {
            "length": {
              "_": 17421,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "get": {
              "_": 17422,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "grow": {
              "_": 17423,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "set": {
              "_": 17424,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "core": "void",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "GlobalDescriptor": {
          "indexes": [],
          "props": {
            "mutable": {
              "_": 17433,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            },
            "value": {
              "_": 17434,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "ValueType",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "MemoryDescriptor": {
          "indexes": [],
          "props": {
            "initial": {
              "_": 17438,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "maximum": {
              "_": 17439,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "shared": {
              "_": 17440,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "ModuleExportDescriptor": {
          "indexes": [],
          "props": {
            "kind": {
              "_": 17444,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "ImportExportKind",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            },
            "name": {
              "_": 17445,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "ModuleImportDescriptor": {
          "indexes": [],
          "props": {
            "kind": {
              "_": 17449,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "ImportExportKind",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            },
            "module": {
              "_": 17450,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "name": {
              "_": 17451,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "TableDescriptor": {
          "indexes": [],
          "props": {
            "element": {
              "_": 17455,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "TableKind",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            },
            "initial": {
              "_": 17456,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "maximum": {
              "_": 17457,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "WebAssemblyInstantiatedSource": {
          "indexes": [],
          "props": {
            "instance": {
              "_": 17461,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "Instance",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            },
            "module": {
              "_": 17462,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "Module",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        }
      },
      "funcs": {
        "compile": {
          "type": {
            "isFuture": false,
            "ref": "Module",
            "generics": []
          },
          "generics": [],
          "params": [
            {
              "name": "bytes",
              "type": {
                "ref": "BufferSource",
                "generics": [],
                "isFuture": false
              }
            }
          ]
        },
        "compileStreaming": {
          "type": {
            "isFuture": false,
            "ref": "Module",
            "generics": []
          },
          "generics": [],
          "params": [
            {
              "name": "source",
              "type": {
                "core": "any",
                "isFuture": false
              }
            }
          ]
        },
        "instantiate": {
          "type": {
            "isFuture": false,
            "ref": "Instance",
            "generics": []
          },
          "generics": [],
          "params": [
            {
              "name": "moduleObject",
              "type": {
                "ref": "Module",
                "generics": [],
                "isFuture": false
              }
            },
            {
              "name": "importObject",
              "type": {
                "ref": "Imports",
                "generics": [],
                "isFuture": false
              }
            }
          ]
        },
        "instantiateStreaming": {
          "type": {
            "isFuture": false,
            "ref": "WebAssemblyInstantiatedSource",
            "generics": []
          },
          "generics": [],
          "params": [
            {
              "name": "source",
              "type": {
                "core": "any",
                "isFuture": false
              }
            },
            {
              "name": "importObject",
              "type": {
                "ref": "Imports",
                "generics": [],
                "isFuture": false
              }
            }
          ]
        },
        "validate": {
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "generics": [],
          "params": [
            {
              "name": "bytes",
              "type": {
                "ref": "BufferSource",
                "generics": [],
                "isFuture": false
              }
            }
          ]
        }
      },
      "vars": {
        "CompileError": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        },
        "Global": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        },
        "Instance": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        },
        "LinkError": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        },
        "Memory": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        },
        "Module": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        },
        "RuntimeError": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        },
        "Table": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        }
      },
      "modules": {}
    }
  }
}