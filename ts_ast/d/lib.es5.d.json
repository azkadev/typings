{
  "typedefs": {
    "PropertyKey": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ThisParameterType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "OmitThisParameter": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ClassDecorator": {
      "type": {
        "generics": [
          {
            "name": "TFunction",
            "constraint": {
              "ref": "Function",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "params": [
          {
            "name": "target",
            "type": {
              "ref": "TFunction",
              "generics": [],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "PropertyDecorator": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "target",
            "type": {
              "ref": "Object",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "propertyKey",
            "type": {
              "core": "any",
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "MethodDecorator": {
      "type": {
        "generics": [
          {
            "name": "T",
            "constraint": {
              "core": "any",
              "isFuture": false
            }
          }
        ],
        "params": [
          {
            "name": "target",
            "type": {
              "ref": "Object",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "propertyKey",
            "type": {
              "core": "any",
              "isFuture": false
            }
          },
          {
            "name": "descriptor",
            "type": {
              "ref": "TypedPropertyDescriptor",
              "generics": [
                {
                  "ref": "T",
                  "generics": [],
                  "isFuture": false
                }
              ],
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "ParameterDecorator": {
      "type": {
        "generics": [],
        "params": [
          {
            "name": "target",
            "type": {
              "ref": "Object",
              "generics": [],
              "isFuture": false
            }
          },
          {
            "name": "propertyKey",
            "type": {
              "core": "any",
              "isFuture": false
            }
          },
          {
            "name": "parameterIndex",
            "type": {
              "core": "number",
              "isFuture": false
            }
          }
        ],
        "isFuture": false
      }
    },
    "PromiseConstructorLike": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "Awaited": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "Partial": {
      "type": {
        "key": {
          "name": "P",
          "constraint": {
            "keyOf": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          }
        },
        "value": {
          "index": {
            "ref": "P",
            "generics": [],
            "isFuture": false
          },
          "obj": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "Required": {
      "type": {
        "key": {
          "name": "P",
          "constraint": {
            "keyOf": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          }
        },
        "value": {
          "index": {
            "ref": "P",
            "generics": [],
            "isFuture": false
          },
          "obj": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "Readonly": {
      "type": {
        "key": {
          "name": "P",
          "constraint": {
            "keyOf": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          }
        },
        "value": {
          "index": {
            "ref": "P",
            "generics": [],
            "isFuture": false
          },
          "obj": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "Pick": {
      "type": {
        "key": {
          "name": "P",
          "constraint": {
            "ref": "K",
            "generics": [],
            "isFuture": false
          }
        },
        "value": {
          "index": {
            "ref": "P",
            "generics": [],
            "isFuture": false
          },
          "obj": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "Record": {
      "type": {
        "key": {
          "name": "P",
          "constraint": {
            "ref": "K",
            "generics": [],
            "isFuture": false
          }
        },
        "value": {
          "ref": "T",
          "generics": [],
          "isFuture": false
        },
        "isFuture": false
      }
    },
    "Exclude": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "Extract": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "Omit": {
      "type": {
        "ref": "Pick",
        "generics": [
          {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          {
            "ref": "Exclude",
            "generics": [
              {
                "keyOf": {
                  "ref": "T",
                  "generics": [],
                  "isFuture": false
                },
                "isFuture": false
              },
              {
                "ref": "K",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          }
        ],
        "isFuture": false
      }
    },
    "NonNullable": {
      "type": {
        "intersect": [
          {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        ],
        "isFuture": false
      }
    },
    "Parameters": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ConstructorParameters": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "ReturnType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "InstanceType": {
      "type": {
        "core": "any",
        "isFuture": false
      }
    },
    "Uppercase": {},
    "Lowercase": {},
    "Capitalize": {},
    "Uncapitalize": {},
    "ArrayBufferLike": {
      "type": {
        "index": {
          "keyOf": {
            "ref": "ArrayBufferTypes",
            "generics": [],
            "isFuture": false
          },
          "isFuture": false
        },
        "obj": {
          "ref": "ArrayBufferTypes",
          "generics": [],
          "isFuture": false
        },
        "isFuture": false
      }
    }
  },
  "structs": {
    "Symbol": {
      "indexes": [],
      "props": {
        "toString": {
          "_": 101,
          "doc": "Returns a string representation of an object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 104,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "symbol",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PropertyDescriptor": {
      "indexes": [],
      "props": {
        "configurable": {
          "_": 110,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "enumerable": {
          "_": 111,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 112,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "writable": {
          "_": 113,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "get": {
          "_": 114,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 115,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "PropertyDescriptorMap": {
      "indexes": [
        {
          "_": 119,
          "key": {
            "ref": "PropertyKey",
            "generics": [],
            "isFuture": false
          },
          "value": {
            "ref": "PropertyDescriptor",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Object": {
      "indexes": [],
      "props": {
        "constructor": {
          "_": 124,
          "doc": "The initial value of Object.prototype.constructor is the standard built-in Object constructor.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Function",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 127,
          "doc": "Returns a string representation of an object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 130,
          "doc": "Returns a date converted to a string using the current locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 133,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Object",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "hasOwnProperty": {
          "_": 139,
          "doc": "Determines whether an object has a property with the specified name.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isPrototypeOf": {
          "_": 145,
          "doc": "Determines whether an object exists in another object's prototype chain.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "propertyIsEnumerable": {
          "_": 151,
          "doc": "Determines whether a specified property is enumerable.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Provides functionality common to all JavaScript objects."
    },
    "ObjectConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 157,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 160,
          "doc": "A reference to the prototype for a class of objects.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Object",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getPrototypeOf": {
          "_": 166,
          "doc": "Returns the prototype of an object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "getOwnPropertyDescriptor": {
          "_": 174,
          "doc": "Gets the own property descriptor of the specified object.\r\nAn own property descriptor is one that is defined directly on the object and is not inherited from the object's prototype.\nGets the own property descriptor of the specified object.\nAn own property descriptor is one that is defined directly on the object and is not inherited from the object's prototype.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "PropertyDescriptor",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "getOwnPropertyNames": {
          "_": 181,
          "doc": "Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\r\non that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\nReturns the names of the own properties of an object. The own properties of an object are those that are defined directly\non that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "create": {
          "_": 194,
          "doc": "Creates an object that has the specified prototype or that has null prototype.\nCreates an object that has the specified prototype, and that optionally contains specified properties.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "defineProperty": {
          "_": 202,
          "doc": "Adds a property to an object, or modifies attributes of an existing property.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "defineProperties": {
          "_": 209,
          "doc": "Adds one or more properties to an object, and/or modifies attributes of existing properties.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "seal": {
          "_": 215,
          "doc": "Prevents the modification of attributes of existing properties, and prevents the addition of new properties.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "freeze": {
          "_": 233,
          "doc": "Prevents the modification of existing property attributes and values, and prevents the addition of new properties.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Readonly",
            "generics": [
              {
                "ref": "T",
                "generics": [],
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        },
        "preventExtensions": {
          "_": 239,
          "doc": "Prevents the addition of new properties to an object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isSealed": {
          "_": 245,
          "doc": "Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isFrozen": {
          "_": 251,
          "doc": "Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "isExtensible": {
          "_": 257,
          "doc": "Returns a value that indicates whether new properties can be added to an object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "keys": {
          "_": 263,
          "doc": "Returns the names of the enumerable string properties and methods of an object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "core": "string",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Function": {
      "indexes": [],
      "props": {
        "apply": {
          "_": 280,
          "doc": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "call": {
          "_": 287,
          "doc": "Calls a method of an object, substituting another object for the current object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "bind": {
          "_": 295,
          "doc": "For a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.\nFor a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 298,
          "doc": "Returns a string representation of a function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 300,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 301,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "arguments": {
          "_": 304,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "caller": {
          "_": 305,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Function",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Creates a new function."
    },
    "FunctionConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 314,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Function",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 315,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Function",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "CallableFunction": {
      "indexes": [],
      "props": {
        "apply": {
          "_": 337,
          "doc": "Calls the function with the specified object as the this value and the elements of specified array as the arguments.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "R",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "call": {
          "_": 344,
          "doc": "Calls the function with the specified object as the this value and the specified rest arguments as the arguments.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "R",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "bind": {
          "_": 357,
          "doc": "For a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.\nFor a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "args",
                "type": {
                  "array": {
                    "ref": "AX",
                    "generics": [],
                    "isFuture": false
                  },
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "NewableFunction": {
      "indexes": [],
      "props": {
        "apply": {
          "_": 367,
          "doc": "Calls the function with the specified object as the this value and the elements of specified array as the arguments.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "call": {
          "_": 374,
          "doc": "Calls the function with the specified object as the this value and the specified rest arguments as the arguments.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "bind": {
          "_": 387,
          "doc": "For a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.\nFor a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "IArguments": {
      "indexes": [
        {
          "_": 391,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 392,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "callee": {
          "_": 393,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Function",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "String": {
      "indexes": [],
      "props": {
        "localeCompare": {
          "_": 4504,
          "doc": "Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Allows manipulation and formatting of text strings and determination and location of substrings within strings."
    },
    "StringConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 522,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 523,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "String",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "fromCharCode": {
          "_": 524,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Boolean": {
      "indexes": [],
      "props": {
        "valueOf": {
          "_": 534,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "BooleanConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 539,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 540,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Boolean",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Number": {
      "indexes": [],
      "props": {
        "toLocaleString": {
          "_": 4513,
          "doc": "Converts a number to a string by using the current or specified locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers."
    },
    "NumberConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 576,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 577,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Number",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "MAX_VALUE": {
          "_": 580,
          "doc": "The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "MIN_VALUE": {
          "_": 583,
          "doc": "The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NaN": {
          "_": 589,
          "doc": "A value that is not a number.\r\nIn equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.\nA value that is not a number.\nIn equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "NEGATIVE_INFINITY": {
          "_": 595,
          "doc": "A value that is less than the largest negative number that can be represented in JavaScript.\r\nJavaScript displays NEGATIVE_INFINITY values as -infinity.\nA value that is less than the largest negative number that can be represented in JavaScript.\nJavaScript displays NEGATIVE_INFINITY values as -infinity.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "POSITIVE_INFINITY": {
          "_": 601,
          "doc": "A value greater than the largest number that can be represented in JavaScript.\r\nJavaScript displays POSITIVE_INFINITY values as infinity.\nA value greater than the largest number that can be represented in JavaScript.\nJavaScript displays POSITIVE_INFINITY values as infinity.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TemplateStringsArray": {
      "indexes": [],
      "props": {
        "raw": {
          "_": 608,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "keyOf": {
              "array": {
                "core": "string",
                "isFuture": false
              },
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ImportMeta": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The type of `import.meta`.\r\n\r\nIf you need to declare that a given property exists on `import.meta`,\r\nthis type may be augmented via interface merging.\nThe type of `import.meta`.\n\nIf you need to declare that a given property exists on `import.meta`,\nthis type may be augmented via interface merging."
    },
    "ImportCallOptions": {
      "indexes": [],
      "props": {
        "assert": {
          "_": 627,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ImportAssertions",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "The type for the optional second argument to `import()`.\r\n\r\nIf your host environment supports additional options, this type may be\r\naugmented via interface merging.\nThe type for the optional second argument to `import()`.\n\nIf your host environment supports additional options, this type may be\naugmented via interface merging."
    },
    "ImportAssertions": {
      "indexes": [
        {
          "_": 634,
          "key": {
            "core": "string",
            "isFuture": false
          },
          "value": {
            "core": "string",
            "isFuture": false
          }
        }
      ],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": "The type for the `assert` property of the optional second argument to `import()`."
    },
    "Math": {
      "indexes": [],
      "props": {
        "E": {
          "_": 639,
          "doc": "The mathematical constant e. This is Euler's number, the base of natural logarithms.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LN10": {
          "_": 641,
          "doc": "The natural logarithm of 10.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LN2": {
          "_": 643,
          "doc": "The natural logarithm of 2.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LOG2E": {
          "_": 645,
          "doc": "The base-2 logarithm of e.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "LOG10E": {
          "_": 647,
          "doc": "The base-10 logarithm of e.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "PI": {
          "_": 649,
          "doc": "Pi. This is the ratio of the circumference of a circle to its diameter.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SQRT1_2": {
          "_": 651,
          "doc": "The square root of 0.5, or, equivalently, one divided by the square root of 2.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "SQRT2": {
          "_": 653,
          "doc": "The square root of 2.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "abs": {
          "_": 659,
          "doc": "Returns the absolute value of a number (the value without regard to whether it is positive or negative).\r\nFor example, the absolute value of -5 is the same as the absolute value of 5.\nReturns the absolute value of a number (the value without regard to whether it is positive or negative).\nFor example, the absolute value of -5 is the same as the absolute value of 5.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "acos": {
          "_": 664,
          "doc": "Returns the arc cosine (or inverse cosine) of a number.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "asin": {
          "_": 669,
          "doc": "Returns the arcsine of a number.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "atan": {
          "_": 674,
          "doc": "Returns the arctangent of a number.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "atan2": {
          "_": 680,
          "doc": "Returns the angle (in radians) from the X axis to a point.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "ceil": {
          "_": 685,
          "doc": "Returns the smallest integer greater than or equal to its numeric argument.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "cos": {
          "_": 690,
          "doc": "Returns the cosine of a number.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "exp": {
          "_": 695,
          "doc": "Returns e (the base of natural logarithms) raised to a power.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "floor": {
          "_": 700,
          "doc": "Returns the greatest integer less than or equal to its numeric argument.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "log": {
          "_": 705,
          "doc": "Returns the natural logarithm (base e) of a number.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "max": {
          "_": 710,
          "doc": "Returns the larger of a set of supplied numeric expressions.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "min": {
          "_": 715,
          "doc": "Returns the smaller of a set of supplied numeric expressions.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "pow": {
          "_": 721,
          "doc": "Returns the value of a base expression taken to a specified power.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "random": {
          "_": 723,
          "doc": "Returns a pseudorandom number between 0 and 1.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "round": {
          "_": 728,
          "doc": "Returns a supplied numeric expression rounded to the nearest integer.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sin": {
          "_": 733,
          "doc": "Returns the sine of a number.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "sqrt": {
          "_": 738,
          "doc": "Returns the square root of a number.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "tan": {
          "_": 743,
          "doc": "Returns the tangent of a number.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An intrinsic object that provides basic mathematics functionality and constants."
    },
    "Date": {
      "indexes": [],
      "props": {
        "toLocaleString": {
          "_": 4522,
          "doc": "Returns a value as a string value appropriate to the host environment's current locale.\nConverts a date and time to a string by using the current or specified locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleDateString": {
          "_": 4528,
          "doc": "Returns a date as a string value appropriate to the host environment's current locale.\nConverts a date to a string by using the current or specified locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleTimeString": {
          "_": 4535,
          "doc": "Returns a time as a string value appropriate to the host environment's current locale.\nConverts a time to a string by using the current or specified locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Enables basic storage and retrieval of dates and times."
    },
    "DateConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 916,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 917,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Date",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "parse": {
          "_": 922,
          "doc": "Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "UTC": {
          "_": 933,
          "doc": "Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "now": {
          "_": 935,
          "doc": "Returns the number of milliseconds elapsed since midnight, January 1, 1970 Universal Coordinated Time (UTC).",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RegExpMatchArray": {
      "indexes": [],
      "props": {
        "0": {
          "_": 952,
          "doc": "The first match. This will always be present because `null` will be returned if there are no matches.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "index": {
          "_": 944,
          "doc": "The index of the search at which the result was found.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "input": {
          "_": 948,
          "doc": "A copy of the search string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RegExpExecArray": {
      "indexes": [],
      "props": {
        "0": {
          "_": 967,
          "doc": "The first match. This will always be present because `null` will be returned if there are no matches.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "index": {
          "_": 959,
          "doc": "The index of the search at which the result was found.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "input": {
          "_": 963,
          "doc": "A copy of the search string.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RegExp": {
      "indexes": [],
      "props": {
        "exec": {
          "_": 975,
          "doc": "Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "RegExpExecArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "test": {
          "_": 981,
          "doc": "Returns a Boolean value that indicates whether or not a pattern exists in a searched string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "source": {
          "_": 984,
          "doc": "Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "global": {
          "_": 987,
          "doc": "Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "ignoreCase": {
          "_": 990,
          "doc": "Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "multiline": {
          "_": 993,
          "doc": "Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndex": {
          "_": 995,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "compile": {
          "_": 999,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RegExpConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 1006,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RegExp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 1007,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RegExp",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "$1": {
          "_": 1011,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "$2": {
          "_": 1013,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "$3": {
          "_": 1015,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "$4": {
          "_": 1017,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "$5": {
          "_": 1019,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "$6": {
          "_": 1021,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "$7": {
          "_": 1023,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "$8": {
          "_": 1025,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "$9": {
          "_": 1027,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "input": {
          "_": 1029,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "$_": {
          "_": 1031,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastMatch": {
          "_": 1033,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "\"$&\"": {
          "_": 1035,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastParen": {
          "_": 1037,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "\"$+\"": {
          "_": 1039,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "leftContext": {
          "_": 1041,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "\"$`\"": {
          "_": 1043,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "rightContext": {
          "_": 1045,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "\"$'\"": {
          "_": 1047,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Error": {
      "indexes": [],
      "props": {
        "name": {
          "_": 1053,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "message": {
          "_": 1054,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "stack": {
          "_": 1055,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ErrorConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 1060,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Error",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 1061,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Error",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EvalError": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "EvalErrorConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 1071,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "EvalError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 1072,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "EvalError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RangeError": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "RangeErrorConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 1082,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "RangeError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 1083,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "RangeError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ReferenceError": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ReferenceErrorConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 1093,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ReferenceError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 1094,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ReferenceError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SyntaxError": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "SyntaxErrorConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 1104,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "SyntaxError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 1105,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "SyntaxError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TypeError": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TypeErrorConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 1115,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "TypeError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 1116,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "TypeError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "URIError": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "URIErrorConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 1126,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "URIError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 1127,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "URIError",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "JSON": {
      "indexes": [],
      "props": {
        "parse": {
          "_": 1139,
          "doc": "Converts a JavaScript Object Notation (JSON) string into an object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "any",
            "isFuture": false
          },
          "isStatic": false
        },
        "stringify": {
          "_": 1160,
          "doc": "Converts a JavaScript value to a JavaScript Object Notation (JSON) string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format."
    },
    "ReadonlyArray": {
      "indexes": [
        {
          "_": 1300,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 1177,
          "doc": "Gets the length of the array. This is a number one higher than the highest element defined in an array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 1181,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 1185,
          "doc": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "concat": {
          "_": 1195,
          "doc": "Combines two or more arrays.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 1200,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 1206,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 1212,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 1218,
          "doc": "Returns the index of the last occurrence of a specified value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 1239,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 1248,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 1254,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 1260,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that contains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "U",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 1272,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 1285,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 1298,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "ConcatArray": {
      "indexes": [
        {
          "_": 1305,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 1304,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 1306,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 1307,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "Array": {
      "indexes": [
        {
          "_": 1491,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 1314,
          "doc": "Gets or sets the length of the array. This is a number one higher than the highest index in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 1318,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 1322,
          "doc": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "pop": {
          "_": 1327,
          "doc": "Removes the last element from an array and returns it.\r\nIf the array is empty, undefined is returned and the array is not modified.\nRemoves the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "push": {
          "_": 1332,
          "doc": "Appends new elements to the end of an array, and returns the new length of the array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "concat": {
          "_": 1344,
          "doc": "Combines two or more arrays.\r\nThis method returns a new array without modifying any existing arrays.\nCombines two or more arrays.\nThis method returns a new array without modifying any existing arrays.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 1349,
          "doc": "Adds all the elements of an array into a string, separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 1354,
          "doc": "Reverses the elements in an array in place.\r\nThis method mutates the array and returns a reference to the same array.\nReverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "shift": {
          "_": 1359,
          "doc": "Removes the first element from an array and returns it.\r\nIf the array is empty, undefined is returned and the array is not modified.\nRemoves the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 1369,
          "doc": "Returns a copy of a section of an array.\r\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\r\nFor example, -2 refers to the second to last element of the array.\nReturns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 1380,
          "doc": "Sorts an array in place.\r\nThis method mutates the array and returns a reference to the same array.\nSorts an array in place.\nThis method mutates the array and returns a reference to the same array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "splice": {
          "_": 1395,
          "doc": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "unshift": {
          "_": 1400,
          "doc": "Inserts new elements at the start of an array, and returns the new length of the array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 1406,
          "doc": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 1412,
          "doc": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 1430,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 1439,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 1445,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 1451,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that contains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "U",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 1463,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 1476,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 1489,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "ArrayConstructor": {
      "indexes": [],
      "props": {
        "undefined": {
          "_": 1500,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "array": {
              "ref": "T",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "isArray": {
          "_": 1501,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "predicate": "arg",
            "type": {
              "array": {
                "core": "any",
                "isFuture": false
              },
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        },
        "prototype": {
          "_": 1502,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "array": {
              "core": "any",
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "TypedPropertyDescriptor": {
      "indexes": [],
      "props": {
        "enumerable": {
          "_": 1508,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "configurable": {
          "_": 1509,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "writable": {
          "_": 1510,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "value": {
          "_": 1511,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "get": {
          "_": 1512,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "generics": [],
            "params": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 1513,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "generics": [],
            "params": [
              {
                "name": "value",
                "type": {
                  "ref": "T",
                  "generics": [],
                  "isFuture": false
                }
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "PromiseLike": {
      "indexes": [],
      "props": {
        "then": {
          "_": 1530,
          "doc": "Attaches callbacks for the resolution and/or rejection of the Promise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "PromiseLike",
            "generics": [
              {
                "core": "any",
                "isFuture": false
              }
            ],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "Promise": {
      "indexes": [],
      "props": {
        "then": {
          "_": 1543,
          "doc": "Attaches callbacks for the resolution and/or rejection of the Promise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "any"
          },
          "isStatic": false
        },
        "catch": {
          "_": 1550,
          "doc": "Attaches a callback for only the rejection of the Promise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "isFuture": false,
            "core": "any"
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": "Represents the completion of an asynchronous operation"
    },
    "ArrayLike": {
      "indexes": [
        {
          "_": 1566,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "ref": "T",
            "generics": [],
            "isFuture": false
          }
        }
      ],
      "props": {
        "length": {
          "_": 1565,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": ""
    },
    "": {
      "indexes": [],
      "props": {},
      "generics": [],
      "isClass": false
    },
    "ThisType": {
      "indexes": [],
      "props": {},
      "generics": [
        {
          "name": "T",
          "constraint": {
            "core": "any",
            "isFuture": false
          }
        }
      ],
      "isClass": false,
      "doc": "Marker for contextual 'this' type"
    },
    "ArrayBuffer": {
      "indexes": [],
      "props": {
        "byteLength": {
          "_": 1679,
          "doc": "Read-only. The length of the ArrayBuffer (in bytes).",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 1684,
          "doc": "Returns a section of an ArrayBuffer.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Represents a raw buffer of binary data, which is used to store data for the\r\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\r\nbut can be passed to a typed array or DataView Object to interpret the raw\r\nbuffer as needed.\nRepresents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed."
    },
    "ArrayBufferTypes": {
      "indexes": [],
      "props": {
        "ArrayBuffer": {
          "_": 1691,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays."
    },
    "ArrayBufferConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 1696,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 1697,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "isView": {
          "_": 1698,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "predicate": "arg",
            "type": {
              "ref": "ArrayBufferView",
              "generics": [],
              "isFuture": false
            },
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "ArrayBufferView": {
      "indexes": [],
      "props": {
        "buffer": {
          "_": 1706,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 1711,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 1716,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DataView": {
      "indexes": [],
      "props": {
        "buffer": {
          "_": 1720,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBuffer",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 1721,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 1722,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getFloat32": {
          "_": 1729,
          "doc": "Gets the Float32 value at the specified byte offset from the start of the view. There is\r\nno alignment constraint; multi-byte values may be fetched from any offset.\nGets the Float32 value at the specified byte offset from the start of the view. There is\nno alignment constraint; multi-byte values may be fetched from any offset.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getFloat64": {
          "_": 1737,
          "doc": "Gets the Float64 value at the specified byte offset from the start of the view. There is\r\nno alignment constraint; multi-byte values may be fetched from any offset.\nGets the Float64 value at the specified byte offset from the start of the view. There is\nno alignment constraint; multi-byte values may be fetched from any offset.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getInt8": {
          "_": 1744,
          "doc": "Gets the Int8 value at the specified byte offset from the start of the view. There is\r\nno alignment constraint; multi-byte values may be fetched from any offset.\nGets the Int8 value at the specified byte offset from the start of the view. There is\nno alignment constraint; multi-byte values may be fetched from any offset.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getInt16": {
          "_": 1752,
          "doc": "Gets the Int16 value at the specified byte offset from the start of the view. There is\r\nno alignment constraint; multi-byte values may be fetched from any offset.\nGets the Int16 value at the specified byte offset from the start of the view. There is\nno alignment constraint; multi-byte values may be fetched from any offset.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getInt32": {
          "_": 1759,
          "doc": "Gets the Int32 value at the specified byte offset from the start of the view. There is\r\nno alignment constraint; multi-byte values may be fetched from any offset.\nGets the Int32 value at the specified byte offset from the start of the view. There is\nno alignment constraint; multi-byte values may be fetched from any offset.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getUint8": {
          "_": 1766,
          "doc": "Gets the Uint8 value at the specified byte offset from the start of the view. There is\r\nno alignment constraint; multi-byte values may be fetched from any offset.\nGets the Uint8 value at the specified byte offset from the start of the view. There is\nno alignment constraint; multi-byte values may be fetched from any offset.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getUint16": {
          "_": 1774,
          "doc": "Gets the Uint16 value at the specified byte offset from the start of the view. There is\r\nno alignment constraint; multi-byte values may be fetched from any offset.\nGets the Uint16 value at the specified byte offset from the start of the view. There is\nno alignment constraint; multi-byte values may be fetched from any offset.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "getUint32": {
          "_": 1782,
          "doc": "Gets the Uint32 value at the specified byte offset from the start of the view. There is\r\nno alignment constraint; multi-byte values may be fetched from any offset.\nGets the Uint32 value at the specified byte offset from the start of the view. There is\nno alignment constraint; multi-byte values may be fetched from any offset.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "setFloat32": {
          "_": 1790,
          "doc": "Stores an Float32 value at the specified byte offset from the start of the view.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setFloat64": {
          "_": 1798,
          "doc": "Stores an Float64 value at the specified byte offset from the start of the view.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setInt8": {
          "_": 1805,
          "doc": "Stores an Int8 value at the specified byte offset from the start of the view.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setInt16": {
          "_": 1813,
          "doc": "Stores an Int16 value at the specified byte offset from the start of the view.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setInt32": {
          "_": 1821,
          "doc": "Stores an Int32 value at the specified byte offset from the start of the view.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setUint8": {
          "_": 1828,
          "doc": "Stores an Uint8 value at the specified byte offset from the start of the view.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setUint16": {
          "_": 1836,
          "doc": "Stores an Uint16 value at the specified byte offset from the start of the view.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "setUint32": {
          "_": 1844,
          "doc": "Stores an Uint32 value at the specified byte offset from the start of the view.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "DataViewConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 1848,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "DataView",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 1849,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "DataView",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Int8Array": {
      "indexes": [
        {
          "_": 2098,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "number",
            "isFuture": false
          }
        }
      ],
      "props": {
        "BYTES_PER_ELEMENT": {
          "_": 1861,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffer": {
          "_": 1866,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 1871,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 1876,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyWithin": {
          "_": 1887,
          "doc": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target\nReturns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 1897,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 1907,
          "doc": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 1916,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "find": {
          "_": 1927,
          "doc": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.\nReturns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "findIndex": {
          "_": 1938,
          "doc": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise.\nReturns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 1947,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 1955,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 1962,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 1970,
          "doc": "Returns the index of the last occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 1975,
          "doc": "The length of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 1985,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that\r\ncontains the results.\nCalls a defined callback function on each element of an array, and returns an array that\ncontains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 2010,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of\r\nthe callback function is the accumulated result, and is provided as an argument in the next\r\ncall to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of\nthe callback function is the accumulated result, and is provided as an argument in the next\ncall to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 2035,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order.\r\nThe return value of the callback function is the accumulated result, and is provided as an\r\nargument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order.\nThe return value of the callback function is the accumulated result, and is provided as an\nargument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 2040,
          "doc": "Reverses the elements in an Array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 2047,
          "doc": "Sets a value or an array of values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 2054,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 2064,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 2075,
          "doc": "Sorts an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "subarray": {
          "_": 2083,
          "doc": "Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements\r\nat begin, inclusive, up to end, exclusive.\nGets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements\nat begin, inclusive, up to end, exclusive.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 2088,
          "doc": "Converts a number to a string by using the current locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 2093,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 2096,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.\nA typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised."
    },
    "Int8ArrayConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 2101,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 2104,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTES_PER_ELEMENT": {
          "_": 2109,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "of": {
          "_": 2115,
          "doc": "Returns a new array from a set of elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "from": {
          "_": 2129,
          "doc": "Creates an array from an array-like or iterable object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Uint8Array": {
      "indexes": [
        {
          "_": 2380,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "number",
            "isFuture": false
          }
        }
      ],
      "props": {
        "BYTES_PER_ELEMENT": {
          "_": 2143,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffer": {
          "_": 2148,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 2153,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 2158,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyWithin": {
          "_": 2169,
          "doc": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target\nReturns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 2179,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 2189,
          "doc": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 2198,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "find": {
          "_": 2209,
          "doc": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.\nReturns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "findIndex": {
          "_": 2220,
          "doc": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise.\nReturns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 2229,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 2237,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 2244,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 2252,
          "doc": "Returns the index of the last occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 2257,
          "doc": "The length of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 2267,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that\r\ncontains the results.\nCalls a defined callback function on each element of an array, and returns an array that\ncontains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 2292,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of\r\nthe callback function is the accumulated result, and is provided as an argument in the next\r\ncall to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of\nthe callback function is the accumulated result, and is provided as an argument in the next\ncall to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 2317,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order.\r\nThe return value of the callback function is the accumulated result, and is provided as an\r\nargument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order.\nThe return value of the callback function is the accumulated result, and is provided as an\nargument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 2322,
          "doc": "Reverses the elements in an Array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 2329,
          "doc": "Sets a value or an array of values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 2336,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 2346,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 2357,
          "doc": "Sorts an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "subarray": {
          "_": 2365,
          "doc": "Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements\r\nat begin, inclusive, up to end, exclusive.\nGets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements\nat begin, inclusive, up to end, exclusive.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 2370,
          "doc": "Converts a number to a string by using the current locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 2375,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 2378,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.\nA typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised."
    },
    "Uint8ArrayConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 2384,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 2387,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTES_PER_ELEMENT": {
          "_": 2392,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "of": {
          "_": 2398,
          "doc": "Returns a new array from a set of elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "from": {
          "_": 2412,
          "doc": "Creates an array from an array-like or iterable object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Uint8ClampedArray": {
      "indexes": [
        {
          "_": 2662,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "number",
            "isFuture": false
          }
        }
      ],
      "props": {
        "BYTES_PER_ELEMENT": {
          "_": 2425,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffer": {
          "_": 2430,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 2435,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 2440,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyWithin": {
          "_": 2451,
          "doc": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target\nReturns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 2461,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 2471,
          "doc": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 2480,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "find": {
          "_": 2491,
          "doc": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.\nReturns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "findIndex": {
          "_": 2502,
          "doc": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise.\nReturns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 2511,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 2519,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 2526,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 2534,
          "doc": "Returns the index of the last occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 2539,
          "doc": "The length of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 2549,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that\r\ncontains the results.\nCalls a defined callback function on each element of an array, and returns an array that\ncontains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 2574,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of\r\nthe callback function is the accumulated result, and is provided as an argument in the next\r\ncall to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of\nthe callback function is the accumulated result, and is provided as an argument in the next\ncall to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 2599,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order.\r\nThe return value of the callback function is the accumulated result, and is provided as an\r\nargument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order.\nThe return value of the callback function is the accumulated result, and is provided as an\nargument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 2604,
          "doc": "Reverses the elements in an Array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 2611,
          "doc": "Sets a value or an array of values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 2618,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 2628,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 2639,
          "doc": "Sorts an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "subarray": {
          "_": 2647,
          "doc": "Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements\r\nat begin, inclusive, up to end, exclusive.\nGets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements\nat begin, inclusive, up to end, exclusive.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 2652,
          "doc": "Converts a number to a string by using the current locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 2657,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 2660,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\nIf the requested number of bytes could not be allocated an exception is raised.\nA typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised."
    },
    "Uint8ClampedArrayConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 2666,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 2669,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTES_PER_ELEMENT": {
          "_": 2674,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "of": {
          "_": 2680,
          "doc": "Returns a new array from a set of elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "from": {
          "_": 2694,
          "doc": "Creates an array from an array-like or iterable object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint8ClampedArray",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Int16Array": {
      "indexes": [
        {
          "_": 2942,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "number",
            "isFuture": false
          }
        }
      ],
      "props": {
        "BYTES_PER_ELEMENT": {
          "_": 2706,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffer": {
          "_": 2711,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 2716,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 2721,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyWithin": {
          "_": 2732,
          "doc": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target\nReturns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 2742,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 2752,
          "doc": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 2761,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "find": {
          "_": 2772,
          "doc": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.\nReturns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "findIndex": {
          "_": 2783,
          "doc": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise.\nReturns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 2792,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 2799,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 2806,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 2814,
          "doc": "Returns the index of the last occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 2819,
          "doc": "The length of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 2829,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that\r\ncontains the results.\nCalls a defined callback function on each element of an array, and returns an array that\ncontains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 2854,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of\r\nthe callback function is the accumulated result, and is provided as an argument in the next\r\ncall to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of\nthe callback function is the accumulated result, and is provided as an argument in the next\ncall to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 2879,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order.\r\nThe return value of the callback function is the accumulated result, and is provided as an\r\nargument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order.\nThe return value of the callback function is the accumulated result, and is provided as an\nargument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 2884,
          "doc": "Reverses the elements in an Array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 2891,
          "doc": "Sets a value or an array of values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 2898,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 2908,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 2919,
          "doc": "Sorts an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "subarray": {
          "_": 2927,
          "doc": "Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements\r\nat begin, inclusive, up to end, exclusive.\nGets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements\nat begin, inclusive, up to end, exclusive.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 2932,
          "doc": "Converts a number to a string by using the current locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 2937,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 2940,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.\nA typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised."
    },
    "Int16ArrayConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 2946,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 2949,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTES_PER_ELEMENT": {
          "_": 2954,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "of": {
          "_": 2960,
          "doc": "Returns a new array from a set of elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "from": {
          "_": 2974,
          "doc": "Creates an array from an array-like or iterable object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Uint16Array": {
      "indexes": [
        {
          "_": 3225,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "number",
            "isFuture": false
          }
        }
      ],
      "props": {
        "BYTES_PER_ELEMENT": {
          "_": 2988,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffer": {
          "_": 2993,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 2998,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 3003,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyWithin": {
          "_": 3014,
          "doc": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target\nReturns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 3024,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 3034,
          "doc": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 3043,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "find": {
          "_": 3054,
          "doc": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.\nReturns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "findIndex": {
          "_": 3065,
          "doc": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise.\nReturns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 3074,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 3082,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 3089,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 3097,
          "doc": "Returns the index of the last occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 3102,
          "doc": "The length of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 3112,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that\r\ncontains the results.\nCalls a defined callback function on each element of an array, and returns an array that\ncontains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 3137,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of\r\nthe callback function is the accumulated result, and is provided as an argument in the next\r\ncall to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of\nthe callback function is the accumulated result, and is provided as an argument in the next\ncall to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 3162,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order.\r\nThe return value of the callback function is the accumulated result, and is provided as an\r\nargument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order.\nThe return value of the callback function is the accumulated result, and is provided as an\nargument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 3167,
          "doc": "Reverses the elements in an Array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 3174,
          "doc": "Sets a value or an array of values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 3181,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 3191,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 3202,
          "doc": "Sorts an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "subarray": {
          "_": 3210,
          "doc": "Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements\r\nat begin, inclusive, up to end, exclusive.\nGets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements\nat begin, inclusive, up to end, exclusive.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 3215,
          "doc": "Converts a number to a string by using the current locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 3220,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 3223,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.\nA typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised."
    },
    "Uint16ArrayConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 3229,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 3232,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTES_PER_ELEMENT": {
          "_": 3237,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "of": {
          "_": 3243,
          "doc": "Returns a new array from a set of elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "from": {
          "_": 3257,
          "doc": "Creates an array from an array-like or iterable object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint16Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Int32Array": {
      "indexes": [
        {
          "_": 3507,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "number",
            "isFuture": false
          }
        }
      ],
      "props": {
        "BYTES_PER_ELEMENT": {
          "_": 3270,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffer": {
          "_": 3275,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 3280,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 3285,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyWithin": {
          "_": 3296,
          "doc": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target\nReturns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 3306,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 3316,
          "doc": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 3325,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "find": {
          "_": 3336,
          "doc": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.\nReturns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "findIndex": {
          "_": 3347,
          "doc": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise.\nReturns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 3356,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 3364,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 3371,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 3379,
          "doc": "Returns the index of the last occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 3384,
          "doc": "The length of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 3394,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that\r\ncontains the results.\nCalls a defined callback function on each element of an array, and returns an array that\ncontains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 3419,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of\r\nthe callback function is the accumulated result, and is provided as an argument in the next\r\ncall to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of\nthe callback function is the accumulated result, and is provided as an argument in the next\ncall to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 3444,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order.\r\nThe return value of the callback function is the accumulated result, and is provided as an\r\nargument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order.\nThe return value of the callback function is the accumulated result, and is provided as an\nargument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 3449,
          "doc": "Reverses the elements in an Array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 3456,
          "doc": "Sets a value or an array of values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 3463,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 3473,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 3484,
          "doc": "Sorts an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "subarray": {
          "_": 3492,
          "doc": "Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements\r\nat begin, inclusive, up to end, exclusive.\nGets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements\nat begin, inclusive, up to end, exclusive.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 3497,
          "doc": "Converts a number to a string by using the current locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 3502,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 3505,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.\nA typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised."
    },
    "Int32ArrayConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 3511,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 3514,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTES_PER_ELEMENT": {
          "_": 3519,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "of": {
          "_": 3525,
          "doc": "Returns a new array from a set of elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "from": {
          "_": 3539,
          "doc": "Creates an array from an array-like or iterable object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Int32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Uint32Array": {
      "indexes": [
        {
          "_": 3788,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "number",
            "isFuture": false
          }
        }
      ],
      "props": {
        "BYTES_PER_ELEMENT": {
          "_": 3552,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffer": {
          "_": 3557,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 3562,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 3567,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyWithin": {
          "_": 3578,
          "doc": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target\nReturns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 3588,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 3598,
          "doc": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 3607,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "find": {
          "_": 3618,
          "doc": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.\nReturns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "findIndex": {
          "_": 3629,
          "doc": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise.\nReturns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 3638,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 3645,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 3652,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 3660,
          "doc": "Returns the index of the last occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 3665,
          "doc": "The length of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 3675,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that\r\ncontains the results.\nCalls a defined callback function on each element of an array, and returns an array that\ncontains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 3700,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of\r\nthe callback function is the accumulated result, and is provided as an argument in the next\r\ncall to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of\nthe callback function is the accumulated result, and is provided as an argument in the next\ncall to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 3725,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order.\r\nThe return value of the callback function is the accumulated result, and is provided as an\r\nargument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order.\nThe return value of the callback function is the accumulated result, and is provided as an\nargument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 3730,
          "doc": "Reverses the elements in an Array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 3737,
          "doc": "Sets a value or an array of values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 3744,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 3754,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 3765,
          "doc": "Sorts an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "subarray": {
          "_": 3773,
          "doc": "Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements\r\nat begin, inclusive, up to end, exclusive.\nGets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements\nat begin, inclusive, up to end, exclusive.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 3778,
          "doc": "Converts a number to a string by using the current locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 3783,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 3786,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.\nA typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised."
    },
    "Uint32ArrayConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 3792,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 3795,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTES_PER_ELEMENT": {
          "_": 3800,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "of": {
          "_": 3806,
          "doc": "Returns a new array from a set of elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "from": {
          "_": 3820,
          "doc": "Creates an array from an array-like or iterable object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Uint32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Float32Array": {
      "indexes": [
        {
          "_": 4070,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "number",
            "isFuture": false
          }
        }
      ],
      "props": {
        "BYTES_PER_ELEMENT": {
          "_": 3833,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffer": {
          "_": 3838,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 3843,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 3848,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyWithin": {
          "_": 3859,
          "doc": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target\nReturns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 3869,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 3879,
          "doc": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 3888,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "find": {
          "_": 3899,
          "doc": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.\nReturns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "findIndex": {
          "_": 3910,
          "doc": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise.\nReturns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 3919,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 3927,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 3934,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 3942,
          "doc": "Returns the index of the last occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 3947,
          "doc": "The length of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 3957,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that\r\ncontains the results.\nCalls a defined callback function on each element of an array, and returns an array that\ncontains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 3982,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of\r\nthe callback function is the accumulated result, and is provided as an argument in the next\r\ncall to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of\nthe callback function is the accumulated result, and is provided as an argument in the next\ncall to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 4007,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order.\r\nThe return value of the callback function is the accumulated result, and is provided as an\r\nargument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order.\nThe return value of the callback function is the accumulated result, and is provided as an\nargument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 4012,
          "doc": "Reverses the elements in an Array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 4019,
          "doc": "Sets a value or an array of values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 4026,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 4036,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 4047,
          "doc": "Sorts an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "subarray": {
          "_": 4055,
          "doc": "Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements\r\nat begin, inclusive, up to end, exclusive.\nGets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements\nat begin, inclusive, up to end, exclusive.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toLocaleString": {
          "_": 4060,
          "doc": "Converts a number to a string by using the current locale.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 4065,
          "doc": "Returns a string representation of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 4068,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\nof bytes could not be allocated an exception is raised.\nA typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised."
    },
    "Float32ArrayConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 4074,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 4077,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTES_PER_ELEMENT": {
          "_": 4082,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "of": {
          "_": 4088,
          "doc": "Returns a new array from a set of elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "from": {
          "_": 4102,
          "doc": "Creates an array from an array-like or iterable object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float32Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    },
    "Float64Array": {
      "indexes": [
        {
          "_": 4344,
          "key": {
            "core": "number",
            "isFuture": false
          },
          "value": {
            "core": "number",
            "isFuture": false
          }
        }
      ],
      "props": {
        "BYTES_PER_ELEMENT": {
          "_": 4116,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "buffer": {
          "_": 4121,
          "doc": "The ArrayBuffer instance referenced by the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "ArrayBufferLike",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "byteLength": {
          "_": 4126,
          "doc": "The length in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "byteOffset": {
          "_": 4131,
          "doc": "The offset in bytes of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "copyWithin": {
          "_": 4142,
          "doc": "Returns the this object after copying a section of the array identified by start and end\r\nto the same array starting at position target\nReturns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "every": {
          "_": 4152,
          "doc": "Determines whether all the members of an array satisfy the specified test.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "fill": {
          "_": 4162,
          "doc": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "filter": {
          "_": 4171,
          "doc": "Returns the elements of an array that meet the condition specified in a callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "find": {
          "_": 4182,
          "doc": "Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.\nReturns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "isMethod": true,
          "isNullable": true,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "findIndex": {
          "_": 4193,
          "doc": "Returns the index of the first element in the array where predicate is true, and -1\r\notherwise.\nReturns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "forEach": {
          "_": 4202,
          "doc": "Performs the specified action for each element in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "indexOf": {
          "_": 4210,
          "doc": "Returns the index of the first occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "join": {
          "_": 4217,
          "doc": "Adds all the elements of an array separated by the specified separator string.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "lastIndexOf": {
          "_": 4225,
          "doc": "Returns the index of the last occurrence of a value in an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "length": {
          "_": 4230,
          "doc": "The length of the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "map": {
          "_": 4240,
          "doc": "Calls a defined callback function on each element of an array, and returns an array that\r\ncontains the results.\nCalls a defined callback function on each element of an array, and returns an array that\ncontains the results.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduce": {
          "_": 4265,
          "doc": "Calls the specified callback function for all the elements in an array. The return value of\r\nthe callback function is the accumulated result, and is provided as an argument in the next\r\ncall to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of\nthe callback function is the accumulated result, and is provided as an argument in the next\ncall to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reduceRight": {
          "_": 4290,
          "doc": "Calls the specified callback function for all the elements in an array, in descending order.\r\nThe return value of the callback function is the accumulated result, and is provided as an\r\nargument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order.\nThe return value of the callback function is the accumulated result, and is provided as an\nargument in the next call to the callback function.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "U",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "reverse": {
          "_": 4295,
          "doc": "Reverses the elements in an Array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "set": {
          "_": 4302,
          "doc": "Sets a value or an array of values.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "void",
            "isFuture": false
          },
          "isStatic": false
        },
        "slice": {
          "_": 4309,
          "doc": "Returns a section of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "some": {
          "_": 4319,
          "doc": "Determines whether the specified callback function returns true for any element of an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "boolean",
            "isFuture": false
          },
          "isStatic": false
        },
        "sort": {
          "_": 4330,
          "doc": "Sorts an array.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "this",
            "isFuture": false
          },
          "isStatic": false
        },
        "subarray": {
          "_": 4337,
          "doc": "at begin, inclusive, up to end, exclusive.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "toString": {
          "_": 4339,
          "doc": "",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "core": "string",
            "isFuture": false
          },
          "isStatic": false
        },
        "valueOf": {
          "_": 4342,
          "doc": "Returns the primitive value of the specified object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.\nA typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised."
    },
    "Float64ArrayConstructor": {
      "indexes": [],
      "props": {
        "prototype": {
          "_": 4348,
          "doc": "",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "undefined": {
          "_": 4351,
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "BYTES_PER_ELEMENT": {
          "_": 4356,
          "doc": "The size in bytes of each element in the array.",
          "isMethod": false,
          "isNullable": false,
          "type": {
            "core": "number",
            "isFuture": false
          },
          "isStatic": false
        },
        "of": {
          "_": 4362,
          "doc": "Returns a new array from a set of elements.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        },
        "from": {
          "_": 4376,
          "doc": "Creates an array from an array-like or iterable object.",
          "isMethod": true,
          "isNullable": false,
          "type": {
            "ref": "Float64Array",
            "generics": [],
            "isFuture": false
          },
          "isStatic": false
        }
      },
      "generics": [],
      "isClass": false,
      "doc": ""
    }
  },
  "funcs": {
    "eval": {
      "type": {
        "core": "any",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "x",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "parseInt": {
      "type": {
        "core": "number",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "string",
          "type": {
            "core": "string",
            "isFuture": false
          }
        },
        {
          "name": "radix",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "parseFloat": {
      "type": {
        "core": "number",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "string",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "isNaN": {
      "type": {
        "core": "boolean",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "number",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "isFinite": {
      "type": {
        "core": "boolean",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "number",
          "type": {
            "core": "number",
            "isFuture": false
          }
        }
      ]
    },
    "decodeURI": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "encodedURI",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "decodeURIComponent": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "encodedURIComponent",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "encodeURI": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "uri",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "encodeURIComponent": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "uriComponent",
          "type": {
            "core": "any",
            "isFuture": false
          }
        }
      ]
    },
    "escape": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "string",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    },
    "unescape": {
      "type": {
        "core": "string",
        "isFuture": false
      },
      "generics": [],
      "params": [
        {
          "name": "string",
          "type": {
            "core": "string",
            "isFuture": false
          }
        }
      ]
    }
  },
  "vars": {
    "NaN": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "Infinity": {
      "type": {
        "core": "number",
        "isFuture": false
      }
    },
    "Object": {
      "type": {
        "ref": "ObjectConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Function": {
      "type": {
        "ref": "FunctionConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "String": {
      "type": {
        "ref": "StringConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Boolean": {
      "type": {
        "ref": "BooleanConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Number": {
      "type": {
        "ref": "NumberConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Math": {
      "type": {
        "ref": "Math",
        "generics": [],
        "isFuture": false
      }
    },
    "Date": {
      "type": {
        "ref": "DateConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "RegExp": {
      "type": {
        "ref": "RegExpConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Error": {
      "type": {
        "ref": "ErrorConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "EvalError": {
      "type": {
        "ref": "EvalErrorConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "RangeError": {
      "type": {
        "ref": "RangeErrorConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "ReferenceError": {
      "type": {
        "ref": "ReferenceErrorConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "SyntaxError": {
      "type": {
        "ref": "SyntaxErrorConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "TypeError": {
      "type": {
        "ref": "TypeErrorConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "URIError": {
      "type": {
        "ref": "URIErrorConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "JSON": {
      "type": {
        "ref": "JSON",
        "generics": [],
        "isFuture": false
      }
    },
    "Array": {
      "type": {
        "ref": "ArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "ArrayBuffer": {
      "type": {
        "ref": "ArrayBufferConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "DataView": {
      "type": {
        "ref": "DataViewConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Int8Array": {
      "type": {
        "ref": "Int8ArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Uint8Array": {
      "type": {
        "ref": "Uint8ArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Uint8ClampedArray": {
      "type": {
        "ref": "Uint8ClampedArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Int16Array": {
      "type": {
        "ref": "Int16ArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Uint16Array": {
      "type": {
        "ref": "Uint16ArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Int32Array": {
      "type": {
        "ref": "Int32ArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Uint32Array": {
      "type": {
        "ref": "Uint32ArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Float32Array": {
      "type": {
        "ref": "Float32ArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    },
    "Float64Array": {
      "type": {
        "ref": "Float64ArrayConstructor",
        "generics": [],
        "isFuture": false
      }
    }
  },
  "modules": {
    "Intl": {
      "typedefs": {},
      "structs": {
        "CollatorOptions": {
          "indexes": [],
          "props": {
            "usage": {
              "_": 4387,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "localeMatcher": {
              "_": 4388,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "numeric": {
              "_": 4389,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            },
            "caseFirst": {
              "_": 4390,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "sensitivity": {
              "_": 4391,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "ignorePunctuation": {
              "_": 4392,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "ResolvedCollatorOptions": {
          "indexes": [],
          "props": {
            "locale": {
              "_": 4396,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "usage": {
              "_": 4397,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "sensitivity": {
              "_": 4398,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "ignorePunctuation": {
              "_": 4399,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            },
            "collation": {
              "_": 4400,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "caseFirst": {
              "_": 4401,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "numeric": {
              "_": 4402,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "Collator": {
          "indexes": [],
          "props": {
            "compare": {
              "_": 4406,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "resolvedOptions": {
              "_": 4407,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "ref": "ResolvedCollatorOptions",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "": {
          "indexes": [],
          "props": {
            "undefined": {
              "_": 4491,
              "isMethod": true,
              "isNullable": false,
              "type": {
                "ref": "DateTimeFormat",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            },
            "supportedLocalesOf": {
              "_": 4492,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "array": {
                  "core": "string",
                  "isFuture": false
                },
                "isFuture": false
              },
              "isStatic": false
            },
            "prototype": {
              "_": 4493,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "ref": "DateTimeFormat",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false
        },
        "NumberFormatOptions": {
          "indexes": [],
          "props": {
            "localeMatcher": {
              "_": 4416,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "style": {
              "_": 4417,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "currency": {
              "_": 4418,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "currencySign": {
              "_": 4419,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "useGrouping": {
              "_": 4420,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            },
            "minimumIntegerDigits": {
              "_": 4421,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "minimumFractionDigits": {
              "_": 4422,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "maximumFractionDigits": {
              "_": 4423,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "minimumSignificantDigits": {
              "_": 4424,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "maximumSignificantDigits": {
              "_": 4425,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "ResolvedNumberFormatOptions": {
          "indexes": [],
          "props": {
            "locale": {
              "_": 4429,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "numberingSystem": {
              "_": 4430,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "style": {
              "_": 4431,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "currency": {
              "_": 4432,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "minimumIntegerDigits": {
              "_": 4433,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "minimumFractionDigits": {
              "_": 4434,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "maximumFractionDigits": {
              "_": 4435,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "minimumSignificantDigits": {
              "_": 4436,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "maximumSignificantDigits": {
              "_": 4437,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "number",
                "isFuture": false
              },
              "isStatic": false
            },
            "useGrouping": {
              "_": 4438,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "NumberFormat": {
          "indexes": [],
          "props": {
            "format": {
              "_": 4442,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "resolvedOptions": {
              "_": 4443,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "ref": "ResolvedNumberFormatOptions",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "DateTimeFormatOptions": {
          "indexes": [],
          "props": {
            "localeMatcher": {
              "_": 4453,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "weekday": {
              "_": 4454,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "era": {
              "_": 4455,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "year": {
              "_": 4456,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "month": {
              "_": 4457,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "day": {
              "_": 4458,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "hour": {
              "_": 4459,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "minute": {
              "_": 4460,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "second": {
              "_": 4461,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "timeZoneName": {
              "_": 4462,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "formatMatcher": {
              "_": 4463,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "any",
                "isFuture": false
              },
              "isStatic": false
            },
            "hour12": {
              "_": 4464,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            },
            "timeZone": {
              "_": 4465,
              "doc": "",
              "isMethod": false,
              "isNullable": true,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "ResolvedDateTimeFormatOptions": {
          "indexes": [],
          "props": {
            "locale": {
              "_": 4469,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "calendar": {
              "_": 4470,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "numberingSystem": {
              "_": 4471,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "timeZone": {
              "_": 4472,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "hour12": {
              "_": 4473,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "boolean",
                "isFuture": false
              },
              "isStatic": false
            },
            "weekday": {
              "_": 4474,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "era": {
              "_": 4475,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "year": {
              "_": 4476,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "month": {
              "_": 4477,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "day": {
              "_": 4478,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "hour": {
              "_": 4479,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "minute": {
              "_": 4480,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "second": {
              "_": 4481,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "timeZoneName": {
              "_": 4482,
              "doc": "",
              "isMethod": false,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        },
        "DateTimeFormat": {
          "indexes": [],
          "props": {
            "format": {
              "_": 4486,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "core": "string",
                "isFuture": false
              },
              "isStatic": false
            },
            "resolvedOptions": {
              "_": 4487,
              "doc": "",
              "isMethod": true,
              "isNullable": false,
              "type": {
                "ref": "ResolvedDateTimeFormatOptions",
                "generics": [],
                "isFuture": false
              },
              "isStatic": false
            }
          },
          "generics": [],
          "isClass": false,
          "doc": ""
        }
      },
      "funcs": {},
      "vars": {
        "Collator": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        },
        "NumberFormat": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        },
        "DateTimeFormat": {
          "type": {
            "ref": "",
            "generics": [],
            "isFuture": false
          }
        }
      },
      "modules": {}
    }
  }
}