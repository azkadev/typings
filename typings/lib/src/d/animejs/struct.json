[
  {
    "_": -1,
    "namespace": "anime",
    "from": "mainLoop /Users/jonathanrezende/Projects/testes/typings/typings/work/animejs/out/temp/https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/animejs/index.d.ts",
    "items": {
      "structs": [
        {
          "_": 42,
          "name": "AnimeCallBack",
          "generics": [],
          "doc": "",
          "heritage": [],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": false,
              "_": 43,
              "source": "\n        begin?: AnimeCallbackFunction | undefined;",
              "name": "begin",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "AnimeCallbackFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 43,
                    "source": " AnimeCallbackFunction"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 43,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 43,
                "source": " AnimeCallbackFunction | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 44,
              "source": "\n        change?: AnimeCallbackFunction | undefined;",
              "name": "change",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "AnimeCallbackFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 44,
                    "source": " AnimeCallbackFunction"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 44,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 44,
                "source": " AnimeCallbackFunction | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 45,
              "source": "\n        update?: AnimeCallbackFunction | undefined;",
              "name": "update",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "AnimeCallbackFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 45,
                    "source": " AnimeCallbackFunction"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 45,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 45,
                "source": " AnimeCallbackFunction | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 46,
              "source": "\n        complete?: AnimeCallbackFunction | undefined;",
              "name": "complete",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "AnimeCallbackFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 46,
                    "source": " AnimeCallbackFunction"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 46,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 46,
                "source": " AnimeCallbackFunction | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 47,
              "source": "\n        loopBegin?: AnimeCallbackFunction | undefined;",
              "name": "loopBegin",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "AnimeCallbackFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 47,
                    "source": " AnimeCallbackFunction"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 47,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 47,
                "source": " AnimeCallbackFunction | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 48,
              "source": "\n        loopComplete?: AnimeCallbackFunction | undefined;",
              "name": "loopComplete",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "AnimeCallbackFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 48,
                    "source": " AnimeCallbackFunction"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 48,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 48,
                "source": " AnimeCallbackFunction | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 49,
              "source": "\n        changeBegin?: AnimeCallbackFunction | undefined;",
              "name": "changeBegin",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "AnimeCallbackFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 49,
                    "source": " AnimeCallbackFunction"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 49,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 49,
                "source": " AnimeCallbackFunction | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 50,
              "source": "\n        changeComplete?: AnimeCallbackFunction | undefined;",
              "name": "changeComplete",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "AnimeCallbackFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 50,
                    "source": " AnimeCallbackFunction"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 50,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 50,
                "source": " AnimeCallbackFunction | undefined"
              }
            }
          ],
          "calls": [],
          "isClass": false
        },
        {
          "_": 53,
          "name": "AnimeInstanceParams",
          "generics": [],
          "doc": "",
          "heritage": [
            [
              {
                "ref": "AnimeCallBack",
                "targs": [],
                "isNullable": false,
                "_": 53,
                "source": " AnimeCallBack"
              }
            ]
          ],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": false,
              "_": 54,
              "source": "\n        loop?: number | boolean | undefined;",
              "name": "loop",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 54,
                    "source": " number"
                  },
                  {
                    "core": "boolean",
                    "isNullable": false,
                    "_": 54,
                    "source": " boolean"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 54,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 54,
                "source": " number | boolean | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 55,
              "source": "\n        autoplay?: boolean | undefined;",
              "name": "autoplay",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "boolean",
                    "isNullable": false,
                    "_": 55,
                    "source": " boolean"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 55,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 55,
                "source": " boolean | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 56,
              "source": "\n        direction?: DirectionOptions | string | undefined;",
              "name": "direction",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "DirectionOptions",
                    "targs": [],
                    "isNullable": false,
                    "_": 56,
                    "source": " DirectionOptions"
                  },
                  {
                    "core": "string",
                    "isNullable": false,
                    "_": 56,
                    "source": " string"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 56,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 56,
                "source": " DirectionOptions | string | undefined"
              }
            }
          ],
          "calls": [],
          "isClass": false
        },
        {
          "_": 59,
          "name": "AnimeAnimParams",
          "generics": [],
          "doc": "",
          "heritage": [
            [
              {
                "ref": "AnimeCallBack",
                "targs": [],
                "isNullable": false,
                "_": 59,
                "source": " AnimeCallBack"
              }
            ]
          ],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [
            {
              "key": {
                "core": "string",
                "isNullable": false,
                "_": 71,
                "source": " string"
              },
              "value": {
                "core": "any",
                "isNullable": false,
                "_": 71,
                "source": " any"
              },
              "doc": "",
              "_": 71,
              "source": "\n\n        [AnyAnimatedProperty: string]: any;",
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false
            }
          ],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": false,
              "_": 60,
              "source": "\n        targets?: AnimeTarget | ReadonlyArray<AnimeTarget> | undefined;",
              "name": "targets",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "AnimeTarget",
                    "targs": [],
                    "isNullable": false,
                    "_": 60,
                    "source": " AnimeTarget"
                  },
                  {
                    "ref": "ReadonlyArray",
                    "targs": [
                      {
                        "ref": "AnimeTarget",
                        "targs": [],
                        "isNullable": false,
                        "_": 60,
                        "source": "AnimeTarget"
                      }
                    ],
                    "isNullable": false,
                    "_": 60,
                    "source": " ReadonlyArray<AnimeTarget>"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 60,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 60,
                "source": " AnimeTarget | ReadonlyArray<AnimeTarget> | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 62,
              "source": "\n\n        duration?: number | FunctionBasedParameter | undefined;",
              "name": "duration",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 62,
                    "source": " number"
                  },
                  {
                    "ref": "FunctionBasedParameter",
                    "targs": [],
                    "isNullable": false,
                    "_": 62,
                    "source": " FunctionBasedParameter"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 62,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 62,
                "source": " number | FunctionBasedParameter | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 63,
              "source": "\n        delay?: number | FunctionBasedParameter | undefined;",
              "name": "delay",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 63,
                    "source": " number"
                  },
                  {
                    "ref": "FunctionBasedParameter",
                    "targs": [],
                    "isNullable": false,
                    "_": 63,
                    "source": " FunctionBasedParameter"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 63,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 63,
                "source": " number | FunctionBasedParameter | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 64,
              "source": "\n        endDelay?: number | FunctionBasedParameter | undefined;",
              "name": "endDelay",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 64,
                    "source": " number"
                  },
                  {
                    "ref": "FunctionBasedParameter",
                    "targs": [],
                    "isNullable": false,
                    "_": 64,
                    "source": " FunctionBasedParameter"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 64,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 64,
                "source": " number | FunctionBasedParameter | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 65,
              "source": "\n        elasticity?: number | FunctionBasedParameter | undefined;",
              "name": "elasticity",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 65,
                    "source": " number"
                  },
                  {
                    "ref": "FunctionBasedParameter",
                    "targs": [],
                    "isNullable": false,
                    "_": 65,
                    "source": " FunctionBasedParameter"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 65,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 65,
                "source": " number | FunctionBasedParameter | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 66,
              "source": "\n        round?: number | boolean | FunctionBasedParameter | undefined;",
              "name": "round",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 66,
                    "source": " number"
                  },
                  {
                    "core": "boolean",
                    "isNullable": false,
                    "_": 66,
                    "source": " boolean"
                  },
                  {
                    "ref": "FunctionBasedParameter",
                    "targs": [],
                    "isNullable": false,
                    "_": 66,
                    "source": " FunctionBasedParameter"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 66,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 66,
                "source": " number | boolean | FunctionBasedParameter | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 67,
              "source": "\n        keyframes?: ReadonlyArray<AnimeAnimParams> | undefined;",
              "name": "keyframes",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "ReadonlyArray",
                    "targs": [
                      {
                        "ref": "AnimeAnimParams",
                        "targs": [],
                        "isNullable": false,
                        "_": 67,
                        "source": "AnimeAnimParams"
                      }
                    ],
                    "isNullable": false,
                    "_": 67,
                    "source": " ReadonlyArray<AnimeAnimParams>"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 67,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 67,
                "source": " ReadonlyArray<AnimeAnimParams> | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 69,
              "source": "\n\n        easing?: EasingOptions | string | CustomEasingFunction | ((el: HTMLElement) => string) | undefined;",
              "name": "easing",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "EasingOptions",
                    "targs": [],
                    "isNullable": false,
                    "_": 69,
                    "source": " EasingOptions"
                  },
                  {
                    "core": "string",
                    "isNullable": false,
                    "_": 69,
                    "source": " string"
                  },
                  {
                    "ref": "CustomEasingFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 69,
                    "source": " CustomEasingFunction"
                  },
                  {
                    "ctor": false,
                    "generics": [],
                    "returns": {
                      "core": "string",
                      "isNullable": false,
                      "_": 69,
                      "source": " string"
                    },
                    "params": [
                      {
                        "name": "el",
                        "type": {
                          "ref": "HTMLElement",
                          "targs": [],
                          "isNullable": false,
                          "_": 69,
                          "source": " HTMLElement"
                        },
                        "varargs": false,
                        "isNullable": false
                      }
                    ],
                    "isNullable": false,
                    "_": 69,
                    "source": " ((el: HTMLElement) => string)"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 69,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 69,
                "source": " EasingOptions | string | CustomEasingFunction | ((el: HTMLElement) => string) | undefined"
              }
            }
          ],
          "calls": [],
          "isClass": false
        },
        {
          "_": 74,
          "name": "AnimeParams",
          "generics": [],
          "doc": "",
          "heritage": [
            [
              {
                "ref": "AnimeInstanceParams",
                "targs": [],
                "isNullable": false,
                "_": 74,
                "source": " AnimeInstanceParams"
              },
              {
                "ref": "AnimeAnimParams",
                "targs": [],
                "isNullable": false,
                "_": 74,
                "source": " AnimeAnimParams"
              }
            ]
          ],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [],
          "calls": [],
          "isClass": false
        },
        {
          "_": 78,
          "name": "Animatable",
          "generics": [],
          "doc": "",
          "heritage": [],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": false,
              "_": 79,
              "source": "\n        id: number;",
              "name": "id",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 79,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 80,
              "source": "\n        target: HTMLElement;",
              "name": "target",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "ref": "HTMLElement",
                "targs": [],
                "isNullable": false,
                "_": 80,
                "source": " HTMLElement"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 81,
              "source": "\n        total: number;",
              "name": "total",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 81,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 82,
              "source": "\n        transforms: object;",
              "name": "transforms",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "object",
                "isNullable": false,
                "_": 82,
                "source": " object"
              }
            }
          ],
          "calls": [],
          "isClass": false
        },
        {
          "_": 85,
          "name": "Animation",
          "generics": [],
          "doc": "",
          "heritage": [],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": false,
              "_": 86,
              "source": "\n        animatable: Animatable;",
              "name": "animatable",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "ref": "Animatable",
                "targs": [],
                "isNullable": false,
                "_": 86,
                "source": " Animatable"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 87,
              "source": "\n        currentValue: string;",
              "name": "currentValue",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "string",
                "isNullable": false,
                "_": 87,
                "source": " string"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 88,
              "source": "\n        delay: number;",
              "name": "delay",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 88,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 89,
              "source": "\n        duration: number;",
              "name": "duration",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 89,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 90,
              "source": "\n        endDelay: number;",
              "name": "endDelay",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 90,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 91,
              "source": "\n        property: string;",
              "name": "property",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "string",
                "isNullable": false,
                "_": 91,
                "source": " string"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 92,
              "source": "\n        tweens: ReadonlyArray<object>;",
              "name": "tweens",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "ref": "ReadonlyArray",
                "targs": [
                  {
                    "core": "object",
                    "isNullable": false,
                    "_": 92,
                    "source": "object"
                  }
                ],
                "isNullable": false,
                "_": 92,
                "source": " ReadonlyArray<object>"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 93,
              "source": "\n        type: string;",
              "name": "type",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "string",
                "isNullable": false,
                "_": 93,
                "source": " string"
              }
            }
          ],
          "calls": [],
          "isClass": false
        },
        {
          "_": 96,
          "name": "AnimeInstance",
          "generics": [],
          "doc": "",
          "heritage": [
            [
              {
                "ref": "AnimeCallBack",
                "targs": [],
                "isNullable": false,
                "_": 96,
                "source": " AnimeCallBack"
              }
            ]
          ],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": true,
              "_": 97,
              "source": "\n        play(): void;",
              "name": "play",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "params": [],
              "type": {
                "core": "void",
                "isNullable": false,
                "_": 97,
                "source": " void"
              }
            },
            {
              "doc": "",
              "isMethod": true,
              "_": 98,
              "source": "\n        pause(): void;",
              "name": "pause",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "params": [],
              "type": {
                "core": "void",
                "isNullable": false,
                "_": 98,
                "source": " void"
              }
            },
            {
              "doc": "",
              "isMethod": true,
              "_": 99,
              "source": "\n        restart(): void;",
              "name": "restart",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "params": [],
              "type": {
                "core": "void",
                "isNullable": false,
                "_": 99,
                "source": " void"
              }
            },
            {
              "doc": "",
              "isMethod": true,
              "_": 100,
              "source": "\n        reverse(): void;",
              "name": "reverse",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "params": [],
              "type": {
                "core": "void",
                "isNullable": false,
                "_": 100,
                "source": " void"
              }
            },
            {
              "doc": "",
              "isMethod": true,
              "_": 101,
              "source": "\n        seek(time: number): void;",
              "name": "seek",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "params": [
                {
                  "name": "time",
                  "type": {
                    "core": "number",
                    "isNullable": false,
                    "_": 101,
                    "source": " number"
                  },
                  "varargs": false,
                  "isNullable": false
                }
              ],
              "type": {
                "core": "void",
                "isNullable": false,
                "_": 101,
                "source": " void"
              }
            },
            {
              "doc": "",
              "isMethod": true,
              "_": 102,
              "source": "\n        tick(time: number): void;",
              "name": "tick",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "params": [
                {
                  "name": "time",
                  "type": {
                    "core": "number",
                    "isNullable": false,
                    "_": 102,
                    "source": " number"
                  },
                  "varargs": false,
                  "isNullable": false
                }
              ],
              "type": {
                "core": "void",
                "isNullable": false,
                "_": 102,
                "source": " void"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 104,
              "source": "\n\n        began: boolean;",
              "name": "began",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "boolean",
                "isNullable": false,
                "_": 104,
                "source": " boolean"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 105,
              "source": "\n        paused: boolean;",
              "name": "paused",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "boolean",
                "isNullable": false,
                "_": 105,
                "source": " boolean"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 106,
              "source": "\n        completed: boolean;",
              "name": "completed",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "boolean",
                "isNullable": false,
                "_": 106,
                "source": " boolean"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 107,
              "source": "\n        finished: Promise<void>;",
              "name": "finished",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "ref": "Promise",
                "targs": [
                  {
                    "core": "void",
                    "isNullable": false,
                    "_": 107,
                    "source": "void"
                  }
                ],
                "isNullable": false,
                "_": 107,
                "source": " Promise<void>"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 109,
              "source": "\n\n        autoplay: boolean;",
              "name": "autoplay",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "boolean",
                "isNullable": false,
                "_": 109,
                "source": " boolean"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 110,
              "source": "\n        currentTime: number;",
              "name": "currentTime",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 110,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 111,
              "source": "\n        delay: number;",
              "name": "delay",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 111,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 112,
              "source": "\n        direction: string;",
              "name": "direction",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "string",
                "isNullable": false,
                "_": 112,
                "source": " string"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 113,
              "source": "\n        duration: number;",
              "name": "duration",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 113,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 114,
              "source": "\n        loop: number | boolean;",
              "name": "loop",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 114,
                    "source": " number"
                  },
                  {
                    "core": "boolean",
                    "isNullable": false,
                    "_": 114,
                    "source": " boolean"
                  }
                ],
                "isNullable": false,
                "_": 114,
                "source": " number | boolean"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 115,
              "source": "\n        timelineOffset: number;",
              "name": "timelineOffset",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 115,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 116,
              "source": "\n        progress: number;",
              "name": "progress",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 116,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 117,
              "source": "\n        remaining: number;",
              "name": "remaining",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 117,
                "source": " number"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 118,
              "source": "\n        reversed: boolean;",
              "name": "reversed",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "boolean",
                "isNullable": false,
                "_": 118,
                "source": " boolean"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 120,
              "source": "\n\n        animatables: ReadonlyArray<Animatable>;",
              "name": "animatables",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "ref": "ReadonlyArray",
                "targs": [
                  {
                    "ref": "Animatable",
                    "targs": [],
                    "isNullable": false,
                    "_": 120,
                    "source": "Animatable"
                  }
                ],
                "isNullable": false,
                "_": 120,
                "source": " ReadonlyArray<Animatable>"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 121,
              "source": "\n        animations: ReadonlyArray<Animation>;",
              "name": "animations",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "ref": "ReadonlyArray",
                "targs": [
                  {
                    "ref": "Animation",
                    "targs": [],
                    "isNullable": false,
                    "_": 121,
                    "source": "Animation"
                  }
                ],
                "isNullable": false,
                "_": 121,
                "source": " ReadonlyArray<Animation>"
              }
            }
          ],
          "calls": [],
          "isClass": false
        },
        {
          "_": 124,
          "name": "AnimeTimelineAnimParams",
          "generics": [],
          "doc": "",
          "heritage": [
            [
              {
                "ref": "AnimeAnimParams",
                "targs": [],
                "isNullable": false,
                "_": 124,
                "source": " AnimeAnimParams"
              }
            ]
          ],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": false,
              "_": 125,
              "source": "\n        timelineOffset: number | string | FunctionBasedParameter;",
              "name": "timelineOffset",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 125,
                    "source": " number"
                  },
                  {
                    "core": "string",
                    "isNullable": false,
                    "_": 125,
                    "source": " string"
                  },
                  {
                    "ref": "FunctionBasedParameter",
                    "targs": [],
                    "isNullable": false,
                    "_": 125,
                    "source": " FunctionBasedParameter"
                  }
                ],
                "isNullable": false,
                "_": 125,
                "source": " number | string | FunctionBasedParameter"
              }
            }
          ],
          "calls": [],
          "isClass": false
        },
        {
          "_": 128,
          "name": "AnimeTimelineInstance",
          "generics": [],
          "doc": "",
          "heritage": [
            [
              {
                "ref": "AnimeInstance",
                "targs": [],
                "isNullable": false,
                "_": 128,
                "source": " AnimeInstance"
              }
            ]
          ],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": true,
              "_": 129,
              "source": "\n        add(params: AnimeAnimParams, timelineOffset?: string | number): AnimeTimelineInstance;",
              "name": "add",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "params": [
                {
                  "name": "params",
                  "type": {
                    "ref": "AnimeAnimParams",
                    "targs": [],
                    "isNullable": false,
                    "_": 129,
                    "source": " AnimeAnimParams"
                  },
                  "varargs": false,
                  "isNullable": false
                },
                {
                  "name": "timelineOffset",
                  "type": {
                    "union": [
                      {
                        "core": "string",
                        "isNullable": false,
                        "_": 129,
                        "source": " string"
                      },
                      {
                        "core": "number",
                        "isNullable": false,
                        "_": 129,
                        "source": " number"
                      }
                    ],
                    "isNullable": false,
                    "_": 129,
                    "source": " string | number"
                  },
                  "varargs": false,
                  "isNullable": true
                }
              ],
              "type": {
                "ref": "AnimeTimelineInstance",
                "targs": [],
                "isNullable": false,
                "_": 129,
                "source": " AnimeTimelineInstance"
              }
            }
          ],
          "calls": [],
          "isClass": false
        },
        {
          "_": 132,
          "name": "StaggerOptions",
          "generics": [],
          "doc": "",
          "heritage": [],
          "isInline": false,
          "parent": "",
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": false,
              "_": 133,
              "source": "\n        start?: number | string | undefined;",
              "name": "start",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 133,
                    "source": " number"
                  },
                  {
                    "core": "string",
                    "isNullable": false,
                    "_": 133,
                    "source": " string"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 133,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 133,
                "source": " number | string | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 134,
              "source": "\n        direction?: \"normal\" | \"reverse\" | undefined;",
              "name": "direction",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "\"normal\"",
                    "isNullable": false,
                    "_": 134,
                    "source": " \"normal\""
                  },
                  {
                    "core": "\"reverse\"",
                    "isNullable": false,
                    "_": 134,
                    "source": " \"reverse\""
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 134,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 134,
                "source": " \"normal\" | \"reverse\" | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 135,
              "source": "\n        easing?: CustomEasingFunction | string | EasingOptions | undefined;",
              "name": "easing",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "CustomEasingFunction",
                    "targs": [],
                    "isNullable": false,
                    "_": 135,
                    "source": " CustomEasingFunction"
                  },
                  {
                    "core": "string",
                    "isNullable": false,
                    "_": 135,
                    "source": " string"
                  },
                  {
                    "ref": "EasingOptions",
                    "targs": [],
                    "isNullable": false,
                    "_": 135,
                    "source": " EasingOptions"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 135,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 135,
                "source": " CustomEasingFunction | string | EasingOptions | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 136,
              "source": "\n        grid?: ReadonlyArray<number> | undefined;",
              "name": "grid",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "ReadonlyArray",
                    "targs": [
                      {
                        "core": "number",
                        "isNullable": false,
                        "_": 136,
                        "source": "number"
                      }
                    ],
                    "isNullable": false,
                    "_": 136,
                    "source": " ReadonlyArray<number>"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 136,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 136,
                "source": " ReadonlyArray<number> | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 137,
              "source": "\n        axis?: \"x\" | \"y\" | undefined;",
              "name": "axis",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "\"x\"",
                    "isNullable": false,
                    "_": 137,
                    "source": " \"x\""
                  },
                  {
                    "core": "\"y\"",
                    "isNullable": false,
                    "_": 137,
                    "source": " \"y\""
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 137,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 137,
                "source": " \"x\" | \"y\" | undefined"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 138,
              "source": "\n        from?: \"first\" | \"last\" | \"center\" | number | undefined;",
              "name": "from",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": true,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "core": "\"first\"",
                    "isNullable": false,
                    "_": 138,
                    "source": " \"first\""
                  },
                  {
                    "core": "\"last\"",
                    "isNullable": false,
                    "_": 138,
                    "source": " \"last\""
                  },
                  {
                    "core": "\"center\"",
                    "isNullable": false,
                    "_": 138,
                    "source": " \"center\""
                  },
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 138,
                    "source": " number"
                  },
                  {
                    "core": "undefined",
                    "isNullable": false,
                    "_": 138,
                    "source": " undefined"
                  }
                ],
                "isNullable": false,
                "_": 138,
                "source": " \"first\" | \"last\" | \"center\" | number | undefined"
              }
            }
          ],
          "calls": [],
          "isClass": false
        },
        {
          "isClass": false,
          "_": -1,
          "name": "IInline0",
          "generics": [],
          "doc": "",
          "heritage": [],
          "isInline": true,
          "source": "",
          "indexes": [
            {
              "key": {
                "core": "string",
                "isNullable": false,
                "_": 145,
                "source": " string"
              },
              "value": {
                "ctor": false,
                "generics": [],
                "returns": {
                  "core": "any",
                  "isNullable": false,
                  "_": 145,
                  "source": " any"
                },
                "params": [
                  {
                    "name": "t",
                    "type": {
                      "core": "number",
                      "isNullable": false,
                      "_": 145,
                      "source": " number"
                    },
                    "varargs": false,
                    "isNullable": false
                  }
                ],
                "isNullable": false,
                "_": 145,
                "source": " (t: number) => any"
              },
              "doc": "",
              "_": 145,
              "source": " [EasingFunction: string]: (t: number) => any",
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false
            }
          ],
          "ctors": [],
          "members": [],
          "calls": []
        },
        {
          "isClass": false,
          "_": -1,
          "name": "IInline1",
          "generics": [],
          "doc": "",
          "heritage": [],
          "isInline": true,
          "source": "",
          "indexes": [],
          "ctors": [],
          "members": [
            {
              "doc": "",
              "isMethod": false,
              "_": 149,
              "source": "\n        el: HTMLElement | SVGElement;",
              "name": "el",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "union": [
                  {
                    "ref": "HTMLElement",
                    "targs": [],
                    "isNullable": false,
                    "_": 149,
                    "source": " HTMLElement"
                  },
                  {
                    "ref": "SVGElement",
                    "targs": [],
                    "isNullable": false,
                    "_": 149,
                    "source": " SVGElement"
                  }
                ],
                "isNullable": false,
                "_": 149,
                "source": " HTMLElement | SVGElement"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 150,
              "source": "\n        property: string;",
              "name": "property",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "string",
                "isNullable": false,
                "_": 150,
                "source": " string"
              }
            },
            {
              "doc": "",
              "isMethod": false,
              "_": 151,
              "source": "\n        totalLength: number;",
              "name": "totalLength",
              "generics": [],
              "isGetter": false,
              "isSetter": false,
              "isNullable": false,
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false,
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 151,
                "source": " number"
              }
            }
          ],
          "calls": []
        },
        {
          "isClass": false,
          "_": -1,
          "name": "IInline2",
          "generics": [],
          "doc": "",
          "heritage": [],
          "isInline": true,
          "source": "",
          "indexes": [
            {
              "key": {
                "core": "string",
                "isNullable": false,
                "_": 159,
                "source": " string"
              },
              "value": {
                "core": "any",
                "isNullable": false,
                "_": 159,
                "source": " any"
              },
              "doc": "",
              "_": 159,
              "source": " [AnyAnimatedProperty: string]: any",
              "isStatic": false,
              "isReadonly": false,
              "isPrivate": false
            }
          ],
          "ctors": [],
          "members": [],
          "calls": []
        }
      ],
      "typedefs": [
        {
          "name": "FunctionBasedParameter",
          "generics": [],
          "type": {
            "ctor": false,
            "generics": [],
            "returns": {
              "core": "number",
              "isNullable": false,
              "_": 1,
              "source": " number"
            },
            "params": [
              {
                "name": "element",
                "type": {
                  "ref": "HTMLElement",
                  "targs": [],
                  "isNullable": false,
                  "_": 1,
                  "source": " HTMLElement"
                },
                "varargs": false,
                "isNullable": false
              },
              {
                "name": "index",
                "type": {
                  "core": "number",
                  "isNullable": false,
                  "_": 1,
                  "source": " number"
                },
                "varargs": false,
                "isNullable": false
              },
              {
                "name": "length",
                "type": {
                  "core": "number",
                  "isNullable": false,
                  "_": 1,
                  "source": " number"
                },
                "varargs": false,
                "isNullable": false
              }
            ],
            "isNullable": false,
            "_": 1,
            "source": " (element: HTMLElement, index: number, length: number) => number",
            "parent": "FunctionBasedParameter"
          },
          "doc": "",
          "_": 1,
          "source": "type FunctionBasedParameter = (element: HTMLElement, index: number, length: number) => number;"
        },
        {
          "name": "AnimeCallbackFunction",
          "generics": [],
          "type": {
            "ctor": false,
            "generics": [],
            "returns": {
              "core": "void",
              "isNullable": false,
              "_": 2,
              "source": " void"
            },
            "params": [
              {
                "name": "anim",
                "type": {
                  "core": "any",
                  "isNullable": true,
                  "_": 165,
                  "source": " anime.AnimeParams"
                },
                "varargs": false,
                "isNullable": false
              }
            ],
            "isNullable": false,
            "_": 2,
            "source": " (anim: anime.AnimeInstance) => void",
            "parent": "AnimeCallbackFunction"
          },
          "doc": "",
          "_": 2,
          "source": "\ntype AnimeCallbackFunction = (anim: anime.AnimeInstance) => void;"
        },
        {
          "name": "CustomEasingFunction",
          "generics": [],
          "type": {
            "ctor": false,
            "generics": [],
            "returns": {
              "ctor": false,
              "generics": [],
              "returns": {
                "core": "number",
                "isNullable": false,
                "_": 3,
                "source": " number"
              },
              "params": [
                {
                  "name": "time",
                  "type": {
                    "core": "number",
                    "isNullable": false,
                    "_": 3,
                    "source": " number"
                  },
                  "varargs": false,
                  "isNullable": false
                }
              ],
              "isNullable": false,
              "_": 3,
              "source": " (time: number) => number"
            },
            "params": [
              {
                "name": "el",
                "type": {
                  "ref": "HTMLElement",
                  "targs": [],
                  "isNullable": false,
                  "_": 3,
                  "source": " HTMLElement"
                },
                "varargs": false,
                "isNullable": false
              },
              {
                "name": "index",
                "type": {
                  "core": "number",
                  "isNullable": false,
                  "_": 3,
                  "source": " number"
                },
                "varargs": false,
                "isNullable": false
              },
              {
                "name": "length",
                "type": {
                  "core": "number",
                  "isNullable": false,
                  "_": 3,
                  "source": " number"
                },
                "varargs": false,
                "isNullable": false
              }
            ],
            "isNullable": false,
            "_": 3,
            "source": " (el: HTMLElement, index: number, length: number) => (time: number) => number",
            "parent": "CustomEasingFunction"
          },
          "doc": "",
          "_": 3,
          "source": "\ntype CustomEasingFunction = (el: HTMLElement, index: number, length: number) => (time: number) => number;"
        },
        {
          "name": "AnimeTarget",
          "generics": [],
          "type": {
            "union": [
              {
                "core": "string",
                "isNullable": false,
                "_": 5,
                "source": " string"
              },
              {
                "core": "object",
                "isNullable": false,
                "_": 5,
                "source": " object"
              },
              {
                "ref": "HTMLElement",
                "targs": [],
                "isNullable": false,
                "_": 5,
                "source": " HTMLElement"
              },
              {
                "ref": "SVGElement",
                "targs": [],
                "isNullable": false,
                "_": 5,
                "source": " SVGElement"
              },
              {
                "ref": "NodeList",
                "targs": [],
                "isNullable": false,
                "_": 5,
                "source": " NodeList"
              },
              {
                "core": "null",
                "isNullable": false,
                "_": 5,
                "source": " null"
              }
            ],
            "isNullable": false,
            "_": 5,
            "source": " string | object | HTMLElement | SVGElement | NodeList | null",
            "parent": "AnimeTarget"
          },
          "doc": "",
          "_": 5,
          "source": "\n// Allowing null is necessary because DOM queries may not return anything.\ntype AnimeTarget = string | object | HTMLElement | SVGElement | NodeList | null;"
        },
        {
          "name": "EasingOptions",
          "generics": [],
          "type": {
            "union": [
              {
                "core": "\"linear\"",
                "isNullable": false,
                "_": 9,
                "source": " \"linear\""
              },
              {
                "core": "\"easeInQuad\"",
                "isNullable": false,
                "_": 10,
                "source": " \"easeInQuad\""
              },
              {
                "core": "\"easeInCubic\"",
                "isNullable": false,
                "_": 11,
                "source": " \"easeInCubic\""
              },
              {
                "core": "\"easeInQuart\"",
                "isNullable": false,
                "_": 12,
                "source": " \"easeInQuart\""
              },
              {
                "core": "\"easeInQuint\"",
                "isNullable": false,
                "_": 13,
                "source": " \"easeInQuint\""
              },
              {
                "core": "\"easeInSine\"",
                "isNullable": false,
                "_": 14,
                "source": " \"easeInSine\""
              },
              {
                "core": "\"easeInExpo\"",
                "isNullable": false,
                "_": 15,
                "source": " \"easeInExpo\""
              },
              {
                "core": "\"easeInCirc\"",
                "isNullable": false,
                "_": 16,
                "source": " \"easeInCirc\""
              },
              {
                "core": "\"easeInBack\"",
                "isNullable": false,
                "_": 17,
                "source": " \"easeInBack\""
              },
              {
                "core": "\"easeInElastic\"",
                "isNullable": false,
                "_": 18,
                "source": " \"easeInElastic\""
              },
              {
                "core": "\"easeInBounce\"",
                "isNullable": false,
                "_": 19,
                "source": " \"easeInBounce\""
              },
              {
                "core": "\"easeOutQuad\"",
                "isNullable": false,
                "_": 20,
                "source": " \"easeOutQuad\""
              },
              {
                "core": "\"easeOutCubic\"",
                "isNullable": false,
                "_": 21,
                "source": " \"easeOutCubic\""
              },
              {
                "core": "\"easeOutQuart\"",
                "isNullable": false,
                "_": 22,
                "source": " \"easeOutQuart\""
              },
              {
                "core": "\"easeOutQuint\"",
                "isNullable": false,
                "_": 23,
                "source": " \"easeOutQuint\""
              },
              {
                "core": "\"easeOutSine\"",
                "isNullable": false,
                "_": 24,
                "source": " \"easeOutSine\""
              },
              {
                "core": "\"easeOutExpo\"",
                "isNullable": false,
                "_": 25,
                "source": " \"easeOutExpo\""
              },
              {
                "core": "\"easeOutCirc\"",
                "isNullable": false,
                "_": 26,
                "source": " \"easeOutCirc\""
              },
              {
                "core": "\"easeOutBack\"",
                "isNullable": false,
                "_": 27,
                "source": " \"easeOutBack\""
              },
              {
                "core": "\"easeOutElastic\"",
                "isNullable": false,
                "_": 28,
                "source": " \"easeOutElastic\""
              },
              {
                "core": "\"easeOutBounce\"",
                "isNullable": false,
                "_": 29,
                "source": " \"easeOutBounce\""
              },
              {
                "core": "\"easeInOutQuad\"",
                "isNullable": false,
                "_": 30,
                "source": " \"easeInOutQuad\""
              },
              {
                "core": "\"easeInOutCubic\"",
                "isNullable": false,
                "_": 31,
                "source": " \"easeInOutCubic\""
              },
              {
                "core": "\"easeInOutQuart\"",
                "isNullable": false,
                "_": 32,
                "source": " \"easeInOutQuart\""
              },
              {
                "core": "\"easeInOutQuint\"",
                "isNullable": false,
                "_": 33,
                "source": " \"easeInOutQuint\""
              },
              {
                "core": "\"easeInOutSine\"",
                "isNullable": false,
                "_": 34,
                "source": " \"easeInOutSine\""
              },
              {
                "core": "\"easeInOutExpo\"",
                "isNullable": false,
                "_": 35,
                "source": " \"easeInOutExpo\""
              },
              {
                "core": "\"easeInOutCirc\"",
                "isNullable": false,
                "_": 36,
                "source": " \"easeInOutCirc\""
              },
              {
                "core": "\"easeInOutBack\"",
                "isNullable": false,
                "_": 37,
                "source": " \"easeInOutBack\""
              },
              {
                "core": "\"easeInOutElastic\"",
                "isNullable": false,
                "_": 38,
                "source": " \"easeInOutElastic\""
              },
              {
                "core": "\"easeInOutBounce\"",
                "isNullable": false,
                "_": 39,
                "source": " \"easeInOutBounce\""
              }
            ],
            "isNullable": false,
            "_": 9,
            "source": "\n        | \"linear\"\n        | \"easeInQuad\"\n        | \"easeInCubic\"\n        | \"easeInQuart\"\n        | \"easeInQuint\"\n        | \"easeInSine\"\n        | \"easeInExpo\"\n        | \"easeInCirc\"\n        | \"easeInBack\"\n        | \"easeInElastic\"\n        | \"easeInBounce\"\n        | \"easeOutQuad\"\n        | \"easeOutCubic\"\n        | \"easeOutQuart\"\n        | \"easeOutQuint\"\n        | \"easeOutSine\"\n        | \"easeOutExpo\"\n        | \"easeOutCirc\"\n        | \"easeOutBack\"\n        | \"easeOutElastic\"\n        | \"easeOutBounce\"\n        | \"easeInOutQuad\"\n        | \"easeInOutCubic\"\n        | \"easeInOutQuart\"\n        | \"easeInOutQuint\"\n        | \"easeInOutSine\"\n        | \"easeInOutExpo\"\n        | \"easeInOutCirc\"\n        | \"easeInOutBack\"\n        | \"easeInOutElastic\"\n        | \"easeInOutBounce\"",
            "parent": "EasingOptions"
          },
          "doc": "",
          "_": 8,
          "source": "\n    type EasingOptions =\n        | \"linear\"\n        | \"easeInQuad\"\n        | \"easeInCubic\"\n        | \"easeInQuart\"\n        | \"easeInQuint\"\n        | \"easeInSine\"\n        | \"easeInExpo\"\n        | \"easeInCirc\"\n        | \"easeInBack\"\n        | \"easeInElastic\"\n        | \"easeInBounce\"\n        | \"easeOutQuad\"\n        | \"easeOutCubic\"\n        | \"easeOutQuart\"\n        | \"easeOutQuint\"\n        | \"easeOutSine\"\n        | \"easeOutExpo\"\n        | \"easeOutCirc\"\n        | \"easeOutBack\"\n        | \"easeOutElastic\"\n        | \"easeOutBounce\"\n        | \"easeInOutQuad\"\n        | \"easeInOutCubic\"\n        | \"easeInOutQuart\"\n        | \"easeInOutQuint\"\n        | \"easeInOutSine\"\n        | \"easeInOutExpo\"\n        | \"easeInOutCirc\"\n        | \"easeInOutBack\"\n        | \"easeInOutElastic\"\n        | \"easeInOutBounce\";"
        },
        {
          "name": "DirectionOptions",
          "generics": [],
          "type": {
            "union": [
              {
                "core": "\"reverse\"",
                "isNullable": false,
                "_": 40,
                "source": " \"reverse\""
              },
              {
                "core": "\"alternate\"",
                "isNullable": false,
                "_": 40,
                "source": " \"alternate\""
              },
              {
                "core": "\"normal\"",
                "isNullable": false,
                "_": 40,
                "source": " \"normal\""
              }
            ],
            "isNullable": false,
            "_": 40,
            "source": " \"reverse\" | \"alternate\" | \"normal\"",
            "parent": "DirectionOptions"
          },
          "doc": "",
          "_": 40,
          "source": "\n    type DirectionOptions = \"reverse\" | \"alternate\" | \"normal\";"
        }
      ],
      "modules": [],
      "funcs": [
        {
          "_": 146,
          "name": "remove",
          "type": {
            "core": "void",
            "isNullable": false,
            "_": 146,
            "source": " void"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "targets",
              "type": {
                "union": [
                  {
                    "ref": "AnimeTarget",
                    "targs": [],
                    "isNullable": false,
                    "_": 146,
                    "source": " AnimeTarget"
                  },
                  {
                    "ref": "ReadonlyArray",
                    "targs": [
                      {
                        "ref": "AnimeTarget",
                        "targs": [],
                        "isNullable": false,
                        "_": 146,
                        "source": "AnimeTarget"
                      }
                    ],
                    "isNullable": false,
                    "_": 146,
                    "source": " ReadonlyArray<AnimeTarget>"
                  }
                ],
                "isNullable": false,
                "_": 146,
                "source": " AnimeTarget | ReadonlyArray<AnimeTarget>"
              },
              "varargs": false,
              "isNullable": false
            }
          ],
          "source": "\n    function remove(targets: AnimeTarget | ReadonlyArray<AnimeTarget>): void;"
        },
        {
          "_": 147,
          "name": "get",
          "type": {
            "union": [
              {
                "core": "string",
                "isNullable": false,
                "_": 147,
                "source": " string"
              },
              {
                "core": "number",
                "isNullable": false,
                "_": 147,
                "source": " number"
              }
            ],
            "isNullable": false,
            "_": 147,
            "source": " string | number"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "targets",
              "type": {
                "ref": "AnimeTarget",
                "targs": [],
                "isNullable": false,
                "_": 147,
                "source": " AnimeTarget"
              },
              "varargs": false,
              "isNullable": false
            },
            {
              "name": "prop",
              "type": {
                "core": "string",
                "isNullable": false,
                "_": 147,
                "source": " string"
              },
              "varargs": false,
              "isNullable": false
            },
            {
              "name": "unit",
              "type": {
                "core": "string",
                "isNullable": false,
                "_": 147,
                "source": " string"
              },
              "varargs": false,
              "isNullable": true
            }
          ],
          "source": "\n    function get(targets: AnimeTarget, prop: string, unit?: string): string | number;"
        },
        {
          "_": 148,
          "name": "path",
          "type": {
            "ctor": false,
            "generics": [],
            "returns": {
              "ref": "IInline1",
              "targs": [],
              "isNullable": false,
              "_": 148,
              "source": " {\n        el: HTMLElement | SVGElement;\n        property: string;\n        totalLength: number;\n    }"
            },
            "params": [
              {
                "name": "prop",
                "type": {
                  "core": "string",
                  "isNullable": false,
                  "_": 148,
                  "source": " string"
                },
                "varargs": false,
                "isNullable": false
              }
            ],
            "isNullable": false,
            "_": 148,
            "source": " (prop: string) => {\n        el: HTMLElement | SVGElement;\n        property: string;\n        totalLength: number;\n    }"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "path",
              "type": {
                "union": [
                  {
                    "core": "string",
                    "isNullable": false,
                    "_": 148,
                    "source": " string"
                  },
                  {
                    "ref": "HTMLElement",
                    "targs": [],
                    "isNullable": false,
                    "_": 148,
                    "source": " HTMLElement"
                  },
                  {
                    "ref": "SVGElement",
                    "targs": [],
                    "isNullable": false,
                    "_": 148,
                    "source": " SVGElement"
                  },
                  {
                    "core": "null",
                    "isNullable": false,
                    "_": 148,
                    "source": " null"
                  }
                ],
                "isNullable": false,
                "_": 148,
                "source": " string | HTMLElement | SVGElement | null"
              },
              "varargs": false,
              "isNullable": false
            },
            {
              "name": "percent",
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 148,
                "source": " number"
              },
              "varargs": false,
              "isNullable": true
            }
          ],
          "source": "\n    function path(path: string | HTMLElement | SVGElement | null, percent?: number): (prop: string) => {\n        el: HTMLElement | SVGElement;\n        property: string;\n        totalLength: number;\n    };"
        },
        {
          "_": 153,
          "name": "setDashoffset",
          "type": {
            "core": "number",
            "isNullable": false,
            "_": 153,
            "source": " number"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "el",
              "type": {
                "union": [
                  {
                    "ref": "HTMLElement",
                    "targs": [],
                    "isNullable": false,
                    "_": 153,
                    "source": " HTMLElement"
                  },
                  {
                    "ref": "SVGElement",
                    "targs": [],
                    "isNullable": false,
                    "_": 153,
                    "source": " SVGElement"
                  },
                  {
                    "core": "null",
                    "isNullable": false,
                    "_": 153,
                    "source": " null"
                  }
                ],
                "isNullable": false,
                "_": 153,
                "source": " HTMLElement | SVGElement | null"
              },
              "varargs": false,
              "isNullable": false
            }
          ],
          "source": "\n    function setDashoffset(el: HTMLElement | SVGElement | null): number;"
        },
        {
          "_": 154,
          "name": "bezier",
          "type": {
            "ctor": false,
            "generics": [],
            "returns": {
              "core": "number",
              "isNullable": false,
              "_": 154,
              "source": " number"
            },
            "params": [
              {
                "name": "t",
                "type": {
                  "core": "number",
                  "isNullable": false,
                  "_": 154,
                  "source": " number"
                },
                "varargs": false,
                "isNullable": false
              }
            ],
            "isNullable": false,
            "_": 154,
            "source": " (t: number) => number"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "x1",
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 154,
                "source": " number"
              },
              "varargs": false,
              "isNullable": false
            },
            {
              "name": "y1",
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 154,
                "source": " number"
              },
              "varargs": false,
              "isNullable": false
            },
            {
              "name": "x2",
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 154,
                "source": " number"
              },
              "varargs": false,
              "isNullable": false
            },
            {
              "name": "y2",
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 154,
                "source": " number"
              },
              "varargs": false,
              "isNullable": false
            }
          ],
          "source": "\n    function bezier(x1: number, y1: number, x2: number, y2: number): (t: number) => number;"
        },
        {
          "_": 155,
          "name": "stagger",
          "type": {
            "ref": "FunctionBasedParameter",
            "targs": [],
            "isNullable": false,
            "_": 158,
            "source": " FunctionBasedParameter"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "value",
              "type": {
                "union": [
                  {
                    "core": "number",
                    "isNullable": false,
                    "_": 156,
                    "source": " number"
                  },
                  {
                    "core": "string",
                    "isNullable": false,
                    "_": 156,
                    "source": " string"
                  },
                  {
                    "ref": "ReadonlyArray",
                    "targs": [
                      {
                        "union": [
                          {
                            "core": "number",
                            "isNullable": false,
                            "_": 156,
                            "source": "number"
                          },
                          {
                            "core": "string",
                            "isNullable": false,
                            "_": 156,
                            "source": " string"
                          }
                        ],
                        "isNullable": false,
                        "_": 156,
                        "source": "number | string"
                      }
                    ],
                    "isNullable": false,
                    "_": 156,
                    "source": " ReadonlyArray<number | string>"
                  }
                ],
                "isNullable": false,
                "_": 156,
                "source": " number | string | ReadonlyArray<number | string>"
              },
              "varargs": false,
              "isNullable": false
            },
            {
              "name": "options",
              "type": {
                "ref": "StaggerOptions",
                "targs": [],
                "isNullable": false,
                "_": 157,
                "source": " StaggerOptions"
              },
              "varargs": false,
              "isNullable": true
            }
          ],
          "source": "\n    function stagger(\n        value: number | string | ReadonlyArray<number | string>,\n        options?: StaggerOptions,\n    ): FunctionBasedParameter;"
        },
        {
          "_": 159,
          "name": "set",
          "type": {
            "core": "void",
            "isNullable": false,
            "_": 159,
            "source": " void"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "targets",
              "type": {
                "ref": "AnimeTarget",
                "targs": [],
                "isNullable": false,
                "_": 159,
                "source": " AnimeTarget"
              },
              "varargs": false,
              "isNullable": false
            },
            {
              "name": "value",
              "type": {
                "ref": "IInline2",
                "targs": [],
                "isNullable": false,
                "_": 159,
                "source": " { [AnyAnimatedProperty: string]: any }"
              },
              "varargs": false,
              "isNullable": false
            }
          ],
          "source": "\n    function set(targets: AnimeTarget, value: { [AnyAnimatedProperty: string]: any }): void;"
        },
        {
          "_": 161,
          "name": "timeline",
          "type": {
            "ref": "AnimeTimelineInstance",
            "targs": [],
            "isNullable": false,
            "_": 161,
            "source": " AnimeTimelineInstance"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "params",
              "type": {
                "union": [
                  {
                    "ref": "AnimeParams",
                    "targs": [],
                    "isNullable": false,
                    "_": 161,
                    "source": " AnimeParams"
                  },
                  {
                    "ref": "ReadonlyArray",
                    "targs": [
                      {
                        "ref": "AnimeInstance",
                        "targs": [],
                        "isNullable": false,
                        "_": 161,
                        "source": "AnimeInstance"
                      }
                    ],
                    "isNullable": false,
                    "_": 161,
                    "source": " ReadonlyArray<AnimeInstance>"
                  }
                ],
                "isNullable": false,
                "_": 161,
                "source": " AnimeParams | ReadonlyArray<AnimeInstance>"
              },
              "varargs": false,
              "isNullable": true
            }
          ],
          "source": "\n    // Timeline\n    function timeline(params?: AnimeParams | ReadonlyArray<AnimeInstance>): AnimeTimelineInstance;"
        },
        {
          "_": 162,
          "name": "random",
          "type": {
            "core": "number",
            "isNullable": false,
            "_": 162,
            "source": " number"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "min",
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 162,
                "source": " number"
              },
              "varargs": false,
              "isNullable": false
            },
            {
              "name": "max",
              "type": {
                "core": "number",
                "isNullable": false,
                "_": 162,
                "source": " number"
              },
              "varargs": false,
              "isNullable": false
            }
          ],
          "source": "\n    function random(min: number, max: number): number;"
        },
        {
          "_": 165,
          "name": "anime",
          "type": {
            "core": "any",
            "isNullable": true,
            "_": 165,
            "source": " anime.AnimeParams"
          },
          "generics": [],
          "doc": "",
          "params": [
            {
              "name": "params",
              "type": {
                "core": "any",
                "isNullable": true,
                "_": 165,
                "source": " anime.AnimeParams"
              },
              "varargs": false,
              "isNullable": false
            }
          ],
          "source": "\n\ndeclare function anime(params: anime.AnimeParams): anime.AnimeInstance;"
        }
      ],
      "vars": [
        {
          "_": 142,
          "name": "version",
          "isReadonly": true,
          "isStatic": false,
          "isNullable": false,
          "doc": "",
          "type": {
            "core": "string",
            "isNullable": false,
            "_": 142,
            "source": " string"
          },
          "source": " version: string"
        },
        {
          "_": 143,
          "name": "speed",
          "isReadonly": true,
          "isStatic": false,
          "isNullable": false,
          "doc": "",
          "type": {
            "core": "number",
            "isNullable": false,
            "_": 143,
            "source": " number"
          },
          "source": " speed: number"
        },
        {
          "_": 144,
          "name": "running",
          "isReadonly": true,
          "isStatic": false,
          "isNullable": false,
          "doc": "",
          "type": {
            "core": "array",
            "targs": [
              {
                "ref": "AnimeInstance",
                "targs": [],
                "isNullable": false,
                "_": 144,
                "source": " AnimeInstance"
              }
            ],
            "isNullable": false,
            "_": 144,
            "source": " AnimeInstance[]"
          },
          "source": " running: AnimeInstance[]"
        },
        {
          "_": 145,
          "name": "easings",
          "isReadonly": true,
          "isStatic": false,
          "isNullable": false,
          "doc": "",
          "type": {
            "ref": "IInline0",
            "targs": [],
            "isNullable": false,
            "_": 145,
            "source": " { [EasingFunction: string]: (t: number) => any }"
          },
          "source": " easings: { [EasingFunction: string]: (t: number) => any }"
        }
      ],
      "enums": [],
      "imports": []
    },
    "file": "/Users/jonathanrezende/Projects/testes/typings/typings/work/animejs/out/temp/https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/animejs/index.d.ts",
    "name": "index.d.ts"
  }
]